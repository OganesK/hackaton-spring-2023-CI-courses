### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Article {
  createdAt: DateTime!
  crowdfunding: CrowdFunding
  id: Int!
  post: Post
  project: Project
  sections(after: SectionWhereUniqueInput, before: SectionWhereUniqueInput, first: Int, last: Int, orderBy: [ArticleSectionsOrderByInput!]): [Section!]!
}

input ArticleCreateNestedOneWithoutCrowdfundingInput {
  connect: ArticleWhereUniqueInput
  connectOrCreate: ArticleCreateOrConnectWithoutCrowdfundingInput
  create: ArticleCreateWithoutCrowdfundingInput
}

input ArticleCreateNestedOneWithoutPostInput {
  connect: ArticleWhereUniqueInput
  connectOrCreate: ArticleCreateOrConnectWithoutPostInput
  create: ArticleCreateWithoutPostInput
}

input ArticleCreateNestedOneWithoutProjectInput {
  connect: ArticleWhereUniqueInput
  connectOrCreate: ArticleCreateOrConnectWithoutProjectInput
  create: ArticleCreateWithoutProjectInput
}

input ArticleCreateNestedOneWithoutSectionsInput {
  connect: ArticleWhereUniqueInput
  connectOrCreate: ArticleCreateOrConnectWithoutSectionsInput
  create: ArticleCreateWithoutSectionsInput
}

input ArticleCreateOrConnectWithoutCrowdfundingInput {
  create: ArticleCreateWithoutCrowdfundingInput!
  where: ArticleWhereUniqueInput!
}

input ArticleCreateOrConnectWithoutPostInput {
  create: ArticleCreateWithoutPostInput!
  where: ArticleWhereUniqueInput!
}

input ArticleCreateOrConnectWithoutProjectInput {
  create: ArticleCreateWithoutProjectInput!
  where: ArticleWhereUniqueInput!
}

input ArticleCreateOrConnectWithoutSectionsInput {
  create: ArticleCreateWithoutSectionsInput!
  where: ArticleWhereUniqueInput!
}

input ArticleCreateWithoutCrowdfundingInput {
  createdAt: DateTime
  post: PostCreateNestedOneWithoutArticleInput
  project: ProjectCreateNestedOneWithoutDescriptionInput
  sections: SectionCreateNestedManyWithoutArticleInput
}

input ArticleCreateWithoutPostInput {
  createdAt: DateTime
  crowdfunding: CrowdFundingCreateNestedOneWithoutStoryInput
  project: ProjectCreateNestedOneWithoutDescriptionInput
  sections: SectionCreateNestedManyWithoutArticleInput
}

input ArticleCreateWithoutProjectInput {
  createdAt: DateTime
  crowdfunding: CrowdFundingCreateNestedOneWithoutStoryInput
  post: PostCreateNestedOneWithoutArticleInput
  sections: SectionCreateNestedManyWithoutArticleInput
}

input ArticleCreateWithoutSectionsInput {
  createdAt: DateTime
  crowdfunding: CrowdFundingCreateNestedOneWithoutStoryInput
  post: PostCreateNestedOneWithoutArticleInput
  project: ProjectCreateNestedOneWithoutDescriptionInput
}

input ArticleOrderByWithRelationInput {
  cfId: SortOrder
  createdAt: SortOrder
  crowdfunding: CrowdFundingOrderByWithRelationInput
  id: SortOrder
  post: PostOrderByWithRelationInput
  postID: SortOrder
  project: ProjectOrderByWithRelationInput
  projectId: SortOrder
  sections: SectionOrderByRelationAggregateInput
}

input ArticleSectionsOrderByInput {
  number: SortOrder
}

input ArticleUpdateOneRequiredWithoutSectionsInput {
  connect: ArticleWhereUniqueInput
  connectOrCreate: ArticleCreateOrConnectWithoutSectionsInput
  create: ArticleCreateWithoutSectionsInput
  update: ArticleUpdateWithoutSectionsInput
  upsert: ArticleUpsertWithoutSectionsInput
}

input ArticleUpdateOneWithoutCrowdfundingInput {
  connect: ArticleWhereUniqueInput
  connectOrCreate: ArticleCreateOrConnectWithoutCrowdfundingInput
  create: ArticleCreateWithoutCrowdfundingInput
  delete: Boolean
  disconnect: Boolean
  update: ArticleUpdateWithoutCrowdfundingInput
  upsert: ArticleUpsertWithoutCrowdfundingInput
}

input ArticleUpdateOneWithoutPostInput {
  connect: ArticleWhereUniqueInput
  connectOrCreate: ArticleCreateOrConnectWithoutPostInput
  create: ArticleCreateWithoutPostInput
  delete: Boolean
  disconnect: Boolean
  update: ArticleUpdateWithoutPostInput
  upsert: ArticleUpsertWithoutPostInput
}

input ArticleUpdateOneWithoutProjectInput {
  connect: ArticleWhereUniqueInput
  connectOrCreate: ArticleCreateOrConnectWithoutProjectInput
  create: ArticleCreateWithoutProjectInput
  delete: Boolean
  disconnect: Boolean
  update: ArticleUpdateWithoutProjectInput
  upsert: ArticleUpsertWithoutProjectInput
}

input ArticleUpdateWithoutCrowdfundingInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  post: PostUpdateOneWithoutArticleInput
  project: ProjectUpdateOneWithoutDescriptionInput
  sections: SectionUpdateManyWithoutArticleInput
}

input ArticleUpdateWithoutPostInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  crowdfunding: CrowdFundingUpdateOneWithoutStoryInput
  project: ProjectUpdateOneWithoutDescriptionInput
  sections: SectionUpdateManyWithoutArticleInput
}

input ArticleUpdateWithoutProjectInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  crowdfunding: CrowdFundingUpdateOneWithoutStoryInput
  post: PostUpdateOneWithoutArticleInput
  sections: SectionUpdateManyWithoutArticleInput
}

input ArticleUpdateWithoutSectionsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  crowdfunding: CrowdFundingUpdateOneWithoutStoryInput
  post: PostUpdateOneWithoutArticleInput
  project: ProjectUpdateOneWithoutDescriptionInput
}

input ArticleUpsertWithoutCrowdfundingInput {
  create: ArticleCreateWithoutCrowdfundingInput!
  update: ArticleUpdateWithoutCrowdfundingInput!
}

input ArticleUpsertWithoutPostInput {
  create: ArticleCreateWithoutPostInput!
  update: ArticleUpdateWithoutPostInput!
}

input ArticleUpsertWithoutProjectInput {
  create: ArticleCreateWithoutProjectInput!
  update: ArticleUpdateWithoutProjectInput!
}

input ArticleUpsertWithoutSectionsInput {
  create: ArticleCreateWithoutSectionsInput!
  update: ArticleUpdateWithoutSectionsInput!
}

input ArticleWhereInput {
  AND: [ArticleWhereInput!]
  NOT: [ArticleWhereInput!]
  OR: [ArticleWhereInput!]
  cfId: IntNullableFilter
  createdAt: DateTimeFilter
  crowdfunding: CrowdFundingWhereInput
  id: IntFilter
  post: PostWhereInput
  postID: IntNullableFilter
  project: ProjectWhereInput
  projectId: IntNullableFilter
  sections: SectionListRelationFilter
}

input ArticleWhereUniqueInput {
  cfId: Int
  id: Int
  postID: Int
  projectId: Int
}

type AuthPayload {
  token: String
  user: User
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

type Company {
  activityKind: filteringCategories!
  avatar: Media
  contact: Contact
  createdAt: DateTime!
  description: String
  id: Int!
  inn: String
  isApproved: Boolean
  mainContact: String
  mainRegion: String
  moderate: Moderation
  moderationChecked: Boolean
  name: String!
  owner: User!
  projects(after: ProjectWhereUniqueInput, before: ProjectWhereUniqueInput, first: Int, last: Int): [Project!]!
  shortDescription: String
}

input CompanyCreateManyAvatarInput {
  activityKind: filteringCategories!
  createdAt: DateTime
  description: String
  id: Int
  inn: String
  isApproved: Boolean
  mainContact: String
  mainRegion: String
  moderateId: Int
  moderationChecked: Boolean
  name: String!
  ownerID: Int!
  shortDescription: String
}

input CompanyCreateManyAvatarInputEnvelope {
  data: [CompanyCreateManyAvatarInput!]
  skipDuplicates: Boolean
}

input CompanyCreateManyOwnerInput {
  activityKind: filteringCategories!
  avatarId: Int
  createdAt: DateTime
  description: String
  id: Int
  inn: String
  isApproved: Boolean
  mainContact: String
  mainRegion: String
  moderateId: Int
  moderationChecked: Boolean
  name: String!
  shortDescription: String
}

input CompanyCreateManyOwnerInputEnvelope {
  data: [CompanyCreateManyOwnerInput!]
  skipDuplicates: Boolean
}

input CompanyCreateNestedManyWithoutAvatarInput {
  connect: [CompanyWhereUniqueInput!]
  connectOrCreate: [CompanyCreateOrConnectWithoutAvatarInput!]
  create: [CompanyCreateWithoutAvatarInput!]
  createMany: CompanyCreateManyAvatarInputEnvelope
}

input CompanyCreateNestedManyWithoutOwnerInput {
  connect: [CompanyWhereUniqueInput!]
  connectOrCreate: [CompanyCreateOrConnectWithoutOwnerInput!]
  create: [CompanyCreateWithoutOwnerInput!]
  createMany: CompanyCreateManyOwnerInputEnvelope
}

input CompanyCreateNestedOneWithoutContactInput {
  connect: CompanyWhereUniqueInput
  connectOrCreate: CompanyCreateOrConnectWithoutContactInput
  create: CompanyCreateWithoutContactInput
}

input CompanyCreateNestedOneWithoutModerateInput {
  connect: CompanyWhereUniqueInput
  connectOrCreate: CompanyCreateOrConnectWithoutModerateInput
  create: CompanyCreateWithoutModerateInput
}

input CompanyCreateNestedOneWithoutProjectsInput {
  connect: CompanyWhereUniqueInput
  connectOrCreate: CompanyCreateOrConnectWithoutProjectsInput
  create: CompanyCreateWithoutProjectsInput
}

input CompanyCreateOrConnectWithoutAvatarInput {
  create: CompanyCreateWithoutAvatarInput!
  where: CompanyWhereUniqueInput!
}

input CompanyCreateOrConnectWithoutContactInput {
  create: CompanyCreateWithoutContactInput!
  where: CompanyWhereUniqueInput!
}

input CompanyCreateOrConnectWithoutModerateInput {
  create: CompanyCreateWithoutModerateInput!
  where: CompanyWhereUniqueInput!
}

input CompanyCreateOrConnectWithoutOwnerInput {
  create: CompanyCreateWithoutOwnerInput!
  where: CompanyWhereUniqueInput!
}

input CompanyCreateOrConnectWithoutProjectsInput {
  create: CompanyCreateWithoutProjectsInput!
  where: CompanyWhereUniqueInput!
}

input CompanyCreateWithoutAvatarInput {
  activityKind: filteringCategories!
  contact: ContactCreateNestedOneWithoutOwnerCompanyInput
  createdAt: DateTime
  description: String
  inn: String
  isApproved: Boolean
  mainContact: String
  mainRegion: String
  moderate: ModerationCreateNestedOneWithoutCompanyInput
  moderationChecked: Boolean
  name: String!
  owner: UserCreateNestedOneWithoutOwnerCompaniesInput!
  projects: ProjectCreateNestedManyWithoutOwnerCompanyInput
  shortDescription: String
}

input CompanyCreateWithoutContactInput {
  activityKind: filteringCategories!
  avatar: MediaCreateNestedOneWithoutCompanyInput
  createdAt: DateTime
  description: String
  inn: String
  isApproved: Boolean
  mainContact: String
  mainRegion: String
  moderate: ModerationCreateNestedOneWithoutCompanyInput
  moderationChecked: Boolean
  name: String!
  owner: UserCreateNestedOneWithoutOwnerCompaniesInput!
  projects: ProjectCreateNestedManyWithoutOwnerCompanyInput
  shortDescription: String
}

input CompanyCreateWithoutModerateInput {
  activityKind: filteringCategories!
  avatar: MediaCreateNestedOneWithoutCompanyInput
  contact: ContactCreateNestedOneWithoutOwnerCompanyInput
  createdAt: DateTime
  description: String
  inn: String
  isApproved: Boolean
  mainContact: String
  mainRegion: String
  moderationChecked: Boolean
  name: String!
  owner: UserCreateNestedOneWithoutOwnerCompaniesInput!
  projects: ProjectCreateNestedManyWithoutOwnerCompanyInput
  shortDescription: String
}

input CompanyCreateWithoutOwnerInput {
  activityKind: filteringCategories!
  avatar: MediaCreateNestedOneWithoutCompanyInput
  contact: ContactCreateNestedOneWithoutOwnerCompanyInput
  createdAt: DateTime
  description: String
  inn: String
  isApproved: Boolean
  mainContact: String
  mainRegion: String
  moderate: ModerationCreateNestedOneWithoutCompanyInput
  moderationChecked: Boolean
  name: String!
  projects: ProjectCreateNestedManyWithoutOwnerCompanyInput
  shortDescription: String
}

input CompanyCreateWithoutProjectsInput {
  activityKind: filteringCategories!
  avatar: MediaCreateNestedOneWithoutCompanyInput
  contact: ContactCreateNestedOneWithoutOwnerCompanyInput
  createdAt: DateTime
  description: String
  inn: String
  isApproved: Boolean
  mainContact: String
  mainRegion: String
  moderate: ModerationCreateNestedOneWithoutCompanyInput
  moderationChecked: Boolean
  name: String!
  owner: UserCreateNestedOneWithoutOwnerCompaniesInput!
  shortDescription: String
}

input CompanyListRelationFilter {
  every: CompanyWhereInput
  none: CompanyWhereInput
  some: CompanyWhereInput
}

input CompanyOrderByRelationAggregateInput {
  _count: SortOrder
}

input CompanyOrderByWithRelationInput {
  activityKind: SortOrder
  avatar: MediaOrderByWithRelationInput
  avatarId: SortOrder
  contact: ContactOrderByWithRelationInput
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  inn: SortOrder
  isApproved: SortOrder
  mainContact: SortOrder
  mainRegion: SortOrder
  moderate: ModerationOrderByWithRelationInput
  moderateId: SortOrder
  moderationChecked: SortOrder
  name: SortOrder
  owner: UserOrderByWithRelationInput
  ownerID: SortOrder
  projects: ProjectOrderByRelationAggregateInput
  shortDescription: SortOrder
}

input CompanyScalarWhereInput {
  AND: [CompanyScalarWhereInput!]
  NOT: [CompanyScalarWhereInput!]
  OR: [CompanyScalarWhereInput!]
  activityKind: EnumfilteringCategoriesFilter
  avatarId: IntNullableFilter
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: IntFilter
  inn: StringNullableFilter
  isApproved: BoolNullableFilter
  mainContact: StringNullableFilter
  mainRegion: StringNullableFilter
  moderateId: IntNullableFilter
  moderationChecked: BoolNullableFilter
  name: StringFilter
  ownerID: IntFilter
  shortDescription: StringNullableFilter
}

input CompanyUpdateManyMutationInput {
  activityKind: EnumfilteringCategoriesFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  inn: NullableStringFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  mainContact: NullableStringFieldUpdateOperationsInput
  mainRegion: NullableStringFieldUpdateOperationsInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  shortDescription: NullableStringFieldUpdateOperationsInput
}

input CompanyUpdateManyWithWhereWithoutAvatarInput {
  data: CompanyUpdateManyMutationInput!
  where: CompanyScalarWhereInput!
}

input CompanyUpdateManyWithWhereWithoutOwnerInput {
  data: CompanyUpdateManyMutationInput!
  where: CompanyScalarWhereInput!
}

input CompanyUpdateManyWithoutAvatarInput {
  connect: [CompanyWhereUniqueInput!]
  connectOrCreate: [CompanyCreateOrConnectWithoutAvatarInput!]
  create: [CompanyCreateWithoutAvatarInput!]
  createMany: CompanyCreateManyAvatarInputEnvelope
  delete: [CompanyWhereUniqueInput!]
  deleteMany: [CompanyScalarWhereInput!]
  disconnect: [CompanyWhereUniqueInput!]
  set: [CompanyWhereUniqueInput!]
  update: [CompanyUpdateWithWhereUniqueWithoutAvatarInput!]
  updateMany: [CompanyUpdateManyWithWhereWithoutAvatarInput!]
  upsert: [CompanyUpsertWithWhereUniqueWithoutAvatarInput!]
}

input CompanyUpdateManyWithoutOwnerInput {
  connect: [CompanyWhereUniqueInput!]
  connectOrCreate: [CompanyCreateOrConnectWithoutOwnerInput!]
  create: [CompanyCreateWithoutOwnerInput!]
  createMany: CompanyCreateManyOwnerInputEnvelope
  delete: [CompanyWhereUniqueInput!]
  deleteMany: [CompanyScalarWhereInput!]
  disconnect: [CompanyWhereUniqueInput!]
  set: [CompanyWhereUniqueInput!]
  update: [CompanyUpdateWithWhereUniqueWithoutOwnerInput!]
  updateMany: [CompanyUpdateManyWithWhereWithoutOwnerInput!]
  upsert: [CompanyUpsertWithWhereUniqueWithoutOwnerInput!]
}

input CompanyUpdateOneRequiredWithoutContactInput {
  connect: CompanyWhereUniqueInput
  connectOrCreate: CompanyCreateOrConnectWithoutContactInput
  create: CompanyCreateWithoutContactInput
  update: CompanyUpdateWithoutContactInput
  upsert: CompanyUpsertWithoutContactInput
}

input CompanyUpdateOneRequiredWithoutProjectsInput {
  connect: CompanyWhereUniqueInput
  connectOrCreate: CompanyCreateOrConnectWithoutProjectsInput
  create: CompanyCreateWithoutProjectsInput
  update: CompanyUpdateWithoutProjectsInput
  upsert: CompanyUpsertWithoutProjectsInput
}

input CompanyUpdateOneWithoutModerateInput {
  connect: CompanyWhereUniqueInput
  connectOrCreate: CompanyCreateOrConnectWithoutModerateInput
  create: CompanyCreateWithoutModerateInput
  delete: Boolean
  disconnect: Boolean
  update: CompanyUpdateWithoutModerateInput
  upsert: CompanyUpsertWithoutModerateInput
}

input CompanyUpdateWithWhereUniqueWithoutAvatarInput {
  data: CompanyUpdateWithoutAvatarInput!
  where: CompanyWhereUniqueInput!
}

input CompanyUpdateWithWhereUniqueWithoutOwnerInput {
  data: CompanyUpdateWithoutOwnerInput!
  where: CompanyWhereUniqueInput!
}

input CompanyUpdateWithoutAvatarInput {
  activityKind: EnumfilteringCategoriesFieldUpdateOperationsInput
  contact: ContactUpdateOneWithoutOwnerCompanyInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  inn: NullableStringFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  mainContact: NullableStringFieldUpdateOperationsInput
  mainRegion: NullableStringFieldUpdateOperationsInput
  moderate: ModerationUpdateOneWithoutCompanyInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutOwnerCompaniesInput
  projects: ProjectUpdateManyWithoutOwnerCompanyInput
  shortDescription: NullableStringFieldUpdateOperationsInput
}

input CompanyUpdateWithoutContactInput {
  activityKind: EnumfilteringCategoriesFieldUpdateOperationsInput
  avatar: MediaUpdateOneWithoutCompanyInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  inn: NullableStringFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  mainContact: NullableStringFieldUpdateOperationsInput
  mainRegion: NullableStringFieldUpdateOperationsInput
  moderate: ModerationUpdateOneWithoutCompanyInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutOwnerCompaniesInput
  projects: ProjectUpdateManyWithoutOwnerCompanyInput
  shortDescription: NullableStringFieldUpdateOperationsInput
}

input CompanyUpdateWithoutModerateInput {
  activityKind: EnumfilteringCategoriesFieldUpdateOperationsInput
  avatar: MediaUpdateOneWithoutCompanyInput
  contact: ContactUpdateOneWithoutOwnerCompanyInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  inn: NullableStringFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  mainContact: NullableStringFieldUpdateOperationsInput
  mainRegion: NullableStringFieldUpdateOperationsInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutOwnerCompaniesInput
  projects: ProjectUpdateManyWithoutOwnerCompanyInput
  shortDescription: NullableStringFieldUpdateOperationsInput
}

input CompanyUpdateWithoutOwnerInput {
  activityKind: EnumfilteringCategoriesFieldUpdateOperationsInput
  avatar: MediaUpdateOneWithoutCompanyInput
  contact: ContactUpdateOneWithoutOwnerCompanyInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  inn: NullableStringFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  mainContact: NullableStringFieldUpdateOperationsInput
  mainRegion: NullableStringFieldUpdateOperationsInput
  moderate: ModerationUpdateOneWithoutCompanyInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  projects: ProjectUpdateManyWithoutOwnerCompanyInput
  shortDescription: NullableStringFieldUpdateOperationsInput
}

input CompanyUpdateWithoutProjectsInput {
  activityKind: EnumfilteringCategoriesFieldUpdateOperationsInput
  avatar: MediaUpdateOneWithoutCompanyInput
  contact: ContactUpdateOneWithoutOwnerCompanyInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  inn: NullableStringFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  mainContact: NullableStringFieldUpdateOperationsInput
  mainRegion: NullableStringFieldUpdateOperationsInput
  moderate: ModerationUpdateOneWithoutCompanyInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutOwnerCompaniesInput
  shortDescription: NullableStringFieldUpdateOperationsInput
}

input CompanyUpsertWithWhereUniqueWithoutAvatarInput {
  create: CompanyCreateWithoutAvatarInput!
  update: CompanyUpdateWithoutAvatarInput!
  where: CompanyWhereUniqueInput!
}

input CompanyUpsertWithWhereUniqueWithoutOwnerInput {
  create: CompanyCreateWithoutOwnerInput!
  update: CompanyUpdateWithoutOwnerInput!
  where: CompanyWhereUniqueInput!
}

input CompanyUpsertWithoutContactInput {
  create: CompanyCreateWithoutContactInput!
  update: CompanyUpdateWithoutContactInput!
}

input CompanyUpsertWithoutModerateInput {
  create: CompanyCreateWithoutModerateInput!
  update: CompanyUpdateWithoutModerateInput!
}

input CompanyUpsertWithoutProjectsInput {
  create: CompanyCreateWithoutProjectsInput!
  update: CompanyUpdateWithoutProjectsInput!
}

input CompanyWhereInput {
  AND: [CompanyWhereInput!]
  NOT: [CompanyWhereInput!]
  OR: [CompanyWhereInput!]
  activityKind: EnumfilteringCategoriesFilter
  avatar: MediaWhereInput
  avatarId: IntNullableFilter
  contact: ContactWhereInput
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: IntFilter
  inn: StringNullableFilter
  isApproved: BoolNullableFilter
  mainContact: StringNullableFilter
  mainRegion: StringNullableFilter
  moderate: ModerationWhereInput
  moderateId: IntNullableFilter
  moderationChecked: BoolNullableFilter
  name: StringFilter
  owner: UserWhereInput
  ownerID: IntFilter
  projects: ProjectListRelationFilter
  shortDescription: StringNullableFilter
}

input CompanyWhereUniqueInput {
  id: Int
  moderateId: Int
}

type Contact {
  adresses: [String!]!
  emails: [String!]!
  id: Int!
  isApproved: Boolean
  moderate: Moderation
  moderationChecked: Boolean
  ownerCompany: Company!
  phones: [String!]!
}

input ContactCreateInput {
  adresses: [String]
  companyId: Int!
  emails: [String]
  phones: [String]
}

input ContactCreateNestedOneWithoutModerateInput {
  connect: ContactWhereUniqueInput
  connectOrCreate: ContactCreateOrConnectWithoutModerateInput
  create: ContactCreateWithoutModerateInput
}

input ContactCreateNestedOneWithoutOwnerCompanyInput {
  connect: ContactWhereUniqueInput
  connectOrCreate: ContactCreateOrConnectWithoutOwnerCompanyInput
  create: ContactCreateWithoutOwnerCompanyInput
}

input ContactCreateOrConnectWithoutModerateInput {
  create: ContactCreateWithoutModerateInput!
  where: ContactWhereUniqueInput!
}

input ContactCreateOrConnectWithoutOwnerCompanyInput {
  create: ContactCreateWithoutOwnerCompanyInput!
  where: ContactWhereUniqueInput!
}

input ContactCreateWithoutModerateInput {
  adresses: ContactCreateadressesInput
  emails: ContactCreateemailsInput
  isApproved: Boolean
  moderationChecked: Boolean
  ownerCompany: CompanyCreateNestedOneWithoutContactInput!
  phones: ContactCreatephonesInput
}

input ContactCreateWithoutOwnerCompanyInput {
  adresses: ContactCreateadressesInput
  emails: ContactCreateemailsInput
  isApproved: Boolean
  moderate: ModerationCreateNestedOneWithoutContactInput
  moderationChecked: Boolean
  phones: ContactCreatephonesInput
}

input ContactCreateadressesInput {
  set: [String!]
}

input ContactCreateemailsInput {
  set: [String!]
}

input ContactCreatephonesInput {
  set: [String!]
}

input ContactOrderByWithRelationInput {
  adresses: SortOrder
  emails: SortOrder
  id: SortOrder
  isApproved: SortOrder
  moderate: ModerationOrderByWithRelationInput
  moderateId: SortOrder
  moderationChecked: SortOrder
  ownerCompany: CompanyOrderByWithRelationInput
  ownerCompanyID: SortOrder
  phones: SortOrder
}

input ContactUpdateOneWithoutModerateInput {
  connect: ContactWhereUniqueInput
  connectOrCreate: ContactCreateOrConnectWithoutModerateInput
  create: ContactCreateWithoutModerateInput
  delete: Boolean
  disconnect: Boolean
  update: ContactUpdateWithoutModerateInput
  upsert: ContactUpsertWithoutModerateInput
}

input ContactUpdateOneWithoutOwnerCompanyInput {
  connect: ContactWhereUniqueInput
  connectOrCreate: ContactCreateOrConnectWithoutOwnerCompanyInput
  create: ContactCreateWithoutOwnerCompanyInput
  delete: Boolean
  disconnect: Boolean
  update: ContactUpdateWithoutOwnerCompanyInput
  upsert: ContactUpsertWithoutOwnerCompanyInput
}

input ContactUpdateWithoutModerateInput {
  adresses: ContactUpdateadressesInput
  emails: ContactUpdateemailsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  ownerCompany: CompanyUpdateOneRequiredWithoutContactInput
  phones: ContactUpdatephonesInput
}

input ContactUpdateWithoutOwnerCompanyInput {
  adresses: ContactUpdateadressesInput
  emails: ContactUpdateemailsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  moderate: ModerationUpdateOneWithoutContactInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  phones: ContactUpdatephonesInput
}

input ContactUpdateadressesInput {
  push: String
  set: [String!]
}

input ContactUpdateemailsInput {
  push: String
  set: [String!]
}

input ContactUpdatephonesInput {
  push: String
  set: [String!]
}

input ContactUpsertWithoutModerateInput {
  create: ContactCreateWithoutModerateInput!
  update: ContactUpdateWithoutModerateInput!
}

input ContactUpsertWithoutOwnerCompanyInput {
  create: ContactCreateWithoutOwnerCompanyInput!
  update: ContactUpdateWithoutOwnerCompanyInput!
}

input ContactWhereInput {
  AND: [ContactWhereInput!]
  NOT: [ContactWhereInput!]
  OR: [ContactWhereInput!]
  adresses: StringNullableListFilter
  emails: StringNullableListFilter
  id: IntFilter
  isApproved: BoolNullableFilter
  moderate: ModerationWhereInput
  moderateId: IntNullableFilter
  moderationChecked: BoolNullableFilter
  ownerCompany: CompanyWhereInput
  ownerCompanyID: IntFilter
  phones: StringNullableListFilter
}

input ContactWhereUniqueInput {
  id: Int
  moderateId: Int
  ownerCompanyID: Int
}

input CreateArticleInput {
  postId: Int!
  sections: [CreateSectionInput]
}

input CreateDescriptionInput {
  projectId: Int!
  sections: [CreateDescriptionSectionInput]
}

input CreateDescriptionSectionInput {
  mediaURL: String
  number: Int!
  text: String
  type: enumSectionType!
}

input CreatePostInput {
  category: filteringCategoies!
  description: String!
  isNews: Boolean!
  isOffer: Boolean!
  isResource: Boolean!
  projectId: Int!
  tags: [String]!
  title: String!
}

input CreateSectionInput {
  mediaURL: String
  number: Int!
  text: String
  type: enumSectionType!
}

input CreateStoryInput {
  crowdFundingId: Int!
  sections: [CreateStorySectionInput]
}

input CreateStorySectionInput {
  mediaURL: String
  number: Int!
  text: String
  type: enumSectionType!
}

input CreateTariffInput {
  crowdFundingId: Int!
  description: String!
  price: Float!
  title: String!
}

input CreateUserInput {
  email: String!
  firstname: String!
  lastname: String!
  login: String!
  password: String!
}

type CrowdFunding {
  activeCheck: Boolean
  createdAt: DateTime!
  crowdFundingMedia(after: MediaWhereUniqueInput, before: MediaWhereUniqueInput, first: Int, last: Int): [Media!]!
  end: DateTime!
  goalSum: Float!
  id: Int!
  isApproved: Boolean!
  moderate: Moderation
  moderationChecked: Boolean
  nowSum: Float!
  platformConfigShowed(after: PlatformConfigWhereUniqueInput, before: PlatformConfigWhereUniqueInput, first: Int, last: Int): [PlatformConfig!]!
  poster: Media
  project: Project!
  shortDescription: String!
  start: DateTime!
  story: Article
  tariffs(after: CrowdFundingTariffWhereUniqueInput, before: CrowdFundingTariffWhereUniqueInput, first: Int, last: Int): [CrowdFundingTariff!]!
  title: String!
}

input CrowdFundingCreateManyPosterInput {
  createdAt: DateTime
  end: DateTime!
  goalSum: Float!
  id: Int
  isApproved: Boolean
  moderateId: Int
  moderationChecked: Boolean
  nowSum: Float
  projectId: Int!
  shortDescription: String!
  start: DateTime!
  title: String!
}

input CrowdFundingCreateManyPosterInputEnvelope {
  data: [CrowdFundingCreateManyPosterInput!]
  skipDuplicates: Boolean
}

input CrowdFundingCreateManyProjectInput {
  createdAt: DateTime
  end: DateTime!
  goalSum: Float!
  id: Int
  isApproved: Boolean
  moderateId: Int
  moderationChecked: Boolean
  nowSum: Float
  posterId: Int
  shortDescription: String!
  start: DateTime!
  title: String!
}

input CrowdFundingCreateManyProjectInputEnvelope {
  data: [CrowdFundingCreateManyProjectInput!]
  skipDuplicates: Boolean
}

input CrowdFundingCreateNestedManyWithoutPlatformConfigShowedInput {
  connect: [CrowdFundingWhereUniqueInput!]
  connectOrCreate: [CrowdFundingCreateOrConnectWithoutPlatformConfigShowedInput!]
  create: [CrowdFundingCreateWithoutPlatformConfigShowedInput!]
}

input CrowdFundingCreateNestedManyWithoutPosterInput {
  connect: [CrowdFundingWhereUniqueInput!]
  connectOrCreate: [CrowdFundingCreateOrConnectWithoutPosterInput!]
  create: [CrowdFundingCreateWithoutPosterInput!]
  createMany: CrowdFundingCreateManyPosterInputEnvelope
}

input CrowdFundingCreateNestedManyWithoutProjectInput {
  connect: [CrowdFundingWhereUniqueInput!]
  connectOrCreate: [CrowdFundingCreateOrConnectWithoutProjectInput!]
  create: [CrowdFundingCreateWithoutProjectInput!]
  createMany: CrowdFundingCreateManyProjectInputEnvelope
}

input CrowdFundingCreateNestedOneWithoutCrowdFundingMediaInput {
  connect: CrowdFundingWhereUniqueInput
  connectOrCreate: CrowdFundingCreateOrConnectWithoutCrowdFundingMediaInput
  create: CrowdFundingCreateWithoutCrowdFundingMediaInput
}

input CrowdFundingCreateNestedOneWithoutModerateInput {
  connect: CrowdFundingWhereUniqueInput
  connectOrCreate: CrowdFundingCreateOrConnectWithoutModerateInput
  create: CrowdFundingCreateWithoutModerateInput
}

input CrowdFundingCreateNestedOneWithoutStoryInput {
  connect: CrowdFundingWhereUniqueInput
  connectOrCreate: CrowdFundingCreateOrConnectWithoutStoryInput
  create: CrowdFundingCreateWithoutStoryInput
}

input CrowdFundingCreateOrConnectWithoutCrowdFundingMediaInput {
  create: CrowdFundingCreateWithoutCrowdFundingMediaInput!
  where: CrowdFundingWhereUniqueInput!
}

input CrowdFundingCreateOrConnectWithoutModerateInput {
  create: CrowdFundingCreateWithoutModerateInput!
  where: CrowdFundingWhereUniqueInput!
}

input CrowdFundingCreateOrConnectWithoutPlatformConfigShowedInput {
  create: CrowdFundingCreateWithoutPlatformConfigShowedInput!
  where: CrowdFundingWhereUniqueInput!
}

input CrowdFundingCreateOrConnectWithoutPosterInput {
  create: CrowdFundingCreateWithoutPosterInput!
  where: CrowdFundingWhereUniqueInput!
}

input CrowdFundingCreateOrConnectWithoutProjectInput {
  create: CrowdFundingCreateWithoutProjectInput!
  where: CrowdFundingWhereUniqueInput!
}

input CrowdFundingCreateOrConnectWithoutStoryInput {
  create: CrowdFundingCreateWithoutStoryInput!
  where: CrowdFundingWhereUniqueInput!
}

input CrowdFundingCreateWithoutCrowdFundingMediaInput {
  createdAt: DateTime
  end: DateTime!
  goalSum: Float!
  isApproved: Boolean
  moderate: ModerationCreateNestedOneWithoutCrowdFundingInput
  moderationChecked: Boolean
  nowSum: Float
  payedTariffs: payedTariffsCreateNestedManyWithoutCrowdfundingInput
  platformConfigShowed: PlatformConfigCreateNestedManyWithoutCrowdFundingsShownOnLandingInput
  poster: MediaCreateNestedOneWithoutCrowdFundingInput
  project: ProjectCreateNestedOneWithoutCrowdFundingInput!
  shortDescription: String!
  start: DateTime!
  story: ArticleCreateNestedOneWithoutCrowdfundingInput
  tariffs: CrowdFundingTariffCreateNestedManyWithoutCrowdFundingInput
  title: String!
}

input CrowdFundingCreateWithoutModerateInput {
  createdAt: DateTime
  crowdFundingMedia: MediaCreateNestedManyWithoutCrowdfundingStoryInput
  end: DateTime!
  goalSum: Float!
  isApproved: Boolean
  moderationChecked: Boolean
  nowSum: Float
  payedTariffs: payedTariffsCreateNestedManyWithoutCrowdfundingInput
  platformConfigShowed: PlatformConfigCreateNestedManyWithoutCrowdFundingsShownOnLandingInput
  poster: MediaCreateNestedOneWithoutCrowdFundingInput
  project: ProjectCreateNestedOneWithoutCrowdFundingInput!
  shortDescription: String!
  start: DateTime!
  story: ArticleCreateNestedOneWithoutCrowdfundingInput
  tariffs: CrowdFundingTariffCreateNestedManyWithoutCrowdFundingInput
  title: String!
}

input CrowdFundingCreateWithoutPlatformConfigShowedInput {
  createdAt: DateTime
  crowdFundingMedia: MediaCreateNestedManyWithoutCrowdfundingStoryInput
  end: DateTime!
  goalSum: Float!
  isApproved: Boolean
  moderate: ModerationCreateNestedOneWithoutCrowdFundingInput
  moderationChecked: Boolean
  nowSum: Float
  payedTariffs: payedTariffsCreateNestedManyWithoutCrowdfundingInput
  poster: MediaCreateNestedOneWithoutCrowdFundingInput
  project: ProjectCreateNestedOneWithoutCrowdFundingInput!
  shortDescription: String!
  start: DateTime!
  story: ArticleCreateNestedOneWithoutCrowdfundingInput
  tariffs: CrowdFundingTariffCreateNestedManyWithoutCrowdFundingInput
  title: String!
}

input CrowdFundingCreateWithoutPosterInput {
  createdAt: DateTime
  crowdFundingMedia: MediaCreateNestedManyWithoutCrowdfundingStoryInput
  end: DateTime!
  goalSum: Float!
  isApproved: Boolean
  moderate: ModerationCreateNestedOneWithoutCrowdFundingInput
  moderationChecked: Boolean
  nowSum: Float
  payedTariffs: payedTariffsCreateNestedManyWithoutCrowdfundingInput
  platformConfigShowed: PlatformConfigCreateNestedManyWithoutCrowdFundingsShownOnLandingInput
  project: ProjectCreateNestedOneWithoutCrowdFundingInput!
  shortDescription: String!
  start: DateTime!
  story: ArticleCreateNestedOneWithoutCrowdfundingInput
  tariffs: CrowdFundingTariffCreateNestedManyWithoutCrowdFundingInput
  title: String!
}

input CrowdFundingCreateWithoutProjectInput {
  createdAt: DateTime
  crowdFundingMedia: MediaCreateNestedManyWithoutCrowdfundingStoryInput
  end: DateTime!
  goalSum: Float!
  isApproved: Boolean
  moderate: ModerationCreateNestedOneWithoutCrowdFundingInput
  moderationChecked: Boolean
  nowSum: Float
  payedTariffs: payedTariffsCreateNestedManyWithoutCrowdfundingInput
  platformConfigShowed: PlatformConfigCreateNestedManyWithoutCrowdFundingsShownOnLandingInput
  poster: MediaCreateNestedOneWithoutCrowdFundingInput
  shortDescription: String!
  start: DateTime!
  story: ArticleCreateNestedOneWithoutCrowdfundingInput
  tariffs: CrowdFundingTariffCreateNestedManyWithoutCrowdFundingInput
  title: String!
}

input CrowdFundingCreateWithoutStoryInput {
  createdAt: DateTime
  crowdFundingMedia: MediaCreateNestedManyWithoutCrowdfundingStoryInput
  end: DateTime!
  goalSum: Float!
  isApproved: Boolean
  moderate: ModerationCreateNestedOneWithoutCrowdFundingInput
  moderationChecked: Boolean
  nowSum: Float
  payedTariffs: payedTariffsCreateNestedManyWithoutCrowdfundingInput
  platformConfigShowed: PlatformConfigCreateNestedManyWithoutCrowdFundingsShownOnLandingInput
  poster: MediaCreateNestedOneWithoutCrowdFundingInput
  project: ProjectCreateNestedOneWithoutCrowdFundingInput!
  shortDescription: String!
  start: DateTime!
  tariffs: CrowdFundingTariffCreateNestedManyWithoutCrowdFundingInput
  title: String!
}

input CrowdFundingListRelationFilter {
  every: CrowdFundingWhereInput
  none: CrowdFundingWhereInput
  some: CrowdFundingWhereInput
}

input CrowdFundingOrderByRelationAggregateInput {
  _count: SortOrder
}

input CrowdFundingOrderByWithRelationInput {
  createdAt: SortOrder
  crowdFundingMedia: MediaOrderByRelationAggregateInput
  end: SortOrder
  goalSum: SortOrder
  id: SortOrder
  isApproved: SortOrder
  moderate: ModerationOrderByWithRelationInput
  moderateId: SortOrder
  moderationChecked: SortOrder
  nowSum: SortOrder
  payedTariffs: payedTariffsOrderByRelationAggregateInput
  platformConfigShowed: PlatformConfigOrderByRelationAggregateInput
  poster: MediaOrderByWithRelationInput
  posterId: SortOrder
  project: ProjectOrderByWithRelationInput
  projectId: SortOrder
  shortDescription: SortOrder
  start: SortOrder
  story: ArticleOrderByWithRelationInput
  tariffs: CrowdFundingTariffOrderByRelationAggregateInput
  title: SortOrder
}

input CrowdFundingScalarWhereInput {
  AND: [CrowdFundingScalarWhereInput!]
  NOT: [CrowdFundingScalarWhereInput!]
  OR: [CrowdFundingScalarWhereInput!]
  createdAt: DateTimeFilter
  end: DateTimeFilter
  goalSum: FloatFilter
  id: IntFilter
  isApproved: BoolFilter
  moderateId: IntNullableFilter
  moderationChecked: BoolNullableFilter
  nowSum: FloatFilter
  posterId: IntNullableFilter
  projectId: IntFilter
  shortDescription: StringFilter
  start: DateTimeFilter
  title: StringFilter
}

type CrowdFundingTariff {
  buyerCount: Int!
  createdAt: DateTime!
  crowdFunding: CrowdFunding!
  description: String!
  id: Int!
  price: Float!
  title: String!
}

input CrowdFundingTariffCreateManyCrowdFundingInput {
  buyerCount: Int
  createdAt: DateTime
  description: String!
  id: Int
  price: Float!
  title: String!
}

input CrowdFundingTariffCreateManyCrowdFundingInputEnvelope {
  data: [CrowdFundingTariffCreateManyCrowdFundingInput!]
  skipDuplicates: Boolean
}

input CrowdFundingTariffCreateNestedManyWithoutCrowdFundingInput {
  connect: [CrowdFundingTariffWhereUniqueInput!]
  connectOrCreate: [CrowdFundingTariffCreateOrConnectWithoutCrowdFundingInput!]
  create: [CrowdFundingTariffCreateWithoutCrowdFundingInput!]
  createMany: CrowdFundingTariffCreateManyCrowdFundingInputEnvelope
}

input CrowdFundingTariffCreateOrConnectWithoutCrowdFundingInput {
  create: CrowdFundingTariffCreateWithoutCrowdFundingInput!
  where: CrowdFundingTariffWhereUniqueInput!
}

input CrowdFundingTariffCreateWithoutCrowdFundingInput {
  buyerCount: Int
  createdAt: DateTime
  description: String!
  price: Float!
  title: String!
}

input CrowdFundingTariffListRelationFilter {
  every: CrowdFundingTariffWhereInput
  none: CrowdFundingTariffWhereInput
  some: CrowdFundingTariffWhereInput
}

input CrowdFundingTariffOrderByRelationAggregateInput {
  _count: SortOrder
}

input CrowdFundingTariffScalarWhereInput {
  AND: [CrowdFundingTariffScalarWhereInput!]
  NOT: [CrowdFundingTariffScalarWhereInput!]
  OR: [CrowdFundingTariffScalarWhereInput!]
  buyerCount: IntFilter
  createdAt: DateTimeFilter
  crowdFundingId: IntFilter
  description: StringFilter
  id: IntFilter
  price: FloatFilter
  title: StringFilter
}

input CrowdFundingTariffUpdateManyMutationInput {
  buyerCount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input CrowdFundingTariffUpdateManyWithWhereWithoutCrowdFundingInput {
  data: CrowdFundingTariffUpdateManyMutationInput!
  where: CrowdFundingTariffScalarWhereInput!
}

input CrowdFundingTariffUpdateManyWithoutCrowdFundingInput {
  connect: [CrowdFundingTariffWhereUniqueInput!]
  connectOrCreate: [CrowdFundingTariffCreateOrConnectWithoutCrowdFundingInput!]
  create: [CrowdFundingTariffCreateWithoutCrowdFundingInput!]
  createMany: CrowdFundingTariffCreateManyCrowdFundingInputEnvelope
  delete: [CrowdFundingTariffWhereUniqueInput!]
  deleteMany: [CrowdFundingTariffScalarWhereInput!]
  disconnect: [CrowdFundingTariffWhereUniqueInput!]
  set: [CrowdFundingTariffWhereUniqueInput!]
  update: [CrowdFundingTariffUpdateWithWhereUniqueWithoutCrowdFundingInput!]
  updateMany: [CrowdFundingTariffUpdateManyWithWhereWithoutCrowdFundingInput!]
  upsert: [CrowdFundingTariffUpsertWithWhereUniqueWithoutCrowdFundingInput!]
}

input CrowdFundingTariffUpdateWithWhereUniqueWithoutCrowdFundingInput {
  data: CrowdFundingTariffUpdateWithoutCrowdFundingInput!
  where: CrowdFundingTariffWhereUniqueInput!
}

input CrowdFundingTariffUpdateWithoutCrowdFundingInput {
  buyerCount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input CrowdFundingTariffUpsertWithWhereUniqueWithoutCrowdFundingInput {
  create: CrowdFundingTariffCreateWithoutCrowdFundingInput!
  update: CrowdFundingTariffUpdateWithoutCrowdFundingInput!
  where: CrowdFundingTariffWhereUniqueInput!
}

input CrowdFundingTariffWhereInput {
  AND: [CrowdFundingTariffWhereInput!]
  NOT: [CrowdFundingTariffWhereInput!]
  OR: [CrowdFundingTariffWhereInput!]
  buyerCount: IntFilter
  createdAt: DateTimeFilter
  crowdFunding: CrowdFundingWhereInput
  crowdFundingId: IntFilter
  description: StringFilter
  id: IntFilter
  price: FloatFilter
  title: StringFilter
}

input CrowdFundingTariffWhereUniqueInput {
  id: Int
}

input CrowdFundingUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  end: DateTimeFieldUpdateOperationsInput
  goalSum: FloatFieldUpdateOperationsInput
  isApproved: BoolFieldUpdateOperationsInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  nowSum: FloatFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  start: DateTimeFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input CrowdFundingUpdateManyWithWhereWithoutPlatformConfigShowedInput {
  data: CrowdFundingUpdateManyMutationInput!
  where: CrowdFundingScalarWhereInput!
}

input CrowdFundingUpdateManyWithWhereWithoutPosterInput {
  data: CrowdFundingUpdateManyMutationInput!
  where: CrowdFundingScalarWhereInput!
}

input CrowdFundingUpdateManyWithWhereWithoutProjectInput {
  data: CrowdFundingUpdateManyMutationInput!
  where: CrowdFundingScalarWhereInput!
}

input CrowdFundingUpdateManyWithoutPlatformConfigShowedInput {
  connect: [CrowdFundingWhereUniqueInput!]
  connectOrCreate: [CrowdFundingCreateOrConnectWithoutPlatformConfigShowedInput!]
  create: [CrowdFundingCreateWithoutPlatformConfigShowedInput!]
  delete: [CrowdFundingWhereUniqueInput!]
  deleteMany: [CrowdFundingScalarWhereInput!]
  disconnect: [CrowdFundingWhereUniqueInput!]
  set: [CrowdFundingWhereUniqueInput!]
  update: [CrowdFundingUpdateWithWhereUniqueWithoutPlatformConfigShowedInput!]
  updateMany: [CrowdFundingUpdateManyWithWhereWithoutPlatformConfigShowedInput!]
  upsert: [CrowdFundingUpsertWithWhereUniqueWithoutPlatformConfigShowedInput!]
}

input CrowdFundingUpdateManyWithoutPosterInput {
  connect: [CrowdFundingWhereUniqueInput!]
  connectOrCreate: [CrowdFundingCreateOrConnectWithoutPosterInput!]
  create: [CrowdFundingCreateWithoutPosterInput!]
  createMany: CrowdFundingCreateManyPosterInputEnvelope
  delete: [CrowdFundingWhereUniqueInput!]
  deleteMany: [CrowdFundingScalarWhereInput!]
  disconnect: [CrowdFundingWhereUniqueInput!]
  set: [CrowdFundingWhereUniqueInput!]
  update: [CrowdFundingUpdateWithWhereUniqueWithoutPosterInput!]
  updateMany: [CrowdFundingUpdateManyWithWhereWithoutPosterInput!]
  upsert: [CrowdFundingUpsertWithWhereUniqueWithoutPosterInput!]
}

input CrowdFundingUpdateManyWithoutProjectInput {
  connect: [CrowdFundingWhereUniqueInput!]
  connectOrCreate: [CrowdFundingCreateOrConnectWithoutProjectInput!]
  create: [CrowdFundingCreateWithoutProjectInput!]
  createMany: CrowdFundingCreateManyProjectInputEnvelope
  delete: [CrowdFundingWhereUniqueInput!]
  deleteMany: [CrowdFundingScalarWhereInput!]
  disconnect: [CrowdFundingWhereUniqueInput!]
  set: [CrowdFundingWhereUniqueInput!]
  update: [CrowdFundingUpdateWithWhereUniqueWithoutProjectInput!]
  updateMany: [CrowdFundingUpdateManyWithWhereWithoutProjectInput!]
  upsert: [CrowdFundingUpsertWithWhereUniqueWithoutProjectInput!]
}

input CrowdFundingUpdateOneWithoutCrowdFundingMediaInput {
  connect: CrowdFundingWhereUniqueInput
  connectOrCreate: CrowdFundingCreateOrConnectWithoutCrowdFundingMediaInput
  create: CrowdFundingCreateWithoutCrowdFundingMediaInput
  delete: Boolean
  disconnect: Boolean
  update: CrowdFundingUpdateWithoutCrowdFundingMediaInput
  upsert: CrowdFundingUpsertWithoutCrowdFundingMediaInput
}

input CrowdFundingUpdateOneWithoutModerateInput {
  connect: CrowdFundingWhereUniqueInput
  connectOrCreate: CrowdFundingCreateOrConnectWithoutModerateInput
  create: CrowdFundingCreateWithoutModerateInput
  delete: Boolean
  disconnect: Boolean
  update: CrowdFundingUpdateWithoutModerateInput
  upsert: CrowdFundingUpsertWithoutModerateInput
}

input CrowdFundingUpdateOneWithoutStoryInput {
  connect: CrowdFundingWhereUniqueInput
  connectOrCreate: CrowdFundingCreateOrConnectWithoutStoryInput
  create: CrowdFundingCreateWithoutStoryInput
  delete: Boolean
  disconnect: Boolean
  update: CrowdFundingUpdateWithoutStoryInput
  upsert: CrowdFundingUpsertWithoutStoryInput
}

input CrowdFundingUpdateWithWhereUniqueWithoutPlatformConfigShowedInput {
  data: CrowdFundingUpdateWithoutPlatformConfigShowedInput!
  where: CrowdFundingWhereUniqueInput!
}

input CrowdFundingUpdateWithWhereUniqueWithoutPosterInput {
  data: CrowdFundingUpdateWithoutPosterInput!
  where: CrowdFundingWhereUniqueInput!
}

input CrowdFundingUpdateWithWhereUniqueWithoutProjectInput {
  data: CrowdFundingUpdateWithoutProjectInput!
  where: CrowdFundingWhereUniqueInput!
}

input CrowdFundingUpdateWithoutCrowdFundingMediaInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  end: DateTimeFieldUpdateOperationsInput
  goalSum: FloatFieldUpdateOperationsInput
  isApproved: BoolFieldUpdateOperationsInput
  moderate: ModerationUpdateOneWithoutCrowdFundingInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  nowSum: FloatFieldUpdateOperationsInput
  payedTariffs: payedTariffsUpdateManyWithoutCrowdfundingInput
  platformConfigShowed: PlatformConfigUpdateManyWithoutCrowdFundingsShownOnLandingInput
  poster: MediaUpdateOneWithoutCrowdFundingInput
  project: ProjectUpdateOneRequiredWithoutCrowdFundingInput
  shortDescription: StringFieldUpdateOperationsInput
  start: DateTimeFieldUpdateOperationsInput
  story: ArticleUpdateOneWithoutCrowdfundingInput
  tariffs: CrowdFundingTariffUpdateManyWithoutCrowdFundingInput
  title: StringFieldUpdateOperationsInput
}

input CrowdFundingUpdateWithoutModerateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  crowdFundingMedia: MediaUpdateManyWithoutCrowdfundingStoryInput
  end: DateTimeFieldUpdateOperationsInput
  goalSum: FloatFieldUpdateOperationsInput
  isApproved: BoolFieldUpdateOperationsInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  nowSum: FloatFieldUpdateOperationsInput
  payedTariffs: payedTariffsUpdateManyWithoutCrowdfundingInput
  platformConfigShowed: PlatformConfigUpdateManyWithoutCrowdFundingsShownOnLandingInput
  poster: MediaUpdateOneWithoutCrowdFundingInput
  project: ProjectUpdateOneRequiredWithoutCrowdFundingInput
  shortDescription: StringFieldUpdateOperationsInput
  start: DateTimeFieldUpdateOperationsInput
  story: ArticleUpdateOneWithoutCrowdfundingInput
  tariffs: CrowdFundingTariffUpdateManyWithoutCrowdFundingInput
  title: StringFieldUpdateOperationsInput
}

input CrowdFundingUpdateWithoutPlatformConfigShowedInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  crowdFundingMedia: MediaUpdateManyWithoutCrowdfundingStoryInput
  end: DateTimeFieldUpdateOperationsInput
  goalSum: FloatFieldUpdateOperationsInput
  isApproved: BoolFieldUpdateOperationsInput
  moderate: ModerationUpdateOneWithoutCrowdFundingInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  nowSum: FloatFieldUpdateOperationsInput
  payedTariffs: payedTariffsUpdateManyWithoutCrowdfundingInput
  poster: MediaUpdateOneWithoutCrowdFundingInput
  project: ProjectUpdateOneRequiredWithoutCrowdFundingInput
  shortDescription: StringFieldUpdateOperationsInput
  start: DateTimeFieldUpdateOperationsInput
  story: ArticleUpdateOneWithoutCrowdfundingInput
  tariffs: CrowdFundingTariffUpdateManyWithoutCrowdFundingInput
  title: StringFieldUpdateOperationsInput
}

input CrowdFundingUpdateWithoutPosterInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  crowdFundingMedia: MediaUpdateManyWithoutCrowdfundingStoryInput
  end: DateTimeFieldUpdateOperationsInput
  goalSum: FloatFieldUpdateOperationsInput
  isApproved: BoolFieldUpdateOperationsInput
  moderate: ModerationUpdateOneWithoutCrowdFundingInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  nowSum: FloatFieldUpdateOperationsInput
  payedTariffs: payedTariffsUpdateManyWithoutCrowdfundingInput
  platformConfigShowed: PlatformConfigUpdateManyWithoutCrowdFundingsShownOnLandingInput
  project: ProjectUpdateOneRequiredWithoutCrowdFundingInput
  shortDescription: StringFieldUpdateOperationsInput
  start: DateTimeFieldUpdateOperationsInput
  story: ArticleUpdateOneWithoutCrowdfundingInput
  tariffs: CrowdFundingTariffUpdateManyWithoutCrowdFundingInput
  title: StringFieldUpdateOperationsInput
}

input CrowdFundingUpdateWithoutProjectInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  crowdFundingMedia: MediaUpdateManyWithoutCrowdfundingStoryInput
  end: DateTimeFieldUpdateOperationsInput
  goalSum: FloatFieldUpdateOperationsInput
  isApproved: BoolFieldUpdateOperationsInput
  moderate: ModerationUpdateOneWithoutCrowdFundingInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  nowSum: FloatFieldUpdateOperationsInput
  payedTariffs: payedTariffsUpdateManyWithoutCrowdfundingInput
  platformConfigShowed: PlatformConfigUpdateManyWithoutCrowdFundingsShownOnLandingInput
  poster: MediaUpdateOneWithoutCrowdFundingInput
  shortDescription: StringFieldUpdateOperationsInput
  start: DateTimeFieldUpdateOperationsInput
  story: ArticleUpdateOneWithoutCrowdfundingInput
  tariffs: CrowdFundingTariffUpdateManyWithoutCrowdFundingInput
  title: StringFieldUpdateOperationsInput
}

input CrowdFundingUpdateWithoutStoryInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  crowdFundingMedia: MediaUpdateManyWithoutCrowdfundingStoryInput
  end: DateTimeFieldUpdateOperationsInput
  goalSum: FloatFieldUpdateOperationsInput
  isApproved: BoolFieldUpdateOperationsInput
  moderate: ModerationUpdateOneWithoutCrowdFundingInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  nowSum: FloatFieldUpdateOperationsInput
  payedTariffs: payedTariffsUpdateManyWithoutCrowdfundingInput
  platformConfigShowed: PlatformConfigUpdateManyWithoutCrowdFundingsShownOnLandingInput
  poster: MediaUpdateOneWithoutCrowdFundingInput
  project: ProjectUpdateOneRequiredWithoutCrowdFundingInput
  shortDescription: StringFieldUpdateOperationsInput
  start: DateTimeFieldUpdateOperationsInput
  tariffs: CrowdFundingTariffUpdateManyWithoutCrowdFundingInput
  title: StringFieldUpdateOperationsInput
}

input CrowdFundingUpsertWithWhereUniqueWithoutPlatformConfigShowedInput {
  create: CrowdFundingCreateWithoutPlatformConfigShowedInput!
  update: CrowdFundingUpdateWithoutPlatformConfigShowedInput!
  where: CrowdFundingWhereUniqueInput!
}

input CrowdFundingUpsertWithWhereUniqueWithoutPosterInput {
  create: CrowdFundingCreateWithoutPosterInput!
  update: CrowdFundingUpdateWithoutPosterInput!
  where: CrowdFundingWhereUniqueInput!
}

input CrowdFundingUpsertWithWhereUniqueWithoutProjectInput {
  create: CrowdFundingCreateWithoutProjectInput!
  update: CrowdFundingUpdateWithoutProjectInput!
  where: CrowdFundingWhereUniqueInput!
}

input CrowdFundingUpsertWithoutCrowdFundingMediaInput {
  create: CrowdFundingCreateWithoutCrowdFundingMediaInput!
  update: CrowdFundingUpdateWithoutCrowdFundingMediaInput!
}

input CrowdFundingUpsertWithoutModerateInput {
  create: CrowdFundingCreateWithoutModerateInput!
  update: CrowdFundingUpdateWithoutModerateInput!
}

input CrowdFundingUpsertWithoutStoryInput {
  create: CrowdFundingCreateWithoutStoryInput!
  update: CrowdFundingUpdateWithoutStoryInput!
}

input CrowdFundingWhereInput {
  AND: [CrowdFundingWhereInput!]
  NOT: [CrowdFundingWhereInput!]
  OR: [CrowdFundingWhereInput!]
  createdAt: DateTimeFilter
  crowdFundingMedia: MediaListRelationFilter
  end: DateTimeFilter
  goalSum: FloatFilter
  id: IntFilter
  isApproved: BoolFilter
  moderate: ModerationWhereInput
  moderateId: IntNullableFilter
  moderationChecked: BoolNullableFilter
  nowSum: FloatFilter
  payedTariffs: PayedTariffsListRelationFilter
  platformConfigShowed: PlatformConfigListRelationFilter
  poster: MediaWhereInput
  posterId: IntNullableFilter
  project: ProjectWhereInput
  projectId: IntFilter
  shortDescription: StringFilter
  start: DateTimeFilter
  story: ArticleWhereInput
  tariffs: CrowdFundingTariffListRelationFilter
  title: StringFilter
}

input CrowdFundingWhereUniqueInput {
  id: Int
  moderateId: Int
}

scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input DeleteArticleInput {
  articleId: Int!
}

input DeleteDescriptionInput {
  descriptionId: Int!
}

input DeleteStoryInput {
  storyId: Int!
}

input DeleteTariffInput {
  tariffId: Int!
}

type Email {
  createdAt: DateTime!
  email: String!
  id: Int!
}

input EmailWhereInput {
  AND: [EmailWhereInput!]
  NOT: [EmailWhereInput!]
  OR: [EmailWhereInput!]
  createdAt: DateTimeFilter
  email: StringFilter
  id: IntFilter
}

input EmailWhereUniqueInput {
  id: Int
}

input EnumRoleNullableFilter {
  equals: Role
  in: [Role!]
  not: NestedEnumRoleNullableFilter
  notIn: [Role!]
}

input EnumbusinessModelEnumNullableFilter {
  equals: businessModelEnum
  in: [businessModelEnum!]
  not: NestedEnumbusinessModelEnumNullableFilter
  notIn: [businessModelEnum!]
}

input EnumeventRegisteredVerdictFieldUpdateOperationsInput {
  set: eventRegisteredVerdict
}

input EnumeventRegisteredVerdictFilter {
  equals: eventRegisteredVerdict
  in: [eventRegisteredVerdict!]
  not: NestedEnumeventRegisteredVerdictFilter
  notIn: [eventRegisteredVerdict!]
}

input EnumfilteringCategoriesFieldUpdateOperationsInput {
  set: filteringCategories
}

input EnumfilteringCategoriesFilter {
  equals: filteringCategories
  in: [filteringCategories!]
  not: NestedEnumfilteringCategoriesFilter
  notIn: [filteringCategories!]
}

input EnuminvestmentStageEnumNullableFilter {
  equals: investmentStageEnum
  in: [investmentStageEnum!]
  not: NestedEnuminvestmentStageEnumNullableFilter
  notIn: [investmentStageEnum!]
}

input EnummainGoalEnumNullableFilter {
  equals: mainGoalEnum
  in: [mainGoalEnum!]
  not: NestedEnummainGoalEnumNullableFilter
  notIn: [mainGoalEnum!]
}

input EnummediaTypeFieldUpdateOperationsInput {
  set: mediaType
}

input EnummediaTypeFilter {
  equals: mediaType
  in: [mediaType!]
  not: NestedEnummediaTypeFilter
  notIn: [mediaType!]
}

input EnumprojectMarketEnumNullableFilter {
  equals: projectMarketEnum
  in: [projectMarketEnum!]
  not: NestedEnumprojectMarketEnumNullableFilter
  notIn: [projectMarketEnum!]
}

input EnumprojectStageEnumNullableFilter {
  equals: projectStageEnum
  in: [projectStageEnum!]
  not: NestedEnumprojectStageEnumNullableFilter
  notIn: [projectStageEnum!]
}

input EnumprojectTypeEnumNullableFilter {
  equals: projectTypeEnum
  in: [projectTypeEnum!]
  not: NestedEnumprojectTypeEnumNullableFilter
  notIn: [projectTypeEnum!]
}

input EnumsalesTypeEnumNullableFilter {
  equals: salesTypeEnum
  in: [salesTypeEnum!]
  not: NestedEnumsalesTypeEnumNullableFilter
  notIn: [salesTypeEnum!]
}

input EnumsectionTypesFieldUpdateOperationsInput {
  set: sectionTypes
}

input EnumsectionTypesFilter {
  equals: sectionTypes
  in: [sectionTypes!]
  not: NestedEnumsectionTypesFilter
  notIn: [sectionTypes!]
}

input EnumtechnologyTypeEnumNullableFilter {
  equals: technologyTypeEnum
  in: [technologyTypeEnum!]
  not: NestedEnumtechnologyTypeEnumNullableFilter
  notIn: [technologyTypeEnum!]
}

type Event {
  address: String!
  category: filteringCategories!
  date: DateTime!
  description: String!
  format: String
  id: Int!
  isApproved: Boolean!
  moderate: Moderation
  moderationChecked: Boolean
  name: String!
  organizer: String!
  platformConfigShowed(after: PlatformConfigWhereUniqueInput, before: PlatformConfigWhereUniqueInput, first: Int, last: Int): [PlatformConfig!]!
  poster: Media
  shortDescription: String!
  stream: Stream
  theme: String!
  user: User
}

input EventCreateManyPosterInput {
  address: String!
  category: filteringCategories!
  date: DateTime!
  description: String!
  format: String
  id: Int
  isApproved: Boolean
  moderateId: Int
  moderationChecked: Boolean
  name: String!
  organizer: String!
  shortDescription: String!
  theme: String!
  userId: Int
}

input EventCreateManyPosterInputEnvelope {
  data: [EventCreateManyPosterInput!]
  skipDuplicates: Boolean
}

input EventCreateManyUserInput {
  address: String!
  category: filteringCategories!
  date: DateTime!
  description: String!
  format: String
  id: Int
  isApproved: Boolean
  moderateId: Int
  moderationChecked: Boolean
  name: String!
  organizer: String!
  posterId: Int
  shortDescription: String!
  theme: String!
}

input EventCreateManyUserInputEnvelope {
  data: [EventCreateManyUserInput!]
  skipDuplicates: Boolean
}

input EventCreateNestedManyWithoutPlatformConfigShowedInput {
  connect: [EventWhereUniqueInput!]
  connectOrCreate: [EventCreateOrConnectWithoutPlatformConfigShowedInput!]
  create: [EventCreateWithoutPlatformConfigShowedInput!]
}

input EventCreateNestedManyWithoutPosterInput {
  connect: [EventWhereUniqueInput!]
  connectOrCreate: [EventCreateOrConnectWithoutPosterInput!]
  create: [EventCreateWithoutPosterInput!]
  createMany: EventCreateManyPosterInputEnvelope
}

input EventCreateNestedManyWithoutUserInput {
  connect: [EventWhereUniqueInput!]
  connectOrCreate: [EventCreateOrConnectWithoutUserInput!]
  create: [EventCreateWithoutUserInput!]
  createMany: EventCreateManyUserInputEnvelope
}

input EventCreateNestedOneWithoutModerateInput {
  connect: EventWhereUniqueInput
  connectOrCreate: EventCreateOrConnectWithoutModerateInput
  create: EventCreateWithoutModerateInput
}

input EventCreateNestedOneWithoutStreamInput {
  connect: EventWhereUniqueInput
  connectOrCreate: EventCreateOrConnectWithoutStreamInput
  create: EventCreateWithoutStreamInput
}

input EventCreateOrConnectWithoutModerateInput {
  create: EventCreateWithoutModerateInput!
  where: EventWhereUniqueInput!
}

input EventCreateOrConnectWithoutPlatformConfigShowedInput {
  create: EventCreateWithoutPlatformConfigShowedInput!
  where: EventWhereUniqueInput!
}

input EventCreateOrConnectWithoutPosterInput {
  create: EventCreateWithoutPosterInput!
  where: EventWhereUniqueInput!
}

input EventCreateOrConnectWithoutStreamInput {
  create: EventCreateWithoutStreamInput!
  where: EventWhereUniqueInput!
}

input EventCreateOrConnectWithoutUserInput {
  create: EventCreateWithoutUserInput!
  where: EventWhereUniqueInput!
}

input EventCreateWithoutModerateInput {
  address: String!
  category: filteringCategories!
  date: DateTime!
  description: String!
  format: String
  isApproved: Boolean
  moderationChecked: Boolean
  name: String!
  organizer: String!
  platformConfigShowed: PlatformConfigCreateNestedManyWithoutEventsShownOnLandingInput
  poster: MediaCreateNestedOneWithoutEventInput
  registeredForEvent: RegisteredForEventCreateNestedManyWithoutEventInput
  shortDescription: String!
  stream: StreamCreateNestedOneWithoutEventInput
  theme: String!
  user: UserCreateNestedOneWithoutPublishedEventInput
}

input EventCreateWithoutPlatformConfigShowedInput {
  address: String!
  category: filteringCategories!
  date: DateTime!
  description: String!
  format: String
  isApproved: Boolean
  moderate: ModerationCreateNestedOneWithoutEventInput
  moderationChecked: Boolean
  name: String!
  organizer: String!
  poster: MediaCreateNestedOneWithoutEventInput
  registeredForEvent: RegisteredForEventCreateNestedManyWithoutEventInput
  shortDescription: String!
  stream: StreamCreateNestedOneWithoutEventInput
  theme: String!
  user: UserCreateNestedOneWithoutPublishedEventInput
}

input EventCreateWithoutPosterInput {
  address: String!
  category: filteringCategories!
  date: DateTime!
  description: String!
  format: String
  isApproved: Boolean
  moderate: ModerationCreateNestedOneWithoutEventInput
  moderationChecked: Boolean
  name: String!
  organizer: String!
  platformConfigShowed: PlatformConfigCreateNestedManyWithoutEventsShownOnLandingInput
  registeredForEvent: RegisteredForEventCreateNestedManyWithoutEventInput
  shortDescription: String!
  stream: StreamCreateNestedOneWithoutEventInput
  theme: String!
  user: UserCreateNestedOneWithoutPublishedEventInput
}

input EventCreateWithoutStreamInput {
  address: String!
  category: filteringCategories!
  date: DateTime!
  description: String!
  format: String
  isApproved: Boolean
  moderate: ModerationCreateNestedOneWithoutEventInput
  moderationChecked: Boolean
  name: String!
  organizer: String!
  platformConfigShowed: PlatformConfigCreateNestedManyWithoutEventsShownOnLandingInput
  poster: MediaCreateNestedOneWithoutEventInput
  registeredForEvent: RegisteredForEventCreateNestedManyWithoutEventInput
  shortDescription: String!
  theme: String!
  user: UserCreateNestedOneWithoutPublishedEventInput
}

input EventCreateWithoutUserInput {
  address: String!
  category: filteringCategories!
  date: DateTime!
  description: String!
  format: String
  isApproved: Boolean
  moderate: ModerationCreateNestedOneWithoutEventInput
  moderationChecked: Boolean
  name: String!
  organizer: String!
  platformConfigShowed: PlatformConfigCreateNestedManyWithoutEventsShownOnLandingInput
  poster: MediaCreateNestedOneWithoutEventInput
  registeredForEvent: RegisteredForEventCreateNestedManyWithoutEventInput
  shortDescription: String!
  stream: StreamCreateNestedOneWithoutEventInput
  theme: String!
}

input EventCreatedInput {
  address: String
  category: filteringCategoies!
  date: DateTime!
  description: String!
  format: String
  name: String!
  organizer: String!
  shortDescription: String!
  theme: String!
}

input EventListRelationFilter {
  every: EventWhereInput
  none: EventWhereInput
  some: EventWhereInput
}

input EventOrderByRelationAggregateInput {
  _count: SortOrder
}

input EventOrderByWithRelationInput {
  address: SortOrder
  category: SortOrder
  date: SortOrder
  description: SortOrder
  format: SortOrder
  id: SortOrder
  isApproved: SortOrder
  moderate: ModerationOrderByWithRelationInput
  moderateId: SortOrder
  moderationChecked: SortOrder
  name: SortOrder
  organizer: SortOrder
  platformConfigShowed: PlatformConfigOrderByRelationAggregateInput
  poster: MediaOrderByWithRelationInput
  posterId: SortOrder
  registeredForEvent: RegisteredForEventOrderByRelationAggregateInput
  shortDescription: SortOrder
  stream: StreamOrderByWithRelationInput
  theme: SortOrder
  user: UserOrderByWithRelationInput
  userId: SortOrder
}

input EventScalarWhereInput {
  AND: [EventScalarWhereInput!]
  NOT: [EventScalarWhereInput!]
  OR: [EventScalarWhereInput!]
  address: StringFilter
  category: EnumfilteringCategoriesFilter
  date: DateTimeFilter
  description: StringFilter
  format: StringNullableFilter
  id: IntFilter
  isApproved: BoolFilter
  moderateId: IntNullableFilter
  moderationChecked: BoolNullableFilter
  name: StringFilter
  organizer: StringFilter
  posterId: IntNullableFilter
  shortDescription: StringFilter
  theme: StringFilter
  userId: IntNullableFilter
}

input EventUpdateManyMutationInput {
  address: StringFieldUpdateOperationsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  format: NullableStringFieldUpdateOperationsInput
  isApproved: BoolFieldUpdateOperationsInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  organizer: StringFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  theme: StringFieldUpdateOperationsInput
}

input EventUpdateManyWithWhereWithoutPlatformConfigShowedInput {
  data: EventUpdateManyMutationInput!
  where: EventScalarWhereInput!
}

input EventUpdateManyWithWhereWithoutPosterInput {
  data: EventUpdateManyMutationInput!
  where: EventScalarWhereInput!
}

input EventUpdateManyWithWhereWithoutUserInput {
  data: EventUpdateManyMutationInput!
  where: EventScalarWhereInput!
}

input EventUpdateManyWithoutPlatformConfigShowedInput {
  connect: [EventWhereUniqueInput!]
  connectOrCreate: [EventCreateOrConnectWithoutPlatformConfigShowedInput!]
  create: [EventCreateWithoutPlatformConfigShowedInput!]
  delete: [EventWhereUniqueInput!]
  deleteMany: [EventScalarWhereInput!]
  disconnect: [EventWhereUniqueInput!]
  set: [EventWhereUniqueInput!]
  update: [EventUpdateWithWhereUniqueWithoutPlatformConfigShowedInput!]
  updateMany: [EventUpdateManyWithWhereWithoutPlatformConfigShowedInput!]
  upsert: [EventUpsertWithWhereUniqueWithoutPlatformConfigShowedInput!]
}

input EventUpdateManyWithoutPosterInput {
  connect: [EventWhereUniqueInput!]
  connectOrCreate: [EventCreateOrConnectWithoutPosterInput!]
  create: [EventCreateWithoutPosterInput!]
  createMany: EventCreateManyPosterInputEnvelope
  delete: [EventWhereUniqueInput!]
  deleteMany: [EventScalarWhereInput!]
  disconnect: [EventWhereUniqueInput!]
  set: [EventWhereUniqueInput!]
  update: [EventUpdateWithWhereUniqueWithoutPosterInput!]
  updateMany: [EventUpdateManyWithWhereWithoutPosterInput!]
  upsert: [EventUpsertWithWhereUniqueWithoutPosterInput!]
}

input EventUpdateManyWithoutUserInput {
  connect: [EventWhereUniqueInput!]
  connectOrCreate: [EventCreateOrConnectWithoutUserInput!]
  create: [EventCreateWithoutUserInput!]
  createMany: EventCreateManyUserInputEnvelope
  delete: [EventWhereUniqueInput!]
  deleteMany: [EventScalarWhereInput!]
  disconnect: [EventWhereUniqueInput!]
  set: [EventWhereUniqueInput!]
  update: [EventUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [EventUpdateManyWithWhereWithoutUserInput!]
  upsert: [EventUpsertWithWhereUniqueWithoutUserInput!]
}

input EventUpdateOneWithoutModerateInput {
  connect: EventWhereUniqueInput
  connectOrCreate: EventCreateOrConnectWithoutModerateInput
  create: EventCreateWithoutModerateInput
  delete: Boolean
  disconnect: Boolean
  update: EventUpdateWithoutModerateInput
  upsert: EventUpsertWithoutModerateInput
}

input EventUpdateOneWithoutStreamInput {
  connect: EventWhereUniqueInput
  connectOrCreate: EventCreateOrConnectWithoutStreamInput
  create: EventCreateWithoutStreamInput
  delete: Boolean
  disconnect: Boolean
  update: EventUpdateWithoutStreamInput
  upsert: EventUpsertWithoutStreamInput
}

input EventUpdateWithWhereUniqueWithoutPlatformConfigShowedInput {
  data: EventUpdateWithoutPlatformConfigShowedInput!
  where: EventWhereUniqueInput!
}

input EventUpdateWithWhereUniqueWithoutPosterInput {
  data: EventUpdateWithoutPosterInput!
  where: EventWhereUniqueInput!
}

input EventUpdateWithWhereUniqueWithoutUserInput {
  data: EventUpdateWithoutUserInput!
  where: EventWhereUniqueInput!
}

input EventUpdateWithoutModerateInput {
  address: StringFieldUpdateOperationsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  format: NullableStringFieldUpdateOperationsInput
  isApproved: BoolFieldUpdateOperationsInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  organizer: StringFieldUpdateOperationsInput
  platformConfigShowed: PlatformConfigUpdateManyWithoutEventsShownOnLandingInput
  poster: MediaUpdateOneWithoutEventInput
  registeredForEvent: RegisteredForEventUpdateManyWithoutEventInput
  shortDescription: StringFieldUpdateOperationsInput
  stream: StreamUpdateOneWithoutEventInput
  theme: StringFieldUpdateOperationsInput
  user: UserUpdateOneWithoutPublishedEventInput
}

input EventUpdateWithoutPlatformConfigShowedInput {
  address: StringFieldUpdateOperationsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  format: NullableStringFieldUpdateOperationsInput
  isApproved: BoolFieldUpdateOperationsInput
  moderate: ModerationUpdateOneWithoutEventInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  organizer: StringFieldUpdateOperationsInput
  poster: MediaUpdateOneWithoutEventInput
  registeredForEvent: RegisteredForEventUpdateManyWithoutEventInput
  shortDescription: StringFieldUpdateOperationsInput
  stream: StreamUpdateOneWithoutEventInput
  theme: StringFieldUpdateOperationsInput
  user: UserUpdateOneWithoutPublishedEventInput
}

input EventUpdateWithoutPosterInput {
  address: StringFieldUpdateOperationsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  format: NullableStringFieldUpdateOperationsInput
  isApproved: BoolFieldUpdateOperationsInput
  moderate: ModerationUpdateOneWithoutEventInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  organizer: StringFieldUpdateOperationsInput
  platformConfigShowed: PlatformConfigUpdateManyWithoutEventsShownOnLandingInput
  registeredForEvent: RegisteredForEventUpdateManyWithoutEventInput
  shortDescription: StringFieldUpdateOperationsInput
  stream: StreamUpdateOneWithoutEventInput
  theme: StringFieldUpdateOperationsInput
  user: UserUpdateOneWithoutPublishedEventInput
}

input EventUpdateWithoutStreamInput {
  address: StringFieldUpdateOperationsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  format: NullableStringFieldUpdateOperationsInput
  isApproved: BoolFieldUpdateOperationsInput
  moderate: ModerationUpdateOneWithoutEventInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  organizer: StringFieldUpdateOperationsInput
  platformConfigShowed: PlatformConfigUpdateManyWithoutEventsShownOnLandingInput
  poster: MediaUpdateOneWithoutEventInput
  registeredForEvent: RegisteredForEventUpdateManyWithoutEventInput
  shortDescription: StringFieldUpdateOperationsInput
  theme: StringFieldUpdateOperationsInput
  user: UserUpdateOneWithoutPublishedEventInput
}

input EventUpdateWithoutUserInput {
  address: StringFieldUpdateOperationsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  format: NullableStringFieldUpdateOperationsInput
  isApproved: BoolFieldUpdateOperationsInput
  moderate: ModerationUpdateOneWithoutEventInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  organizer: StringFieldUpdateOperationsInput
  platformConfigShowed: PlatformConfigUpdateManyWithoutEventsShownOnLandingInput
  poster: MediaUpdateOneWithoutEventInput
  registeredForEvent: RegisteredForEventUpdateManyWithoutEventInput
  shortDescription: StringFieldUpdateOperationsInput
  stream: StreamUpdateOneWithoutEventInput
  theme: StringFieldUpdateOperationsInput
}

input EventUpdatedInput {
  address: String
  category: filteringCategoies
  date: DateTime
  description: String
  eventId: Int!
  format: String
  name: String
  organizer: String
  shortDescription: String
  theme: String
}

input EventUpsertWithWhereUniqueWithoutPlatformConfigShowedInput {
  create: EventCreateWithoutPlatformConfigShowedInput!
  update: EventUpdateWithoutPlatformConfigShowedInput!
  where: EventWhereUniqueInput!
}

input EventUpsertWithWhereUniqueWithoutPosterInput {
  create: EventCreateWithoutPosterInput!
  update: EventUpdateWithoutPosterInput!
  where: EventWhereUniqueInput!
}

input EventUpsertWithWhereUniqueWithoutUserInput {
  create: EventCreateWithoutUserInput!
  update: EventUpdateWithoutUserInput!
  where: EventWhereUniqueInput!
}

input EventUpsertWithoutModerateInput {
  create: EventCreateWithoutModerateInput!
  update: EventUpdateWithoutModerateInput!
}

input EventUpsertWithoutStreamInput {
  create: EventCreateWithoutStreamInput!
  update: EventUpdateWithoutStreamInput!
}

input EventWhereInput {
  AND: [EventWhereInput!]
  NOT: [EventWhereInput!]
  OR: [EventWhereInput!]
  address: StringFilter
  category: EnumfilteringCategoriesFilter
  date: DateTimeFilter
  description: StringFilter
  format: StringNullableFilter
  id: IntFilter
  isApproved: BoolFilter
  moderate: ModerationWhereInput
  moderateId: IntNullableFilter
  moderationChecked: BoolNullableFilter
  name: StringFilter
  organizer: StringFilter
  platformConfigShowed: PlatformConfigListRelationFilter
  poster: MediaWhereInput
  posterId: IntNullableFilter
  registeredForEvent: RegisteredForEventListRelationFilter
  shortDescription: StringFilter
  stream: StreamWhereInput
  theme: StringFilter
  user: UserWhereInput
  userId: IntNullableFilter
}

input EventWhereUniqueInput {
  id: Int
  moderateId: Int
}

input FloatFieldUpdateOperationsInput {
  decrement: Float
  divide: Float
  increment: Float
  multiply: Float
  set: Float
}

input FloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

type Media {
  company(after: CompanyWhereUniqueInput, before: CompanyWhereUniqueInput, first: Int, last: Int): [Company!]!
  createdAt: DateTime
  crowdfundingStory: CrowdFunding
  event(after: EventWhereUniqueInput, before: EventWhereUniqueInput, first: Int, last: Int): [Event!]!
  id: Int!
  link: String
  post(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int): [Post!]!
  postMedia: Post
  projectDescripiton: Project
  projectMedia: Project
  projectPoster(after: ProjectWhereUniqueInput, before: ProjectWhereUniqueInput, first: Int, last: Int): [Project!]!
  type: mediaType!
  user(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

input MediaCreateManyCrowdfundingStoryInput {
  createdAt: DateTime
  id: Int
  isApproved: Boolean
  postMediaId: Int
  projectDescriptionId: Int
  projectMediaId: Int
  type: mediaType!
  url: String!
}

input MediaCreateManyCrowdfundingStoryInputEnvelope {
  data: [MediaCreateManyCrowdfundingStoryInput!]
  skipDuplicates: Boolean
}

input MediaCreateManyPostMediaInput {
  createdAt: DateTime
  crowdfundingStoryId: Int
  id: Int
  isApproved: Boolean
  projectDescriptionId: Int
  projectMediaId: Int
  type: mediaType!
  url: String!
}

input MediaCreateManyPostMediaInputEnvelope {
  data: [MediaCreateManyPostMediaInput!]
  skipDuplicates: Boolean
}

input MediaCreateManyProjectDescripitonInput {
  createdAt: DateTime
  crowdfundingStoryId: Int
  id: Int
  isApproved: Boolean
  postMediaId: Int
  projectMediaId: Int
  type: mediaType!
  url: String!
}

input MediaCreateManyProjectDescripitonInputEnvelope {
  data: [MediaCreateManyProjectDescripitonInput!]
  skipDuplicates: Boolean
}

input MediaCreateManyProjectMediaInput {
  createdAt: DateTime
  crowdfundingStoryId: Int
  id: Int
  isApproved: Boolean
  postMediaId: Int
  projectDescriptionId: Int
  type: mediaType!
  url: String!
}

input MediaCreateManyProjectMediaInputEnvelope {
  data: [MediaCreateManyProjectMediaInput!]
  skipDuplicates: Boolean
}

input MediaCreateNestedManyWithoutCrowdfundingStoryInput {
  connect: [MediaWhereUniqueInput!]
  connectOrCreate: [MediaCreateOrConnectWithoutCrowdfundingStoryInput!]
  create: [MediaCreateWithoutCrowdfundingStoryInput!]
  createMany: MediaCreateManyCrowdfundingStoryInputEnvelope
}

input MediaCreateNestedManyWithoutPostMediaInput {
  connect: [MediaWhereUniqueInput!]
  connectOrCreate: [MediaCreateOrConnectWithoutPostMediaInput!]
  create: [MediaCreateWithoutPostMediaInput!]
  createMany: MediaCreateManyPostMediaInputEnvelope
}

input MediaCreateNestedManyWithoutProjectDescripitonInput {
  connect: [MediaWhereUniqueInput!]
  connectOrCreate: [MediaCreateOrConnectWithoutProjectDescripitonInput!]
  create: [MediaCreateWithoutProjectDescripitonInput!]
  createMany: MediaCreateManyProjectDescripitonInputEnvelope
}

input MediaCreateNestedManyWithoutProjectMediaInput {
  connect: [MediaWhereUniqueInput!]
  connectOrCreate: [MediaCreateOrConnectWithoutProjectMediaInput!]
  create: [MediaCreateWithoutProjectMediaInput!]
  createMany: MediaCreateManyProjectMediaInputEnvelope
}

input MediaCreateNestedOneWithoutCompanyInput {
  connect: MediaWhereUniqueInput
  connectOrCreate: MediaCreateOrConnectWithoutCompanyInput
  create: MediaCreateWithoutCompanyInput
}

input MediaCreateNestedOneWithoutCrowdFundingInput {
  connect: MediaWhereUniqueInput
  connectOrCreate: MediaCreateOrConnectWithoutCrowdFundingInput
  create: MediaCreateWithoutCrowdFundingInput
}

input MediaCreateNestedOneWithoutEventInput {
  connect: MediaWhereUniqueInput
  connectOrCreate: MediaCreateOrConnectWithoutEventInput
  create: MediaCreateWithoutEventInput
}

input MediaCreateNestedOneWithoutMessagerGroupInput {
  connect: MediaWhereUniqueInput
  connectOrCreate: MediaCreateOrConnectWithoutMessagerGroupInput
  create: MediaCreateWithoutMessagerGroupInput
}

input MediaCreateNestedOneWithoutPostInput {
  connect: MediaWhereUniqueInput
  connectOrCreate: MediaCreateOrConnectWithoutPostInput
  create: MediaCreateWithoutPostInput
}

input MediaCreateNestedOneWithoutProjectPosterInput {
  connect: MediaWhereUniqueInput
  connectOrCreate: MediaCreateOrConnectWithoutProjectPosterInput
  create: MediaCreateWithoutProjectPosterInput
}

input MediaCreateNestedOneWithoutSectionInput {
  connect: MediaWhereUniqueInput
  connectOrCreate: MediaCreateOrConnectWithoutSectionInput
  create: MediaCreateWithoutSectionInput
}

input MediaCreateNestedOneWithoutUserInput {
  connect: MediaWhereUniqueInput
  connectOrCreate: MediaCreateOrConnectWithoutUserInput
  create: MediaCreateWithoutUserInput
}

input MediaCreateOrConnectWithoutCompanyInput {
  create: MediaCreateWithoutCompanyInput!
  where: MediaWhereUniqueInput!
}

input MediaCreateOrConnectWithoutCrowdFundingInput {
  create: MediaCreateWithoutCrowdFundingInput!
  where: MediaWhereUniqueInput!
}

input MediaCreateOrConnectWithoutCrowdfundingStoryInput {
  create: MediaCreateWithoutCrowdfundingStoryInput!
  where: MediaWhereUniqueInput!
}

input MediaCreateOrConnectWithoutEventInput {
  create: MediaCreateWithoutEventInput!
  where: MediaWhereUniqueInput!
}

input MediaCreateOrConnectWithoutMessagerGroupInput {
  create: MediaCreateWithoutMessagerGroupInput!
  where: MediaWhereUniqueInput!
}

input MediaCreateOrConnectWithoutPostInput {
  create: MediaCreateWithoutPostInput!
  where: MediaWhereUniqueInput!
}

input MediaCreateOrConnectWithoutPostMediaInput {
  create: MediaCreateWithoutPostMediaInput!
  where: MediaWhereUniqueInput!
}

input MediaCreateOrConnectWithoutProjectDescripitonInput {
  create: MediaCreateWithoutProjectDescripitonInput!
  where: MediaWhereUniqueInput!
}

input MediaCreateOrConnectWithoutProjectMediaInput {
  create: MediaCreateWithoutProjectMediaInput!
  where: MediaWhereUniqueInput!
}

input MediaCreateOrConnectWithoutProjectPosterInput {
  create: MediaCreateWithoutProjectPosterInput!
  where: MediaWhereUniqueInput!
}

input MediaCreateOrConnectWithoutSectionInput {
  create: MediaCreateWithoutSectionInput!
  where: MediaWhereUniqueInput!
}

input MediaCreateOrConnectWithoutUserInput {
  create: MediaCreateWithoutUserInput!
  where: MediaWhereUniqueInput!
}

input MediaCreateWithoutCompanyInput {
  createdAt: DateTime
  crowdFunding: CrowdFundingCreateNestedManyWithoutPosterInput
  crowdfundingStory: CrowdFundingCreateNestedOneWithoutCrowdFundingMediaInput
  event: EventCreateNestedManyWithoutPosterInput
  isApproved: Boolean
  messagerGroup: MessagerGroupCreateNestedManyWithoutAvatarInput
  post: PostCreateNestedManyWithoutPosterInput
  postMedia: PostCreateNestedOneWithoutPostMediaInput
  projectDescripiton: ProjectCreateNestedOneWithoutProjectMediaInput
  projectMedia: ProjectCreateNestedOneWithoutPresentationMediaInput
  projectPoster: ProjectCreateNestedManyWithoutPosterInput
  section: SectionCreateNestedManyWithoutMediaInput
  type: mediaType!
  url: String!
  user: UserCreateNestedManyWithoutAvatarInput
}

input MediaCreateWithoutCrowdFundingInput {
  company: CompanyCreateNestedManyWithoutAvatarInput
  createdAt: DateTime
  crowdfundingStory: CrowdFundingCreateNestedOneWithoutCrowdFundingMediaInput
  event: EventCreateNestedManyWithoutPosterInput
  isApproved: Boolean
  messagerGroup: MessagerGroupCreateNestedManyWithoutAvatarInput
  post: PostCreateNestedManyWithoutPosterInput
  postMedia: PostCreateNestedOneWithoutPostMediaInput
  projectDescripiton: ProjectCreateNestedOneWithoutProjectMediaInput
  projectMedia: ProjectCreateNestedOneWithoutPresentationMediaInput
  projectPoster: ProjectCreateNestedManyWithoutPosterInput
  section: SectionCreateNestedManyWithoutMediaInput
  type: mediaType!
  url: String!
  user: UserCreateNestedManyWithoutAvatarInput
}

input MediaCreateWithoutCrowdfundingStoryInput {
  company: CompanyCreateNestedManyWithoutAvatarInput
  createdAt: DateTime
  crowdFunding: CrowdFundingCreateNestedManyWithoutPosterInput
  event: EventCreateNestedManyWithoutPosterInput
  isApproved: Boolean
  messagerGroup: MessagerGroupCreateNestedManyWithoutAvatarInput
  post: PostCreateNestedManyWithoutPosterInput
  postMedia: PostCreateNestedOneWithoutPostMediaInput
  projectDescripiton: ProjectCreateNestedOneWithoutProjectMediaInput
  projectMedia: ProjectCreateNestedOneWithoutPresentationMediaInput
  projectPoster: ProjectCreateNestedManyWithoutPosterInput
  section: SectionCreateNestedManyWithoutMediaInput
  type: mediaType!
  url: String!
  user: UserCreateNestedManyWithoutAvatarInput
}

input MediaCreateWithoutEventInput {
  company: CompanyCreateNestedManyWithoutAvatarInput
  createdAt: DateTime
  crowdFunding: CrowdFundingCreateNestedManyWithoutPosterInput
  crowdfundingStory: CrowdFundingCreateNestedOneWithoutCrowdFundingMediaInput
  isApproved: Boolean
  messagerGroup: MessagerGroupCreateNestedManyWithoutAvatarInput
  post: PostCreateNestedManyWithoutPosterInput
  postMedia: PostCreateNestedOneWithoutPostMediaInput
  projectDescripiton: ProjectCreateNestedOneWithoutProjectMediaInput
  projectMedia: ProjectCreateNestedOneWithoutPresentationMediaInput
  projectPoster: ProjectCreateNestedManyWithoutPosterInput
  section: SectionCreateNestedManyWithoutMediaInput
  type: mediaType!
  url: String!
  user: UserCreateNestedManyWithoutAvatarInput
}

input MediaCreateWithoutMessagerGroupInput {
  company: CompanyCreateNestedManyWithoutAvatarInput
  createdAt: DateTime
  crowdFunding: CrowdFundingCreateNestedManyWithoutPosterInput
  crowdfundingStory: CrowdFundingCreateNestedOneWithoutCrowdFundingMediaInput
  event: EventCreateNestedManyWithoutPosterInput
  isApproved: Boolean
  post: PostCreateNestedManyWithoutPosterInput
  postMedia: PostCreateNestedOneWithoutPostMediaInput
  projectDescripiton: ProjectCreateNestedOneWithoutProjectMediaInput
  projectMedia: ProjectCreateNestedOneWithoutPresentationMediaInput
  projectPoster: ProjectCreateNestedManyWithoutPosterInput
  section: SectionCreateNestedManyWithoutMediaInput
  type: mediaType!
  url: String!
  user: UserCreateNestedManyWithoutAvatarInput
}

input MediaCreateWithoutPostInput {
  company: CompanyCreateNestedManyWithoutAvatarInput
  createdAt: DateTime
  crowdFunding: CrowdFundingCreateNestedManyWithoutPosterInput
  crowdfundingStory: CrowdFundingCreateNestedOneWithoutCrowdFundingMediaInput
  event: EventCreateNestedManyWithoutPosterInput
  isApproved: Boolean
  messagerGroup: MessagerGroupCreateNestedManyWithoutAvatarInput
  postMedia: PostCreateNestedOneWithoutPostMediaInput
  projectDescripiton: ProjectCreateNestedOneWithoutProjectMediaInput
  projectMedia: ProjectCreateNestedOneWithoutPresentationMediaInput
  projectPoster: ProjectCreateNestedManyWithoutPosterInput
  section: SectionCreateNestedManyWithoutMediaInput
  type: mediaType!
  url: String!
  user: UserCreateNestedManyWithoutAvatarInput
}

input MediaCreateWithoutPostMediaInput {
  company: CompanyCreateNestedManyWithoutAvatarInput
  createdAt: DateTime
  crowdFunding: CrowdFundingCreateNestedManyWithoutPosterInput
  crowdfundingStory: CrowdFundingCreateNestedOneWithoutCrowdFundingMediaInput
  event: EventCreateNestedManyWithoutPosterInput
  isApproved: Boolean
  messagerGroup: MessagerGroupCreateNestedManyWithoutAvatarInput
  post: PostCreateNestedManyWithoutPosterInput
  projectDescripiton: ProjectCreateNestedOneWithoutProjectMediaInput
  projectMedia: ProjectCreateNestedOneWithoutPresentationMediaInput
  projectPoster: ProjectCreateNestedManyWithoutPosterInput
  section: SectionCreateNestedManyWithoutMediaInput
  type: mediaType!
  url: String!
  user: UserCreateNestedManyWithoutAvatarInput
}

input MediaCreateWithoutProjectDescripitonInput {
  company: CompanyCreateNestedManyWithoutAvatarInput
  createdAt: DateTime
  crowdFunding: CrowdFundingCreateNestedManyWithoutPosterInput
  crowdfundingStory: CrowdFundingCreateNestedOneWithoutCrowdFundingMediaInput
  event: EventCreateNestedManyWithoutPosterInput
  isApproved: Boolean
  messagerGroup: MessagerGroupCreateNestedManyWithoutAvatarInput
  post: PostCreateNestedManyWithoutPosterInput
  postMedia: PostCreateNestedOneWithoutPostMediaInput
  projectMedia: ProjectCreateNestedOneWithoutPresentationMediaInput
  projectPoster: ProjectCreateNestedManyWithoutPosterInput
  section: SectionCreateNestedManyWithoutMediaInput
  type: mediaType!
  url: String!
  user: UserCreateNestedManyWithoutAvatarInput
}

input MediaCreateWithoutProjectMediaInput {
  company: CompanyCreateNestedManyWithoutAvatarInput
  createdAt: DateTime
  crowdFunding: CrowdFundingCreateNestedManyWithoutPosterInput
  crowdfundingStory: CrowdFundingCreateNestedOneWithoutCrowdFundingMediaInput
  event: EventCreateNestedManyWithoutPosterInput
  isApproved: Boolean
  messagerGroup: MessagerGroupCreateNestedManyWithoutAvatarInput
  post: PostCreateNestedManyWithoutPosterInput
  postMedia: PostCreateNestedOneWithoutPostMediaInput
  projectDescripiton: ProjectCreateNestedOneWithoutProjectMediaInput
  projectPoster: ProjectCreateNestedManyWithoutPosterInput
  section: SectionCreateNestedManyWithoutMediaInput
  type: mediaType!
  url: String!
  user: UserCreateNestedManyWithoutAvatarInput
}

input MediaCreateWithoutProjectPosterInput {
  company: CompanyCreateNestedManyWithoutAvatarInput
  createdAt: DateTime
  crowdFunding: CrowdFundingCreateNestedManyWithoutPosterInput
  crowdfundingStory: CrowdFundingCreateNestedOneWithoutCrowdFundingMediaInput
  event: EventCreateNestedManyWithoutPosterInput
  isApproved: Boolean
  messagerGroup: MessagerGroupCreateNestedManyWithoutAvatarInput
  post: PostCreateNestedManyWithoutPosterInput
  postMedia: PostCreateNestedOneWithoutPostMediaInput
  projectDescripiton: ProjectCreateNestedOneWithoutProjectMediaInput
  projectMedia: ProjectCreateNestedOneWithoutPresentationMediaInput
  section: SectionCreateNestedManyWithoutMediaInput
  type: mediaType!
  url: String!
  user: UserCreateNestedManyWithoutAvatarInput
}

input MediaCreateWithoutSectionInput {
  company: CompanyCreateNestedManyWithoutAvatarInput
  createdAt: DateTime
  crowdFunding: CrowdFundingCreateNestedManyWithoutPosterInput
  crowdfundingStory: CrowdFundingCreateNestedOneWithoutCrowdFundingMediaInput
  event: EventCreateNestedManyWithoutPosterInput
  isApproved: Boolean
  messagerGroup: MessagerGroupCreateNestedManyWithoutAvatarInput
  post: PostCreateNestedManyWithoutPosterInput
  postMedia: PostCreateNestedOneWithoutPostMediaInput
  projectDescripiton: ProjectCreateNestedOneWithoutProjectMediaInput
  projectMedia: ProjectCreateNestedOneWithoutPresentationMediaInput
  projectPoster: ProjectCreateNestedManyWithoutPosterInput
  type: mediaType!
  url: String!
  user: UserCreateNestedManyWithoutAvatarInput
}

input MediaCreateWithoutUserInput {
  company: CompanyCreateNestedManyWithoutAvatarInput
  createdAt: DateTime
  crowdFunding: CrowdFundingCreateNestedManyWithoutPosterInput
  crowdfundingStory: CrowdFundingCreateNestedOneWithoutCrowdFundingMediaInput
  event: EventCreateNestedManyWithoutPosterInput
  isApproved: Boolean
  messagerGroup: MessagerGroupCreateNestedManyWithoutAvatarInput
  post: PostCreateNestedManyWithoutPosterInput
  postMedia: PostCreateNestedOneWithoutPostMediaInput
  projectDescripiton: ProjectCreateNestedOneWithoutProjectMediaInput
  projectMedia: ProjectCreateNestedOneWithoutPresentationMediaInput
  projectPoster: ProjectCreateNestedManyWithoutPosterInput
  section: SectionCreateNestedManyWithoutMediaInput
  type: mediaType!
  url: String!
}

input MediaListRelationFilter {
  every: MediaWhereInput
  none: MediaWhereInput
  some: MediaWhereInput
}

input MediaOrderByRelationAggregateInput {
  _count: SortOrder
}

input MediaOrderByWithRelationInput {
  company: CompanyOrderByRelationAggregateInput
  createdAt: SortOrder
  crowdFunding: CrowdFundingOrderByRelationAggregateInput
  crowdfundingStory: CrowdFundingOrderByWithRelationInput
  crowdfundingStoryId: SortOrder
  event: EventOrderByRelationAggregateInput
  id: SortOrder
  isApproved: SortOrder
  messagerGroup: MessagerGroupOrderByRelationAggregateInput
  post: PostOrderByRelationAggregateInput
  postMedia: PostOrderByWithRelationInput
  postMediaId: SortOrder
  projectDescripiton: ProjectOrderByWithRelationInput
  projectDescriptionId: SortOrder
  projectMedia: ProjectOrderByWithRelationInput
  projectMediaId: SortOrder
  projectPoster: ProjectOrderByRelationAggregateInput
  section: SectionOrderByRelationAggregateInput
  type: SortOrder
  url: SortOrder
  user: UserOrderByRelationAggregateInput
}

input MediaScalarWhereInput {
  AND: [MediaScalarWhereInput!]
  NOT: [MediaScalarWhereInput!]
  OR: [MediaScalarWhereInput!]
  createdAt: DateTimeNullableFilter
  crowdfundingStoryId: IntNullableFilter
  id: IntFilter
  isApproved: BoolFilter
  postMediaId: IntNullableFilter
  projectDescriptionId: IntNullableFilter
  projectMediaId: IntNullableFilter
  type: EnummediaTypeFilter
  url: StringFilter
}

input MediaUpdateManyMutationInput {
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  isApproved: BoolFieldUpdateOperationsInput
  type: EnummediaTypeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input MediaUpdateManyWithWhereWithoutCrowdfundingStoryInput {
  data: MediaUpdateManyMutationInput!
  where: MediaScalarWhereInput!
}

input MediaUpdateManyWithWhereWithoutPostMediaInput {
  data: MediaUpdateManyMutationInput!
  where: MediaScalarWhereInput!
}

input MediaUpdateManyWithWhereWithoutProjectDescripitonInput {
  data: MediaUpdateManyMutationInput!
  where: MediaScalarWhereInput!
}

input MediaUpdateManyWithWhereWithoutProjectMediaInput {
  data: MediaUpdateManyMutationInput!
  where: MediaScalarWhereInput!
}

input MediaUpdateManyWithoutCrowdfundingStoryInput {
  connect: [MediaWhereUniqueInput!]
  connectOrCreate: [MediaCreateOrConnectWithoutCrowdfundingStoryInput!]
  create: [MediaCreateWithoutCrowdfundingStoryInput!]
  createMany: MediaCreateManyCrowdfundingStoryInputEnvelope
  delete: [MediaWhereUniqueInput!]
  deleteMany: [MediaScalarWhereInput!]
  disconnect: [MediaWhereUniqueInput!]
  set: [MediaWhereUniqueInput!]
  update: [MediaUpdateWithWhereUniqueWithoutCrowdfundingStoryInput!]
  updateMany: [MediaUpdateManyWithWhereWithoutCrowdfundingStoryInput!]
  upsert: [MediaUpsertWithWhereUniqueWithoutCrowdfundingStoryInput!]
}

input MediaUpdateManyWithoutPostMediaInput {
  connect: [MediaWhereUniqueInput!]
  connectOrCreate: [MediaCreateOrConnectWithoutPostMediaInput!]
  create: [MediaCreateWithoutPostMediaInput!]
  createMany: MediaCreateManyPostMediaInputEnvelope
  delete: [MediaWhereUniqueInput!]
  deleteMany: [MediaScalarWhereInput!]
  disconnect: [MediaWhereUniqueInput!]
  set: [MediaWhereUniqueInput!]
  update: [MediaUpdateWithWhereUniqueWithoutPostMediaInput!]
  updateMany: [MediaUpdateManyWithWhereWithoutPostMediaInput!]
  upsert: [MediaUpsertWithWhereUniqueWithoutPostMediaInput!]
}

input MediaUpdateManyWithoutProjectDescripitonInput {
  connect: [MediaWhereUniqueInput!]
  connectOrCreate: [MediaCreateOrConnectWithoutProjectDescripitonInput!]
  create: [MediaCreateWithoutProjectDescripitonInput!]
  createMany: MediaCreateManyProjectDescripitonInputEnvelope
  delete: [MediaWhereUniqueInput!]
  deleteMany: [MediaScalarWhereInput!]
  disconnect: [MediaWhereUniqueInput!]
  set: [MediaWhereUniqueInput!]
  update: [MediaUpdateWithWhereUniqueWithoutProjectDescripitonInput!]
  updateMany: [MediaUpdateManyWithWhereWithoutProjectDescripitonInput!]
  upsert: [MediaUpsertWithWhereUniqueWithoutProjectDescripitonInput!]
}

input MediaUpdateManyWithoutProjectMediaInput {
  connect: [MediaWhereUniqueInput!]
  connectOrCreate: [MediaCreateOrConnectWithoutProjectMediaInput!]
  create: [MediaCreateWithoutProjectMediaInput!]
  createMany: MediaCreateManyProjectMediaInputEnvelope
  delete: [MediaWhereUniqueInput!]
  deleteMany: [MediaScalarWhereInput!]
  disconnect: [MediaWhereUniqueInput!]
  set: [MediaWhereUniqueInput!]
  update: [MediaUpdateWithWhereUniqueWithoutProjectMediaInput!]
  updateMany: [MediaUpdateManyWithWhereWithoutProjectMediaInput!]
  upsert: [MediaUpsertWithWhereUniqueWithoutProjectMediaInput!]
}

input MediaUpdateOneWithoutCompanyInput {
  connect: MediaWhereUniqueInput
  connectOrCreate: MediaCreateOrConnectWithoutCompanyInput
  create: MediaCreateWithoutCompanyInput
  delete: Boolean
  disconnect: Boolean
  update: MediaUpdateWithoutCompanyInput
  upsert: MediaUpsertWithoutCompanyInput
}

input MediaUpdateOneWithoutCrowdFundingInput {
  connect: MediaWhereUniqueInput
  connectOrCreate: MediaCreateOrConnectWithoutCrowdFundingInput
  create: MediaCreateWithoutCrowdFundingInput
  delete: Boolean
  disconnect: Boolean
  update: MediaUpdateWithoutCrowdFundingInput
  upsert: MediaUpsertWithoutCrowdFundingInput
}

input MediaUpdateOneWithoutEventInput {
  connect: MediaWhereUniqueInput
  connectOrCreate: MediaCreateOrConnectWithoutEventInput
  create: MediaCreateWithoutEventInput
  delete: Boolean
  disconnect: Boolean
  update: MediaUpdateWithoutEventInput
  upsert: MediaUpsertWithoutEventInput
}

input MediaUpdateOneWithoutMessagerGroupInput {
  connect: MediaWhereUniqueInput
  connectOrCreate: MediaCreateOrConnectWithoutMessagerGroupInput
  create: MediaCreateWithoutMessagerGroupInput
  delete: Boolean
  disconnect: Boolean
  update: MediaUpdateWithoutMessagerGroupInput
  upsert: MediaUpsertWithoutMessagerGroupInput
}

input MediaUpdateOneWithoutPostInput {
  connect: MediaWhereUniqueInput
  connectOrCreate: MediaCreateOrConnectWithoutPostInput
  create: MediaCreateWithoutPostInput
  delete: Boolean
  disconnect: Boolean
  update: MediaUpdateWithoutPostInput
  upsert: MediaUpsertWithoutPostInput
}

input MediaUpdateOneWithoutProjectPosterInput {
  connect: MediaWhereUniqueInput
  connectOrCreate: MediaCreateOrConnectWithoutProjectPosterInput
  create: MediaCreateWithoutProjectPosterInput
  delete: Boolean
  disconnect: Boolean
  update: MediaUpdateWithoutProjectPosterInput
  upsert: MediaUpsertWithoutProjectPosterInput
}

input MediaUpdateOneWithoutSectionInput {
  connect: MediaWhereUniqueInput
  connectOrCreate: MediaCreateOrConnectWithoutSectionInput
  create: MediaCreateWithoutSectionInput
  delete: Boolean
  disconnect: Boolean
  update: MediaUpdateWithoutSectionInput
  upsert: MediaUpsertWithoutSectionInput
}

input MediaUpdateOneWithoutUserInput {
  connect: MediaWhereUniqueInput
  connectOrCreate: MediaCreateOrConnectWithoutUserInput
  create: MediaCreateWithoutUserInput
  delete: Boolean
  disconnect: Boolean
  update: MediaUpdateWithoutUserInput
  upsert: MediaUpsertWithoutUserInput
}

input MediaUpdateWithWhereUniqueWithoutCrowdfundingStoryInput {
  data: MediaUpdateWithoutCrowdfundingStoryInput!
  where: MediaWhereUniqueInput!
}

input MediaUpdateWithWhereUniqueWithoutPostMediaInput {
  data: MediaUpdateWithoutPostMediaInput!
  where: MediaWhereUniqueInput!
}

input MediaUpdateWithWhereUniqueWithoutProjectDescripitonInput {
  data: MediaUpdateWithoutProjectDescripitonInput!
  where: MediaWhereUniqueInput!
}

input MediaUpdateWithWhereUniqueWithoutProjectMediaInput {
  data: MediaUpdateWithoutProjectMediaInput!
  where: MediaWhereUniqueInput!
}

input MediaUpdateWithoutCompanyInput {
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  crowdFunding: CrowdFundingUpdateManyWithoutPosterInput
  crowdfundingStory: CrowdFundingUpdateOneWithoutCrowdFundingMediaInput
  event: EventUpdateManyWithoutPosterInput
  isApproved: BoolFieldUpdateOperationsInput
  messagerGroup: MessagerGroupUpdateManyWithoutAvatarInput
  post: PostUpdateManyWithoutPosterInput
  postMedia: PostUpdateOneWithoutPostMediaInput
  projectDescripiton: ProjectUpdateOneWithoutProjectMediaInput
  projectMedia: ProjectUpdateOneWithoutPresentationMediaInput
  projectPoster: ProjectUpdateManyWithoutPosterInput
  section: SectionUpdateManyWithoutMediaInput
  type: EnummediaTypeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  user: UserUpdateManyWithoutAvatarInput
}

input MediaUpdateWithoutCrowdFundingInput {
  company: CompanyUpdateManyWithoutAvatarInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  crowdfundingStory: CrowdFundingUpdateOneWithoutCrowdFundingMediaInput
  event: EventUpdateManyWithoutPosterInput
  isApproved: BoolFieldUpdateOperationsInput
  messagerGroup: MessagerGroupUpdateManyWithoutAvatarInput
  post: PostUpdateManyWithoutPosterInput
  postMedia: PostUpdateOneWithoutPostMediaInput
  projectDescripiton: ProjectUpdateOneWithoutProjectMediaInput
  projectMedia: ProjectUpdateOneWithoutPresentationMediaInput
  projectPoster: ProjectUpdateManyWithoutPosterInput
  section: SectionUpdateManyWithoutMediaInput
  type: EnummediaTypeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  user: UserUpdateManyWithoutAvatarInput
}

input MediaUpdateWithoutCrowdfundingStoryInput {
  company: CompanyUpdateManyWithoutAvatarInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  crowdFunding: CrowdFundingUpdateManyWithoutPosterInput
  event: EventUpdateManyWithoutPosterInput
  isApproved: BoolFieldUpdateOperationsInput
  messagerGroup: MessagerGroupUpdateManyWithoutAvatarInput
  post: PostUpdateManyWithoutPosterInput
  postMedia: PostUpdateOneWithoutPostMediaInput
  projectDescripiton: ProjectUpdateOneWithoutProjectMediaInput
  projectMedia: ProjectUpdateOneWithoutPresentationMediaInput
  projectPoster: ProjectUpdateManyWithoutPosterInput
  section: SectionUpdateManyWithoutMediaInput
  type: EnummediaTypeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  user: UserUpdateManyWithoutAvatarInput
}

input MediaUpdateWithoutEventInput {
  company: CompanyUpdateManyWithoutAvatarInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  crowdFunding: CrowdFundingUpdateManyWithoutPosterInput
  crowdfundingStory: CrowdFundingUpdateOneWithoutCrowdFundingMediaInput
  isApproved: BoolFieldUpdateOperationsInput
  messagerGroup: MessagerGroupUpdateManyWithoutAvatarInput
  post: PostUpdateManyWithoutPosterInput
  postMedia: PostUpdateOneWithoutPostMediaInput
  projectDescripiton: ProjectUpdateOneWithoutProjectMediaInput
  projectMedia: ProjectUpdateOneWithoutPresentationMediaInput
  projectPoster: ProjectUpdateManyWithoutPosterInput
  section: SectionUpdateManyWithoutMediaInput
  type: EnummediaTypeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  user: UserUpdateManyWithoutAvatarInput
}

input MediaUpdateWithoutMessagerGroupInput {
  company: CompanyUpdateManyWithoutAvatarInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  crowdFunding: CrowdFundingUpdateManyWithoutPosterInput
  crowdfundingStory: CrowdFundingUpdateOneWithoutCrowdFundingMediaInput
  event: EventUpdateManyWithoutPosterInput
  isApproved: BoolFieldUpdateOperationsInput
  post: PostUpdateManyWithoutPosterInput
  postMedia: PostUpdateOneWithoutPostMediaInput
  projectDescripiton: ProjectUpdateOneWithoutProjectMediaInput
  projectMedia: ProjectUpdateOneWithoutPresentationMediaInput
  projectPoster: ProjectUpdateManyWithoutPosterInput
  section: SectionUpdateManyWithoutMediaInput
  type: EnummediaTypeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  user: UserUpdateManyWithoutAvatarInput
}

input MediaUpdateWithoutPostInput {
  company: CompanyUpdateManyWithoutAvatarInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  crowdFunding: CrowdFundingUpdateManyWithoutPosterInput
  crowdfundingStory: CrowdFundingUpdateOneWithoutCrowdFundingMediaInput
  event: EventUpdateManyWithoutPosterInput
  isApproved: BoolFieldUpdateOperationsInput
  messagerGroup: MessagerGroupUpdateManyWithoutAvatarInput
  postMedia: PostUpdateOneWithoutPostMediaInput
  projectDescripiton: ProjectUpdateOneWithoutProjectMediaInput
  projectMedia: ProjectUpdateOneWithoutPresentationMediaInput
  projectPoster: ProjectUpdateManyWithoutPosterInput
  section: SectionUpdateManyWithoutMediaInput
  type: EnummediaTypeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  user: UserUpdateManyWithoutAvatarInput
}

input MediaUpdateWithoutPostMediaInput {
  company: CompanyUpdateManyWithoutAvatarInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  crowdFunding: CrowdFundingUpdateManyWithoutPosterInput
  crowdfundingStory: CrowdFundingUpdateOneWithoutCrowdFundingMediaInput
  event: EventUpdateManyWithoutPosterInput
  isApproved: BoolFieldUpdateOperationsInput
  messagerGroup: MessagerGroupUpdateManyWithoutAvatarInput
  post: PostUpdateManyWithoutPosterInput
  projectDescripiton: ProjectUpdateOneWithoutProjectMediaInput
  projectMedia: ProjectUpdateOneWithoutPresentationMediaInput
  projectPoster: ProjectUpdateManyWithoutPosterInput
  section: SectionUpdateManyWithoutMediaInput
  type: EnummediaTypeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  user: UserUpdateManyWithoutAvatarInput
}

input MediaUpdateWithoutProjectDescripitonInput {
  company: CompanyUpdateManyWithoutAvatarInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  crowdFunding: CrowdFundingUpdateManyWithoutPosterInput
  crowdfundingStory: CrowdFundingUpdateOneWithoutCrowdFundingMediaInput
  event: EventUpdateManyWithoutPosterInput
  isApproved: BoolFieldUpdateOperationsInput
  messagerGroup: MessagerGroupUpdateManyWithoutAvatarInput
  post: PostUpdateManyWithoutPosterInput
  postMedia: PostUpdateOneWithoutPostMediaInput
  projectMedia: ProjectUpdateOneWithoutPresentationMediaInput
  projectPoster: ProjectUpdateManyWithoutPosterInput
  section: SectionUpdateManyWithoutMediaInput
  type: EnummediaTypeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  user: UserUpdateManyWithoutAvatarInput
}

input MediaUpdateWithoutProjectMediaInput {
  company: CompanyUpdateManyWithoutAvatarInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  crowdFunding: CrowdFundingUpdateManyWithoutPosterInput
  crowdfundingStory: CrowdFundingUpdateOneWithoutCrowdFundingMediaInput
  event: EventUpdateManyWithoutPosterInput
  isApproved: BoolFieldUpdateOperationsInput
  messagerGroup: MessagerGroupUpdateManyWithoutAvatarInput
  post: PostUpdateManyWithoutPosterInput
  postMedia: PostUpdateOneWithoutPostMediaInput
  projectDescripiton: ProjectUpdateOneWithoutProjectMediaInput
  projectPoster: ProjectUpdateManyWithoutPosterInput
  section: SectionUpdateManyWithoutMediaInput
  type: EnummediaTypeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  user: UserUpdateManyWithoutAvatarInput
}

input MediaUpdateWithoutProjectPosterInput {
  company: CompanyUpdateManyWithoutAvatarInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  crowdFunding: CrowdFundingUpdateManyWithoutPosterInput
  crowdfundingStory: CrowdFundingUpdateOneWithoutCrowdFundingMediaInput
  event: EventUpdateManyWithoutPosterInput
  isApproved: BoolFieldUpdateOperationsInput
  messagerGroup: MessagerGroupUpdateManyWithoutAvatarInput
  post: PostUpdateManyWithoutPosterInput
  postMedia: PostUpdateOneWithoutPostMediaInput
  projectDescripiton: ProjectUpdateOneWithoutProjectMediaInput
  projectMedia: ProjectUpdateOneWithoutPresentationMediaInput
  section: SectionUpdateManyWithoutMediaInput
  type: EnummediaTypeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  user: UserUpdateManyWithoutAvatarInput
}

input MediaUpdateWithoutSectionInput {
  company: CompanyUpdateManyWithoutAvatarInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  crowdFunding: CrowdFundingUpdateManyWithoutPosterInput
  crowdfundingStory: CrowdFundingUpdateOneWithoutCrowdFundingMediaInput
  event: EventUpdateManyWithoutPosterInput
  isApproved: BoolFieldUpdateOperationsInput
  messagerGroup: MessagerGroupUpdateManyWithoutAvatarInput
  post: PostUpdateManyWithoutPosterInput
  postMedia: PostUpdateOneWithoutPostMediaInput
  projectDescripiton: ProjectUpdateOneWithoutProjectMediaInput
  projectMedia: ProjectUpdateOneWithoutPresentationMediaInput
  projectPoster: ProjectUpdateManyWithoutPosterInput
  type: EnummediaTypeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  user: UserUpdateManyWithoutAvatarInput
}

input MediaUpdateWithoutUserInput {
  company: CompanyUpdateManyWithoutAvatarInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  crowdFunding: CrowdFundingUpdateManyWithoutPosterInput
  crowdfundingStory: CrowdFundingUpdateOneWithoutCrowdFundingMediaInput
  event: EventUpdateManyWithoutPosterInput
  isApproved: BoolFieldUpdateOperationsInput
  messagerGroup: MessagerGroupUpdateManyWithoutAvatarInput
  post: PostUpdateManyWithoutPosterInput
  postMedia: PostUpdateOneWithoutPostMediaInput
  projectDescripiton: ProjectUpdateOneWithoutProjectMediaInput
  projectMedia: ProjectUpdateOneWithoutPresentationMediaInput
  projectPoster: ProjectUpdateManyWithoutPosterInput
  section: SectionUpdateManyWithoutMediaInput
  type: EnummediaTypeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input MediaUpsertWithWhereUniqueWithoutCrowdfundingStoryInput {
  create: MediaCreateWithoutCrowdfundingStoryInput!
  update: MediaUpdateWithoutCrowdfundingStoryInput!
  where: MediaWhereUniqueInput!
}

input MediaUpsertWithWhereUniqueWithoutPostMediaInput {
  create: MediaCreateWithoutPostMediaInput!
  update: MediaUpdateWithoutPostMediaInput!
  where: MediaWhereUniqueInput!
}

input MediaUpsertWithWhereUniqueWithoutProjectDescripitonInput {
  create: MediaCreateWithoutProjectDescripitonInput!
  update: MediaUpdateWithoutProjectDescripitonInput!
  where: MediaWhereUniqueInput!
}

input MediaUpsertWithWhereUniqueWithoutProjectMediaInput {
  create: MediaCreateWithoutProjectMediaInput!
  update: MediaUpdateWithoutProjectMediaInput!
  where: MediaWhereUniqueInput!
}

input MediaUpsertWithoutCompanyInput {
  create: MediaCreateWithoutCompanyInput!
  update: MediaUpdateWithoutCompanyInput!
}

input MediaUpsertWithoutCrowdFundingInput {
  create: MediaCreateWithoutCrowdFundingInput!
  update: MediaUpdateWithoutCrowdFundingInput!
}

input MediaUpsertWithoutEventInput {
  create: MediaCreateWithoutEventInput!
  update: MediaUpdateWithoutEventInput!
}

input MediaUpsertWithoutMessagerGroupInput {
  create: MediaCreateWithoutMessagerGroupInput!
  update: MediaUpdateWithoutMessagerGroupInput!
}

input MediaUpsertWithoutPostInput {
  create: MediaCreateWithoutPostInput!
  update: MediaUpdateWithoutPostInput!
}

input MediaUpsertWithoutProjectPosterInput {
  create: MediaCreateWithoutProjectPosterInput!
  update: MediaUpdateWithoutProjectPosterInput!
}

input MediaUpsertWithoutSectionInput {
  create: MediaCreateWithoutSectionInput!
  update: MediaUpdateWithoutSectionInput!
}

input MediaUpsertWithoutUserInput {
  create: MediaCreateWithoutUserInput!
  update: MediaUpdateWithoutUserInput!
}

input MediaWhereInput {
  AND: [MediaWhereInput!]
  NOT: [MediaWhereInput!]
  OR: [MediaWhereInput!]
  company: CompanyListRelationFilter
  createdAt: DateTimeNullableFilter
  crowdFunding: CrowdFundingListRelationFilter
  crowdfundingStory: CrowdFundingWhereInput
  crowdfundingStoryId: IntNullableFilter
  event: EventListRelationFilter
  id: IntFilter
  isApproved: BoolFilter
  messagerGroup: MessagerGroupListRelationFilter
  post: PostListRelationFilter
  postMedia: PostWhereInput
  postMediaId: IntNullableFilter
  projectDescripiton: ProjectWhereInput
  projectDescriptionId: IntNullableFilter
  projectMedia: ProjectWhereInput
  projectMediaId: IntNullableFilter
  projectPoster: ProjectListRelationFilter
  section: SectionListRelationFilter
  type: EnummediaTypeFilter
  url: StringFilter
  user: UserListRelationFilter
}

input MediaWhereUniqueInput {
  id: Int
  url: String
}

type Message {
  createdAt: DateTime!
  group: MessagerGroup!
  id: Int!
  sender: User!
  text: String!
  updatedAt: DateTime!
}

input MessageCreateManyGroupInput {
  createdAt: DateTime
  id: Int
  senderId: Int!
  text: String!
  updatedAt: DateTime
}

input MessageCreateManyGroupInputEnvelope {
  data: [MessageCreateManyGroupInput!]
  skipDuplicates: Boolean
}

input MessageCreateManySenderInput {
  createdAt: DateTime
  groupId: Int!
  id: Int
  text: String!
  updatedAt: DateTime
}

input MessageCreateManySenderInputEnvelope {
  data: [MessageCreateManySenderInput!]
  skipDuplicates: Boolean
}

input MessageCreateNestedManyWithoutGroupInput {
  connect: [MessageWhereUniqueInput!]
  connectOrCreate: [MessageCreateOrConnectWithoutGroupInput!]
  create: [MessageCreateWithoutGroupInput!]
  createMany: MessageCreateManyGroupInputEnvelope
}

input MessageCreateNestedManyWithoutSenderInput {
  connect: [MessageWhereUniqueInput!]
  connectOrCreate: [MessageCreateOrConnectWithoutSenderInput!]
  create: [MessageCreateWithoutSenderInput!]
  createMany: MessageCreateManySenderInputEnvelope
}

input MessageCreateOrConnectWithoutGroupInput {
  create: MessageCreateWithoutGroupInput!
  where: MessageWhereUniqueInput!
}

input MessageCreateOrConnectWithoutSenderInput {
  create: MessageCreateWithoutSenderInput!
  where: MessageWhereUniqueInput!
}

input MessageCreateWithoutGroupInput {
  createdAt: DateTime
  sender: UserCreateNestedOneWithoutMessagesInput!
  text: String!
  updatedAt: DateTime
}

input MessageCreateWithoutSenderInput {
  createdAt: DateTime
  group: MessagerGroupCreateNestedOneWithoutMessagesInput!
  text: String!
  updatedAt: DateTime
}

input MessageListRelationFilter {
  every: MessageWhereInput
  none: MessageWhereInput
  some: MessageWhereInput
}

input MessageOrderByRelationAggregateInput {
  _count: SortOrder
}

input MessageScalarWhereInput {
  AND: [MessageScalarWhereInput!]
  NOT: [MessageScalarWhereInput!]
  OR: [MessageScalarWhereInput!]
  createdAt: DateTimeFilter
  groupId: IntFilter
  id: IntFilter
  senderId: IntFilter
  text: StringFilter
  updatedAt: DateTimeFilter
}

input MessageUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input MessageUpdateManyWithWhereWithoutGroupInput {
  data: MessageUpdateManyMutationInput!
  where: MessageScalarWhereInput!
}

input MessageUpdateManyWithWhereWithoutSenderInput {
  data: MessageUpdateManyMutationInput!
  where: MessageScalarWhereInput!
}

input MessageUpdateManyWithoutGroupInput {
  connect: [MessageWhereUniqueInput!]
  connectOrCreate: [MessageCreateOrConnectWithoutGroupInput!]
  create: [MessageCreateWithoutGroupInput!]
  createMany: MessageCreateManyGroupInputEnvelope
  delete: [MessageWhereUniqueInput!]
  deleteMany: [MessageScalarWhereInput!]
  disconnect: [MessageWhereUniqueInput!]
  set: [MessageWhereUniqueInput!]
  update: [MessageUpdateWithWhereUniqueWithoutGroupInput!]
  updateMany: [MessageUpdateManyWithWhereWithoutGroupInput!]
  upsert: [MessageUpsertWithWhereUniqueWithoutGroupInput!]
}

input MessageUpdateManyWithoutSenderInput {
  connect: [MessageWhereUniqueInput!]
  connectOrCreate: [MessageCreateOrConnectWithoutSenderInput!]
  create: [MessageCreateWithoutSenderInput!]
  createMany: MessageCreateManySenderInputEnvelope
  delete: [MessageWhereUniqueInput!]
  deleteMany: [MessageScalarWhereInput!]
  disconnect: [MessageWhereUniqueInput!]
  set: [MessageWhereUniqueInput!]
  update: [MessageUpdateWithWhereUniqueWithoutSenderInput!]
  updateMany: [MessageUpdateManyWithWhereWithoutSenderInput!]
  upsert: [MessageUpsertWithWhereUniqueWithoutSenderInput!]
}

input MessageUpdateWithWhereUniqueWithoutGroupInput {
  data: MessageUpdateWithoutGroupInput!
  where: MessageWhereUniqueInput!
}

input MessageUpdateWithWhereUniqueWithoutSenderInput {
  data: MessageUpdateWithoutSenderInput!
  where: MessageWhereUniqueInput!
}

input MessageUpdateWithoutGroupInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  sender: UserUpdateOneRequiredWithoutMessagesInput
  text: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input MessageUpdateWithoutSenderInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  group: MessagerGroupUpdateOneRequiredWithoutMessagesInput
  text: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input MessageUpsertWithWhereUniqueWithoutGroupInput {
  create: MessageCreateWithoutGroupInput!
  update: MessageUpdateWithoutGroupInput!
  where: MessageWhereUniqueInput!
}

input MessageUpsertWithWhereUniqueWithoutSenderInput {
  create: MessageCreateWithoutSenderInput!
  update: MessageUpdateWithoutSenderInput!
  where: MessageWhereUniqueInput!
}

input MessageWhereInput {
  AND: [MessageWhereInput!]
  NOT: [MessageWhereInput!]
  OR: [MessageWhereInput!]
  createdAt: DateTimeFilter
  group: MessagerGroupWhereInput
  groupId: IntFilter
  id: IntFilter
  sender: UserWhereInput
  senderId: IntFilter
  text: StringFilter
  updatedAt: DateTimeFilter
}

input MessageWhereUniqueInput {
  id: Int
}

type MessagerGroup {
  admins(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
  avatar: Media
  createdAt: DateTime!
  id: Int!
  inviteURL: String
  members(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
  messages(after: MessageWhereUniqueInput, before: MessageWhereUniqueInput, first: Int, last: Int): [Message!]!
  title: String!
  type: String!
}

input MessagerGroupCreateManyAvatarInput {
  createdAt: DateTime
  id: Int
  inviteURL: String
  title: String!
  type: String!
}

input MessagerGroupCreateManyAvatarInputEnvelope {
  data: [MessagerGroupCreateManyAvatarInput!]
  skipDuplicates: Boolean
}

input MessagerGroupCreateNestedManyWithoutAdminsInput {
  connect: [MessagerGroupWhereUniqueInput!]
  connectOrCreate: [MessagerGroupCreateOrConnectWithoutAdminsInput!]
  create: [MessagerGroupCreateWithoutAdminsInput!]
}

input MessagerGroupCreateNestedManyWithoutAvatarInput {
  connect: [MessagerGroupWhereUniqueInput!]
  connectOrCreate: [MessagerGroupCreateOrConnectWithoutAvatarInput!]
  create: [MessagerGroupCreateWithoutAvatarInput!]
  createMany: MessagerGroupCreateManyAvatarInputEnvelope
}

input MessagerGroupCreateNestedManyWithoutMembersInput {
  connect: [MessagerGroupWhereUniqueInput!]
  connectOrCreate: [MessagerGroupCreateOrConnectWithoutMembersInput!]
  create: [MessagerGroupCreateWithoutMembersInput!]
}

input MessagerGroupCreateNestedOneWithoutMessagesInput {
  connect: MessagerGroupWhereUniqueInput
  connectOrCreate: MessagerGroupCreateOrConnectWithoutMessagesInput
  create: MessagerGroupCreateWithoutMessagesInput
}

input MessagerGroupCreateOrConnectWithoutAdminsInput {
  create: MessagerGroupCreateWithoutAdminsInput!
  where: MessagerGroupWhereUniqueInput!
}

input MessagerGroupCreateOrConnectWithoutAvatarInput {
  create: MessagerGroupCreateWithoutAvatarInput!
  where: MessagerGroupWhereUniqueInput!
}

input MessagerGroupCreateOrConnectWithoutMembersInput {
  create: MessagerGroupCreateWithoutMembersInput!
  where: MessagerGroupWhereUniqueInput!
}

input MessagerGroupCreateOrConnectWithoutMessagesInput {
  create: MessagerGroupCreateWithoutMessagesInput!
  where: MessagerGroupWhereUniqueInput!
}

input MessagerGroupCreateWithoutAdminsInput {
  avatar: MediaCreateNestedOneWithoutMessagerGroupInput
  createdAt: DateTime
  inviteURL: String
  members: UserCreateNestedManyWithoutGroupsInput
  messages: MessageCreateNestedManyWithoutGroupInput
  title: String!
  type: String!
}

input MessagerGroupCreateWithoutAvatarInput {
  admins: UserCreateNestedManyWithoutGroupAdminsInput
  createdAt: DateTime
  inviteURL: String
  members: UserCreateNestedManyWithoutGroupsInput
  messages: MessageCreateNestedManyWithoutGroupInput
  title: String!
  type: String!
}

input MessagerGroupCreateWithoutMembersInput {
  admins: UserCreateNestedManyWithoutGroupAdminsInput
  avatar: MediaCreateNestedOneWithoutMessagerGroupInput
  createdAt: DateTime
  inviteURL: String
  messages: MessageCreateNestedManyWithoutGroupInput
  title: String!
  type: String!
}

input MessagerGroupCreateWithoutMessagesInput {
  admins: UserCreateNestedManyWithoutGroupAdminsInput
  avatar: MediaCreateNestedOneWithoutMessagerGroupInput
  createdAt: DateTime
  inviteURL: String
  members: UserCreateNestedManyWithoutGroupsInput
  title: String!
  type: String!
}

input MessagerGroupListRelationFilter {
  every: MessagerGroupWhereInput
  none: MessagerGroupWhereInput
  some: MessagerGroupWhereInput
}

input MessagerGroupOrderByRelationAggregateInput {
  _count: SortOrder
}

input MessagerGroupOrderByWithRelationInput {
  admins: UserOrderByRelationAggregateInput
  avatar: MediaOrderByWithRelationInput
  avatarId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  inviteURL: SortOrder
  members: UserOrderByRelationAggregateInput
  messages: MessageOrderByRelationAggregateInput
  title: SortOrder
  type: SortOrder
}

input MessagerGroupScalarWhereInput {
  AND: [MessagerGroupScalarWhereInput!]
  NOT: [MessagerGroupScalarWhereInput!]
  OR: [MessagerGroupScalarWhereInput!]
  avatarId: IntNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  inviteURL: StringNullableFilter
  title: StringFilter
  type: StringFilter
}

input MessagerGroupUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  inviteURL: NullableStringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input MessagerGroupUpdateManyWithWhereWithoutAdminsInput {
  data: MessagerGroupUpdateManyMutationInput!
  where: MessagerGroupScalarWhereInput!
}

input MessagerGroupUpdateManyWithWhereWithoutAvatarInput {
  data: MessagerGroupUpdateManyMutationInput!
  where: MessagerGroupScalarWhereInput!
}

input MessagerGroupUpdateManyWithWhereWithoutMembersInput {
  data: MessagerGroupUpdateManyMutationInput!
  where: MessagerGroupScalarWhereInput!
}

input MessagerGroupUpdateManyWithoutAdminsInput {
  connect: [MessagerGroupWhereUniqueInput!]
  connectOrCreate: [MessagerGroupCreateOrConnectWithoutAdminsInput!]
  create: [MessagerGroupCreateWithoutAdminsInput!]
  delete: [MessagerGroupWhereUniqueInput!]
  deleteMany: [MessagerGroupScalarWhereInput!]
  disconnect: [MessagerGroupWhereUniqueInput!]
  set: [MessagerGroupWhereUniqueInput!]
  update: [MessagerGroupUpdateWithWhereUniqueWithoutAdminsInput!]
  updateMany: [MessagerGroupUpdateManyWithWhereWithoutAdminsInput!]
  upsert: [MessagerGroupUpsertWithWhereUniqueWithoutAdminsInput!]
}

input MessagerGroupUpdateManyWithoutAvatarInput {
  connect: [MessagerGroupWhereUniqueInput!]
  connectOrCreate: [MessagerGroupCreateOrConnectWithoutAvatarInput!]
  create: [MessagerGroupCreateWithoutAvatarInput!]
  createMany: MessagerGroupCreateManyAvatarInputEnvelope
  delete: [MessagerGroupWhereUniqueInput!]
  deleteMany: [MessagerGroupScalarWhereInput!]
  disconnect: [MessagerGroupWhereUniqueInput!]
  set: [MessagerGroupWhereUniqueInput!]
  update: [MessagerGroupUpdateWithWhereUniqueWithoutAvatarInput!]
  updateMany: [MessagerGroupUpdateManyWithWhereWithoutAvatarInput!]
  upsert: [MessagerGroupUpsertWithWhereUniqueWithoutAvatarInput!]
}

input MessagerGroupUpdateManyWithoutMembersInput {
  connect: [MessagerGroupWhereUniqueInput!]
  connectOrCreate: [MessagerGroupCreateOrConnectWithoutMembersInput!]
  create: [MessagerGroupCreateWithoutMembersInput!]
  delete: [MessagerGroupWhereUniqueInput!]
  deleteMany: [MessagerGroupScalarWhereInput!]
  disconnect: [MessagerGroupWhereUniqueInput!]
  set: [MessagerGroupWhereUniqueInput!]
  update: [MessagerGroupUpdateWithWhereUniqueWithoutMembersInput!]
  updateMany: [MessagerGroupUpdateManyWithWhereWithoutMembersInput!]
  upsert: [MessagerGroupUpsertWithWhereUniqueWithoutMembersInput!]
}

input MessagerGroupUpdateOneRequiredWithoutMessagesInput {
  connect: MessagerGroupWhereUniqueInput
  connectOrCreate: MessagerGroupCreateOrConnectWithoutMessagesInput
  create: MessagerGroupCreateWithoutMessagesInput
  update: MessagerGroupUpdateWithoutMessagesInput
  upsert: MessagerGroupUpsertWithoutMessagesInput
}

input MessagerGroupUpdateWithWhereUniqueWithoutAdminsInput {
  data: MessagerGroupUpdateWithoutAdminsInput!
  where: MessagerGroupWhereUniqueInput!
}

input MessagerGroupUpdateWithWhereUniqueWithoutAvatarInput {
  data: MessagerGroupUpdateWithoutAvatarInput!
  where: MessagerGroupWhereUniqueInput!
}

input MessagerGroupUpdateWithWhereUniqueWithoutMembersInput {
  data: MessagerGroupUpdateWithoutMembersInput!
  where: MessagerGroupWhereUniqueInput!
}

input MessagerGroupUpdateWithoutAdminsInput {
  avatar: MediaUpdateOneWithoutMessagerGroupInput
  createdAt: DateTimeFieldUpdateOperationsInput
  inviteURL: NullableStringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutGroupsInput
  messages: MessageUpdateManyWithoutGroupInput
  title: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input MessagerGroupUpdateWithoutAvatarInput {
  admins: UserUpdateManyWithoutGroupAdminsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  inviteURL: NullableStringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutGroupsInput
  messages: MessageUpdateManyWithoutGroupInput
  title: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input MessagerGroupUpdateWithoutMembersInput {
  admins: UserUpdateManyWithoutGroupAdminsInput
  avatar: MediaUpdateOneWithoutMessagerGroupInput
  createdAt: DateTimeFieldUpdateOperationsInput
  inviteURL: NullableStringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutGroupInput
  title: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input MessagerGroupUpdateWithoutMessagesInput {
  admins: UserUpdateManyWithoutGroupAdminsInput
  avatar: MediaUpdateOneWithoutMessagerGroupInput
  createdAt: DateTimeFieldUpdateOperationsInput
  inviteURL: NullableStringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutGroupsInput
  title: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input MessagerGroupUpsertWithWhereUniqueWithoutAdminsInput {
  create: MessagerGroupCreateWithoutAdminsInput!
  update: MessagerGroupUpdateWithoutAdminsInput!
  where: MessagerGroupWhereUniqueInput!
}

input MessagerGroupUpsertWithWhereUniqueWithoutAvatarInput {
  create: MessagerGroupCreateWithoutAvatarInput!
  update: MessagerGroupUpdateWithoutAvatarInput!
  where: MessagerGroupWhereUniqueInput!
}

input MessagerGroupUpsertWithWhereUniqueWithoutMembersInput {
  create: MessagerGroupCreateWithoutMembersInput!
  update: MessagerGroupUpdateWithoutMembersInput!
  where: MessagerGroupWhereUniqueInput!
}

input MessagerGroupUpsertWithoutMessagesInput {
  create: MessagerGroupCreateWithoutMessagesInput!
  update: MessagerGroupUpdateWithoutMessagesInput!
}

input MessagerGroupWhereInput {
  AND: [MessagerGroupWhereInput!]
  NOT: [MessagerGroupWhereInput!]
  OR: [MessagerGroupWhereInput!]
  admins: UserListRelationFilter
  avatar: MediaWhereInput
  avatarId: IntNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  inviteURL: StringNullableFilter
  members: UserListRelationFilter
  messages: MessageListRelationFilter
  title: StringFilter
  type: StringFilter
}

input MessagerGroupWhereUniqueInput {
  id: Int
  inviteURL: String
}

type Moderation {
  auditor: User
  auditorId: Int
  company: Company
  contact: Contact
  crowdFunding: CrowdFunding
  event: Event
  id: Int!
  moderatedAt: DateTime!
  post: Post
  project: Project
}

input ModerationCreateManyAuditorInput {
  id: Int
  moderatedAt: DateTime
}

input ModerationCreateManyAuditorInputEnvelope {
  data: [ModerationCreateManyAuditorInput!]
  skipDuplicates: Boolean
}

input ModerationCreateNestedManyWithoutAuditorInput {
  connect: [ModerationWhereUniqueInput!]
  connectOrCreate: [ModerationCreateOrConnectWithoutAuditorInput!]
  create: [ModerationCreateWithoutAuditorInput!]
  createMany: ModerationCreateManyAuditorInputEnvelope
}

input ModerationCreateNestedOneWithoutCompanyInput {
  connect: ModerationWhereUniqueInput
  connectOrCreate: ModerationCreateOrConnectWithoutCompanyInput
  create: ModerationCreateWithoutCompanyInput
}

input ModerationCreateNestedOneWithoutContactInput {
  connect: ModerationWhereUniqueInput
  connectOrCreate: ModerationCreateOrConnectWithoutContactInput
  create: ModerationCreateWithoutContactInput
}

input ModerationCreateNestedOneWithoutCrowdFundingInput {
  connect: ModerationWhereUniqueInput
  connectOrCreate: ModerationCreateOrConnectWithoutCrowdFundingInput
  create: ModerationCreateWithoutCrowdFundingInput
}

input ModerationCreateNestedOneWithoutEventInput {
  connect: ModerationWhereUniqueInput
  connectOrCreate: ModerationCreateOrConnectWithoutEventInput
  create: ModerationCreateWithoutEventInput
}

input ModerationCreateNestedOneWithoutPostInput {
  connect: ModerationWhereUniqueInput
  connectOrCreate: ModerationCreateOrConnectWithoutPostInput
  create: ModerationCreateWithoutPostInput
}

input ModerationCreateNestedOneWithoutProjectInput {
  connect: ModerationWhereUniqueInput
  connectOrCreate: ModerationCreateOrConnectWithoutProjectInput
  create: ModerationCreateWithoutProjectInput
}

input ModerationCreateOrConnectWithoutAuditorInput {
  create: ModerationCreateWithoutAuditorInput!
  where: ModerationWhereUniqueInput!
}

input ModerationCreateOrConnectWithoutCompanyInput {
  create: ModerationCreateWithoutCompanyInput!
  where: ModerationWhereUniqueInput!
}

input ModerationCreateOrConnectWithoutContactInput {
  create: ModerationCreateWithoutContactInput!
  where: ModerationWhereUniqueInput!
}

input ModerationCreateOrConnectWithoutCrowdFundingInput {
  create: ModerationCreateWithoutCrowdFundingInput!
  where: ModerationWhereUniqueInput!
}

input ModerationCreateOrConnectWithoutEventInput {
  create: ModerationCreateWithoutEventInput!
  where: ModerationWhereUniqueInput!
}

input ModerationCreateOrConnectWithoutPostInput {
  create: ModerationCreateWithoutPostInput!
  where: ModerationWhereUniqueInput!
}

input ModerationCreateOrConnectWithoutProjectInput {
  create: ModerationCreateWithoutProjectInput!
  where: ModerationWhereUniqueInput!
}

input ModerationCreateWithoutAuditorInput {
  company: CompanyCreateNestedOneWithoutModerateInput
  contact: ContactCreateNestedOneWithoutModerateInput
  crowdFunding: CrowdFundingCreateNestedOneWithoutModerateInput
  event: EventCreateNestedOneWithoutModerateInput
  moderatedAt: DateTime
  post: PostCreateNestedOneWithoutModerateInput
  project: ProjectCreateNestedOneWithoutModerateInput
}

input ModerationCreateWithoutCompanyInput {
  auditor: UserCreateNestedOneWithoutModeratedEntityInput
  contact: ContactCreateNestedOneWithoutModerateInput
  crowdFunding: CrowdFundingCreateNestedOneWithoutModerateInput
  event: EventCreateNestedOneWithoutModerateInput
  moderatedAt: DateTime
  post: PostCreateNestedOneWithoutModerateInput
  project: ProjectCreateNestedOneWithoutModerateInput
}

input ModerationCreateWithoutContactInput {
  auditor: UserCreateNestedOneWithoutModeratedEntityInput
  company: CompanyCreateNestedOneWithoutModerateInput
  crowdFunding: CrowdFundingCreateNestedOneWithoutModerateInput
  event: EventCreateNestedOneWithoutModerateInput
  moderatedAt: DateTime
  post: PostCreateNestedOneWithoutModerateInput
  project: ProjectCreateNestedOneWithoutModerateInput
}

input ModerationCreateWithoutCrowdFundingInput {
  auditor: UserCreateNestedOneWithoutModeratedEntityInput
  company: CompanyCreateNestedOneWithoutModerateInput
  contact: ContactCreateNestedOneWithoutModerateInput
  event: EventCreateNestedOneWithoutModerateInput
  moderatedAt: DateTime
  post: PostCreateNestedOneWithoutModerateInput
  project: ProjectCreateNestedOneWithoutModerateInput
}

input ModerationCreateWithoutEventInput {
  auditor: UserCreateNestedOneWithoutModeratedEntityInput
  company: CompanyCreateNestedOneWithoutModerateInput
  contact: ContactCreateNestedOneWithoutModerateInput
  crowdFunding: CrowdFundingCreateNestedOneWithoutModerateInput
  moderatedAt: DateTime
  post: PostCreateNestedOneWithoutModerateInput
  project: ProjectCreateNestedOneWithoutModerateInput
}

input ModerationCreateWithoutPostInput {
  auditor: UserCreateNestedOneWithoutModeratedEntityInput
  company: CompanyCreateNestedOneWithoutModerateInput
  contact: ContactCreateNestedOneWithoutModerateInput
  crowdFunding: CrowdFundingCreateNestedOneWithoutModerateInput
  event: EventCreateNestedOneWithoutModerateInput
  moderatedAt: DateTime
  project: ProjectCreateNestedOneWithoutModerateInput
}

input ModerationCreateWithoutProjectInput {
  auditor: UserCreateNestedOneWithoutModeratedEntityInput
  company: CompanyCreateNestedOneWithoutModerateInput
  contact: ContactCreateNestedOneWithoutModerateInput
  crowdFunding: CrowdFundingCreateNestedOneWithoutModerateInput
  event: EventCreateNestedOneWithoutModerateInput
  moderatedAt: DateTime
  post: PostCreateNestedOneWithoutModerateInput
}

input ModerationListRelationFilter {
  every: ModerationWhereInput
  none: ModerationWhereInput
  some: ModerationWhereInput
}

input ModerationOrderByRelationAggregateInput {
  _count: SortOrder
}

input ModerationOrderByWithRelationInput {
  auditor: UserOrderByWithRelationInput
  auditorId: SortOrder
  company: CompanyOrderByWithRelationInput
  contact: ContactOrderByWithRelationInput
  crowdFunding: CrowdFundingOrderByWithRelationInput
  event: EventOrderByWithRelationInput
  id: SortOrder
  moderatedAt: SortOrder
  post: PostOrderByWithRelationInput
  project: ProjectOrderByWithRelationInput
}

input ModerationScalarWhereInput {
  AND: [ModerationScalarWhereInput!]
  NOT: [ModerationScalarWhereInput!]
  OR: [ModerationScalarWhereInput!]
  auditorId: IntNullableFilter
  id: IntFilter
  moderatedAt: DateTimeFilter
}

input ModerationUpdateManyMutationInput {
  moderatedAt: DateTimeFieldUpdateOperationsInput
}

input ModerationUpdateManyWithWhereWithoutAuditorInput {
  data: ModerationUpdateManyMutationInput!
  where: ModerationScalarWhereInput!
}

input ModerationUpdateManyWithoutAuditorInput {
  connect: [ModerationWhereUniqueInput!]
  connectOrCreate: [ModerationCreateOrConnectWithoutAuditorInput!]
  create: [ModerationCreateWithoutAuditorInput!]
  createMany: ModerationCreateManyAuditorInputEnvelope
  delete: [ModerationWhereUniqueInput!]
  deleteMany: [ModerationScalarWhereInput!]
  disconnect: [ModerationWhereUniqueInput!]
  set: [ModerationWhereUniqueInput!]
  update: [ModerationUpdateWithWhereUniqueWithoutAuditorInput!]
  updateMany: [ModerationUpdateManyWithWhereWithoutAuditorInput!]
  upsert: [ModerationUpsertWithWhereUniqueWithoutAuditorInput!]
}

input ModerationUpdateOneWithoutCompanyInput {
  connect: ModerationWhereUniqueInput
  connectOrCreate: ModerationCreateOrConnectWithoutCompanyInput
  create: ModerationCreateWithoutCompanyInput
  delete: Boolean
  disconnect: Boolean
  update: ModerationUpdateWithoutCompanyInput
  upsert: ModerationUpsertWithoutCompanyInput
}

input ModerationUpdateOneWithoutContactInput {
  connect: ModerationWhereUniqueInput
  connectOrCreate: ModerationCreateOrConnectWithoutContactInput
  create: ModerationCreateWithoutContactInput
  delete: Boolean
  disconnect: Boolean
  update: ModerationUpdateWithoutContactInput
  upsert: ModerationUpsertWithoutContactInput
}

input ModerationUpdateOneWithoutCrowdFundingInput {
  connect: ModerationWhereUniqueInput
  connectOrCreate: ModerationCreateOrConnectWithoutCrowdFundingInput
  create: ModerationCreateWithoutCrowdFundingInput
  delete: Boolean
  disconnect: Boolean
  update: ModerationUpdateWithoutCrowdFundingInput
  upsert: ModerationUpsertWithoutCrowdFundingInput
}

input ModerationUpdateOneWithoutEventInput {
  connect: ModerationWhereUniqueInput
  connectOrCreate: ModerationCreateOrConnectWithoutEventInput
  create: ModerationCreateWithoutEventInput
  delete: Boolean
  disconnect: Boolean
  update: ModerationUpdateWithoutEventInput
  upsert: ModerationUpsertWithoutEventInput
}

input ModerationUpdateOneWithoutPostInput {
  connect: ModerationWhereUniqueInput
  connectOrCreate: ModerationCreateOrConnectWithoutPostInput
  create: ModerationCreateWithoutPostInput
  delete: Boolean
  disconnect: Boolean
  update: ModerationUpdateWithoutPostInput
  upsert: ModerationUpsertWithoutPostInput
}

input ModerationUpdateOneWithoutProjectInput {
  connect: ModerationWhereUniqueInput
  connectOrCreate: ModerationCreateOrConnectWithoutProjectInput
  create: ModerationCreateWithoutProjectInput
  delete: Boolean
  disconnect: Boolean
  update: ModerationUpdateWithoutProjectInput
  upsert: ModerationUpsertWithoutProjectInput
}

input ModerationUpdateWithWhereUniqueWithoutAuditorInput {
  data: ModerationUpdateWithoutAuditorInput!
  where: ModerationWhereUniqueInput!
}

input ModerationUpdateWithoutAuditorInput {
  company: CompanyUpdateOneWithoutModerateInput
  contact: ContactUpdateOneWithoutModerateInput
  crowdFunding: CrowdFundingUpdateOneWithoutModerateInput
  event: EventUpdateOneWithoutModerateInput
  moderatedAt: DateTimeFieldUpdateOperationsInput
  post: PostUpdateOneWithoutModerateInput
  project: ProjectUpdateOneWithoutModerateInput
}

input ModerationUpdateWithoutCompanyInput {
  auditor: UserUpdateOneWithoutModeratedEntityInput
  contact: ContactUpdateOneWithoutModerateInput
  crowdFunding: CrowdFundingUpdateOneWithoutModerateInput
  event: EventUpdateOneWithoutModerateInput
  moderatedAt: DateTimeFieldUpdateOperationsInput
  post: PostUpdateOneWithoutModerateInput
  project: ProjectUpdateOneWithoutModerateInput
}

input ModerationUpdateWithoutContactInput {
  auditor: UserUpdateOneWithoutModeratedEntityInput
  company: CompanyUpdateOneWithoutModerateInput
  crowdFunding: CrowdFundingUpdateOneWithoutModerateInput
  event: EventUpdateOneWithoutModerateInput
  moderatedAt: DateTimeFieldUpdateOperationsInput
  post: PostUpdateOneWithoutModerateInput
  project: ProjectUpdateOneWithoutModerateInput
}

input ModerationUpdateWithoutCrowdFundingInput {
  auditor: UserUpdateOneWithoutModeratedEntityInput
  company: CompanyUpdateOneWithoutModerateInput
  contact: ContactUpdateOneWithoutModerateInput
  event: EventUpdateOneWithoutModerateInput
  moderatedAt: DateTimeFieldUpdateOperationsInput
  post: PostUpdateOneWithoutModerateInput
  project: ProjectUpdateOneWithoutModerateInput
}

input ModerationUpdateWithoutEventInput {
  auditor: UserUpdateOneWithoutModeratedEntityInput
  company: CompanyUpdateOneWithoutModerateInput
  contact: ContactUpdateOneWithoutModerateInput
  crowdFunding: CrowdFundingUpdateOneWithoutModerateInput
  moderatedAt: DateTimeFieldUpdateOperationsInput
  post: PostUpdateOneWithoutModerateInput
  project: ProjectUpdateOneWithoutModerateInput
}

input ModerationUpdateWithoutPostInput {
  auditor: UserUpdateOneWithoutModeratedEntityInput
  company: CompanyUpdateOneWithoutModerateInput
  contact: ContactUpdateOneWithoutModerateInput
  crowdFunding: CrowdFundingUpdateOneWithoutModerateInput
  event: EventUpdateOneWithoutModerateInput
  moderatedAt: DateTimeFieldUpdateOperationsInput
  project: ProjectUpdateOneWithoutModerateInput
}

input ModerationUpdateWithoutProjectInput {
  auditor: UserUpdateOneWithoutModeratedEntityInput
  company: CompanyUpdateOneWithoutModerateInput
  contact: ContactUpdateOneWithoutModerateInput
  crowdFunding: CrowdFundingUpdateOneWithoutModerateInput
  event: EventUpdateOneWithoutModerateInput
  moderatedAt: DateTimeFieldUpdateOperationsInput
  post: PostUpdateOneWithoutModerateInput
}

input ModerationUpsertWithWhereUniqueWithoutAuditorInput {
  create: ModerationCreateWithoutAuditorInput!
  update: ModerationUpdateWithoutAuditorInput!
  where: ModerationWhereUniqueInput!
}

input ModerationUpsertWithoutCompanyInput {
  create: ModerationCreateWithoutCompanyInput!
  update: ModerationUpdateWithoutCompanyInput!
}

input ModerationUpsertWithoutContactInput {
  create: ModerationCreateWithoutContactInput!
  update: ModerationUpdateWithoutContactInput!
}

input ModerationUpsertWithoutCrowdFundingInput {
  create: ModerationCreateWithoutCrowdFundingInput!
  update: ModerationUpdateWithoutCrowdFundingInput!
}

input ModerationUpsertWithoutEventInput {
  create: ModerationCreateWithoutEventInput!
  update: ModerationUpdateWithoutEventInput!
}

input ModerationUpsertWithoutPostInput {
  create: ModerationCreateWithoutPostInput!
  update: ModerationUpdateWithoutPostInput!
}

input ModerationUpsertWithoutProjectInput {
  create: ModerationCreateWithoutProjectInput!
  update: ModerationUpdateWithoutProjectInput!
}

input ModerationWhereInput {
  AND: [ModerationWhereInput!]
  NOT: [ModerationWhereInput!]
  OR: [ModerationWhereInput!]
  auditor: UserWhereInput
  auditorId: IntNullableFilter
  company: CompanyWhereInput
  contact: ContactWhereInput
  crowdFunding: CrowdFundingWhereInput
  event: EventWhereInput
  id: IntFilter
  moderatedAt: DateTimeFilter
  post: PostWhereInput
  project: ProjectWhereInput
}

input ModerationWhereUniqueInput {
  id: Int
}

type Mutation {
  addEmail(data: addEmail!): Email
  addMembersToGroup(data: addMembersToGroupInput!): String
  articleCreateMutation(data: CreateArticleInput!): String
  articleDeleteMutation(data: DeleteArticleInput!): String
  articleUpdateMutation(data: UpdateArticleInput!): String
  checkNotification(data: checkNotificationInput!): String
  createCompany(data: createCompanyInput!): Company
  createGroup(data: createGroupInput!): MessagerGroup
  createMedia(data: createMediaInput!): SignUrlResponse
  createOneContact(data: ContactCreateInput!): Contact
  createOneEvent(data: EventCreatedInput!): Event
  createOnePost(data: PostCreateInput!): Post
  createOneProject(data: createProjectInput!): Project
  createOneWorker(data: WorkerCreateInput!): Worker!
  createStream(data: createStreamArgs!): Stream
  crowdFundingCreateMutation(data: crowdFundingCreateInput!): CrowdFunding
  crowdFundingDeleteMutation(data: crowdFundingDeleteInput!): String
  crowdFundingUpdateMutation(data: crowdFundingUpdateInput!): CrowdFunding
  deleteGroup(data: deleteGroupInput!): String
  deleteMediaElement(data: deleteMediaElementInput!): String
  deleteOneCompany(where: CompanyWhereUniqueInput!): Company
  deleteOneContact(where: ContactWhereUniqueInput!): Contact
  deleteOneEvent(where: EventWhereUniqueInput!): Event
  deleteOnePost(where: PostWhereUniqueInput!): Post
  deleteOneProject(where: ProjectWhereUniqueInput!): Project
  deleteOneWorker(where: WorkerWhereUniqueInput!): Worker
  deletePostMedia(data: deletePostMedia!): String
  deleteProjectPresentationMedia(data: deleteProjectPresentationMedia!): String
  descriptionCreateMutation(data: CreateDescriptionInput!): String
  descriptionDeleteMutation(data: DeleteDescriptionInput!): String
  descriptionUpdateMutation(data: UpdateDescriptionInput!): String
  leaveFromGroup(data: leaveFromGroupInput!): String
  payForTariff(data: PayForTariffInput!): String
  postCreateMutation(data: CreatePostInput!): Post
  postUpdateMutation(data: UpdatePostInput!): String
  putCompanyAvatar(data: getMediaDataInput!): SignUrlResponse
  putEventPoster(data: getMediaDataInput!): SignUrlResponse
  putPostMedia(data: getMediaDataInput!): SignUrlResponse
  putPostPoster(data: getMediaDataInput!): SignUrlResponse
  putProjectPoster(data: getMediaDataInput!): SignUrlResponse
  putProjectPresentationMedia(data: getMediaDataInput!): SignUrlResponse
  putUserAvatar(data: getMediaDataInput!): SignUrlResponse
  registerForEvent(data: RegisterForEventInput!): String
  removeGroupAdmin(data: removeGroupAdminInput!): String
  removeMembersFromGroup(data: removeMembersFromGroupInput!): String
  sendMessage(data: sendMessageInput!): Message
  sendStreamMessage(data: sendStreamMessageInput!): StreamMessage
  setGroupAdmin(data: setGroupAdminInput!): String
  setWorkerToProject(data: setWorkerInput!): Worker
  signIn(data: SignInInput!): AuthPayload
  signUp(data: CreateUserInput!): AuthPayload
  storyCreateMutation(data: CreateStoryInput!): String
  storyDeleteMutation(data: DeleteStoryInput!): String
  storyUpdateMutation(data: UpdateStoryInput!): String
  switchToMessager(data: switchToMessagerInput!): MessagerGroup
  tariffCreateMutation(data: CreateTariffInput!): CrowdFundingTariff
  tariffDeleteMutation(data: DeleteTariffInput!): String
  tariffUpdateMutation(data: UpdateTariffInput!): CrowdFundingTariff
  updateContact(data: updateContactInput!): String
  updateGroup(data: updateGroupInput!): MessagerGroup
  updateMyCompany(data: updateCompanyInput!): String
  updateOneEvent(data: EventUpdatedInput!): String
  updateOneWorker(data: WorkerUpdateInput!, where: WorkerWhereUniqueInput!): Worker
  updatePost(data: updatePostInput!): String
  updateProject(data: updateProjectInput!): String
  updateStream(data: createStreamArgs!): Stream
  updateStreamActivity(data: updateStreamActivityArgs!): Stream
  updateUserData(data: updateUserInput): User
  upsertOneWorker(create: WorkerCreateInput!, update: WorkerUpdateInput!, where: WorkerWhereUniqueInput!): Worker!
  verificateCompany(data: VerificateEntityInput!): RejectMessage
  verificateContact(data: VerificateEntityInput!): RejectMessage
  verificateEvent(data: VerificateEntityInput!): RejectMessage
  verificateMutation(data: VerificateMutationInput!): RejectModerationMessage
  verificatePost(data: VerificateEntityInput!): RejectMessage
  verificateProject(data: VerificateEntityInput!): RejectMessage
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedEnumRoleNullableFilter {
  equals: Role
  in: [Role!]
  not: NestedEnumRoleNullableFilter
  notIn: [Role!]
}

input NestedEnumbusinessModelEnumNullableFilter {
  equals: businessModelEnum
  in: [businessModelEnum!]
  not: NestedEnumbusinessModelEnumNullableFilter
  notIn: [businessModelEnum!]
}

input NestedEnumeventRegisteredVerdictFilter {
  equals: eventRegisteredVerdict
  in: [eventRegisteredVerdict!]
  not: NestedEnumeventRegisteredVerdictFilter
  notIn: [eventRegisteredVerdict!]
}

input NestedEnumfilteringCategoriesFilter {
  equals: filteringCategories
  in: [filteringCategories!]
  not: NestedEnumfilteringCategoriesFilter
  notIn: [filteringCategories!]
}

input NestedEnuminvestmentStageEnumNullableFilter {
  equals: investmentStageEnum
  in: [investmentStageEnum!]
  not: NestedEnuminvestmentStageEnumNullableFilter
  notIn: [investmentStageEnum!]
}

input NestedEnummainGoalEnumNullableFilter {
  equals: mainGoalEnum
  in: [mainGoalEnum!]
  not: NestedEnummainGoalEnumNullableFilter
  notIn: [mainGoalEnum!]
}

input NestedEnummediaTypeFilter {
  equals: mediaType
  in: [mediaType!]
  not: NestedEnummediaTypeFilter
  notIn: [mediaType!]
}

input NestedEnumprojectMarketEnumNullableFilter {
  equals: projectMarketEnum
  in: [projectMarketEnum!]
  not: NestedEnumprojectMarketEnumNullableFilter
  notIn: [projectMarketEnum!]
}

input NestedEnumprojectStageEnumNullableFilter {
  equals: projectStageEnum
  in: [projectStageEnum!]
  not: NestedEnumprojectStageEnumNullableFilter
  notIn: [projectStageEnum!]
}

input NestedEnumprojectTypeEnumNullableFilter {
  equals: projectTypeEnum
  in: [projectTypeEnum!]
  not: NestedEnumprojectTypeEnumNullableFilter
  notIn: [projectTypeEnum!]
}

input NestedEnumsalesTypeEnumNullableFilter {
  equals: salesTypeEnum
  in: [salesTypeEnum!]
  not: NestedEnumsalesTypeEnumNullableFilter
  notIn: [salesTypeEnum!]
}

input NestedEnumsectionTypesFilter {
  equals: sectionTypes
  in: [sectionTypes!]
  not: NestedEnumsectionTypesFilter
  notIn: [sectionTypes!]
}

input NestedEnumtechnologyTypeEnumNullableFilter {
  equals: technologyTypeEnum
  in: [technologyTypeEnum!]
  not: NestedEnumtechnologyTypeEnumNullableFilter
  notIn: [technologyTypeEnum!]
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Notification {
  body: String!
  checked: Boolean!
  id: Int!
  theme: String!
  toWhom: User!
}

input NotificationCreateManyToWhomInput {
  body: String!
  checked: Boolean
  createdAt: DateTime
  id: Int
  theme: String!
}

input NotificationCreateManyToWhomInputEnvelope {
  data: [NotificationCreateManyToWhomInput!]
  skipDuplicates: Boolean
}

input NotificationCreateNestedManyWithoutToWhomInput {
  connect: [NotificationWhereUniqueInput!]
  connectOrCreate: [NotificationCreateOrConnectWithoutToWhomInput!]
  create: [NotificationCreateWithoutToWhomInput!]
  createMany: NotificationCreateManyToWhomInputEnvelope
}

input NotificationCreateOrConnectWithoutToWhomInput {
  create: NotificationCreateWithoutToWhomInput!
  where: NotificationWhereUniqueInput!
}

input NotificationCreateWithoutToWhomInput {
  body: String!
  checked: Boolean
  createdAt: DateTime
  theme: String!
}

input NotificationListRelationFilter {
  every: NotificationWhereInput
  none: NotificationWhereInput
  some: NotificationWhereInput
}

input NotificationOrderByRelationAggregateInput {
  _count: SortOrder
}

input NotificationOrderByWithRelationInput {
  body: SortOrder
  checked: SortOrder
  createdAt: SortOrder
  id: SortOrder
  theme: SortOrder
  toWhom: UserOrderByWithRelationInput
  toWhomId: SortOrder
}

input NotificationScalarWhereInput {
  AND: [NotificationScalarWhereInput!]
  NOT: [NotificationScalarWhereInput!]
  OR: [NotificationScalarWhereInput!]
  body: StringFilter
  checked: BoolFilter
  createdAt: DateTimeFilter
  id: IntFilter
  theme: StringFilter
  toWhomId: IntFilter
}

input NotificationUpdateManyMutationInput {
  body: StringFieldUpdateOperationsInput
  checked: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  theme: StringFieldUpdateOperationsInput
}

input NotificationUpdateManyWithWhereWithoutToWhomInput {
  data: NotificationUpdateManyMutationInput!
  where: NotificationScalarWhereInput!
}

input NotificationUpdateManyWithoutToWhomInput {
  connect: [NotificationWhereUniqueInput!]
  connectOrCreate: [NotificationCreateOrConnectWithoutToWhomInput!]
  create: [NotificationCreateWithoutToWhomInput!]
  createMany: NotificationCreateManyToWhomInputEnvelope
  delete: [NotificationWhereUniqueInput!]
  deleteMany: [NotificationScalarWhereInput!]
  disconnect: [NotificationWhereUniqueInput!]
  set: [NotificationWhereUniqueInput!]
  update: [NotificationUpdateWithWhereUniqueWithoutToWhomInput!]
  updateMany: [NotificationUpdateManyWithWhereWithoutToWhomInput!]
  upsert: [NotificationUpsertWithWhereUniqueWithoutToWhomInput!]
}

input NotificationUpdateWithWhereUniqueWithoutToWhomInput {
  data: NotificationUpdateWithoutToWhomInput!
  where: NotificationWhereUniqueInput!
}

input NotificationUpdateWithoutToWhomInput {
  body: StringFieldUpdateOperationsInput
  checked: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  theme: StringFieldUpdateOperationsInput
}

input NotificationUpsertWithWhereUniqueWithoutToWhomInput {
  create: NotificationCreateWithoutToWhomInput!
  update: NotificationUpdateWithoutToWhomInput!
  where: NotificationWhereUniqueInput!
}

input NotificationWhereInput {
  AND: [NotificationWhereInput!]
  NOT: [NotificationWhereInput!]
  OR: [NotificationWhereInput!]
  body: StringFilter
  checked: BoolFilter
  createdAt: DateTimeFilter
  id: IntFilter
  theme: StringFilter
  toWhom: UserWhereInput
  toWhomId: IntFilter
}

input NotificationWhereUniqueInput {
  id: Int
}

input NullableBoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableEnumRoleFieldUpdateOperationsInput {
  set: Role
}

input NullableEnumbusinessModelEnumFieldUpdateOperationsInput {
  set: businessModelEnum
}

input NullableEnuminvestmentStageEnumFieldUpdateOperationsInput {
  set: investmentStageEnum
}

input NullableEnummainGoalEnumFieldUpdateOperationsInput {
  set: mainGoalEnum
}

input NullableEnumprojectMarketEnumFieldUpdateOperationsInput {
  set: projectMarketEnum
}

input NullableEnumprojectStageEnumFieldUpdateOperationsInput {
  set: projectStageEnum
}

input NullableEnumprojectTypeEnumFieldUpdateOperationsInput {
  set: projectTypeEnum
}

input NullableEnumsalesTypeEnumFieldUpdateOperationsInput {
  set: salesTypeEnum
}

input NullableEnumtechnologyTypeEnumFieldUpdateOperationsInput {
  set: technologyTypeEnum
}

input NullableIntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

input PayForTariffInput {
  address: String!
  email: String!
  fatherName: String!
  firstName: String!
  lastName: String!
  tariffId: Int!
}

input PayedTariffsListRelationFilter {
  every: payedTariffsWhereInput
  none: payedTariffsWhereInput
  some: payedTariffsWhereInput
}

type PlatformConfig {
  createdAt: DateTime!
  crowdFundingsShownOnLanding(after: CrowdFundingWhereUniqueInput, before: CrowdFundingWhereUniqueInput, first: Int, last: Int): [CrowdFunding!]!
  eventsShownOnLanding(after: EventWhereUniqueInput, before: EventWhereUniqueInput, first: Int, last: Int): [Event!]!
  id: Int!
  newsShownOnLanding(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int): [Post!]!
  offersShownOnLanding(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int): [Post!]!
  platformDescription: String!
  platformShortDescription: String!
  platformTagline: String!
  platformTitle: String!
  projectsShownOnLanding(after: ProjectWhereUniqueInput, before: ProjectWhereUniqueInput, first: Int, last: Int): [Project!]!
  totalBudgetInvestment: Int!
  totalCompanyCount: Int!
  totalExtraBudgetInvestment: Int!
  totalProjectCount: Int!
}

input PlatformConfigCreateNestedManyWithoutCrowdFundingsShownOnLandingInput {
  connect: [PlatformConfigWhereUniqueInput!]
  connectOrCreate: [PlatformConfigCreateOrConnectWithoutCrowdFundingsShownOnLandingInput!]
  create: [PlatformConfigCreateWithoutCrowdFundingsShownOnLandingInput!]
}

input PlatformConfigCreateNestedManyWithoutEventsShownOnLandingInput {
  connect: [PlatformConfigWhereUniqueInput!]
  connectOrCreate: [PlatformConfigCreateOrConnectWithoutEventsShownOnLandingInput!]
  create: [PlatformConfigCreateWithoutEventsShownOnLandingInput!]
}

input PlatformConfigCreateNestedManyWithoutNewsShownOnLandingInput {
  connect: [PlatformConfigWhereUniqueInput!]
  connectOrCreate: [PlatformConfigCreateOrConnectWithoutNewsShownOnLandingInput!]
  create: [PlatformConfigCreateWithoutNewsShownOnLandingInput!]
}

input PlatformConfigCreateNestedManyWithoutOffersShownOnLandingInput {
  connect: [PlatformConfigWhereUniqueInput!]
  connectOrCreate: [PlatformConfigCreateOrConnectWithoutOffersShownOnLandingInput!]
  create: [PlatformConfigCreateWithoutOffersShownOnLandingInput!]
}

input PlatformConfigCreateNestedManyWithoutProjectsShownOnLandingInput {
  connect: [PlatformConfigWhereUniqueInput!]
  connectOrCreate: [PlatformConfigCreateOrConnectWithoutProjectsShownOnLandingInput!]
  create: [PlatformConfigCreateWithoutProjectsShownOnLandingInput!]
}

input PlatformConfigCreateOrConnectWithoutCrowdFundingsShownOnLandingInput {
  create: PlatformConfigCreateWithoutCrowdFundingsShownOnLandingInput!
  where: PlatformConfigWhereUniqueInput!
}

input PlatformConfigCreateOrConnectWithoutEventsShownOnLandingInput {
  create: PlatformConfigCreateWithoutEventsShownOnLandingInput!
  where: PlatformConfigWhereUniqueInput!
}

input PlatformConfigCreateOrConnectWithoutNewsShownOnLandingInput {
  create: PlatformConfigCreateWithoutNewsShownOnLandingInput!
  where: PlatformConfigWhereUniqueInput!
}

input PlatformConfigCreateOrConnectWithoutOffersShownOnLandingInput {
  create: PlatformConfigCreateWithoutOffersShownOnLandingInput!
  where: PlatformConfigWhereUniqueInput!
}

input PlatformConfigCreateOrConnectWithoutProjectsShownOnLandingInput {
  create: PlatformConfigCreateWithoutProjectsShownOnLandingInput!
  where: PlatformConfigWhereUniqueInput!
}

input PlatformConfigCreateWithoutCrowdFundingsShownOnLandingInput {
  createdAt: DateTime
  eventsShownOnLanding: EventCreateNestedManyWithoutPlatformConfigShowedInput
  newsShownOnLanding: PostCreateNestedManyWithoutPlatformConfigNewsShowedInput
  offersShownOnLanding: PostCreateNestedManyWithoutPlatformConfigOffersShowedInput
  platformDescription: String!
  platformShortDescription: String!
  platformTagline: String!
  platformTitle: String!
  projectsShownOnLanding: ProjectCreateNestedManyWithoutPlatformConfigShowedInput
  totalBudgetInvestment: Int!
  totalCompanyCount: Int!
  totalExtraBudgetInvestment: Int!
  totalProjectCount: Int!
}

input PlatformConfigCreateWithoutEventsShownOnLandingInput {
  createdAt: DateTime
  crowdFundingsShownOnLanding: CrowdFundingCreateNestedManyWithoutPlatformConfigShowedInput
  newsShownOnLanding: PostCreateNestedManyWithoutPlatformConfigNewsShowedInput
  offersShownOnLanding: PostCreateNestedManyWithoutPlatformConfigOffersShowedInput
  platformDescription: String!
  platformShortDescription: String!
  platformTagline: String!
  platformTitle: String!
  projectsShownOnLanding: ProjectCreateNestedManyWithoutPlatformConfigShowedInput
  totalBudgetInvestment: Int!
  totalCompanyCount: Int!
  totalExtraBudgetInvestment: Int!
  totalProjectCount: Int!
}

input PlatformConfigCreateWithoutNewsShownOnLandingInput {
  createdAt: DateTime
  crowdFundingsShownOnLanding: CrowdFundingCreateNestedManyWithoutPlatformConfigShowedInput
  eventsShownOnLanding: EventCreateNestedManyWithoutPlatformConfigShowedInput
  offersShownOnLanding: PostCreateNestedManyWithoutPlatformConfigOffersShowedInput
  platformDescription: String!
  platformShortDescription: String!
  platformTagline: String!
  platformTitle: String!
  projectsShownOnLanding: ProjectCreateNestedManyWithoutPlatformConfigShowedInput
  totalBudgetInvestment: Int!
  totalCompanyCount: Int!
  totalExtraBudgetInvestment: Int!
  totalProjectCount: Int!
}

input PlatformConfigCreateWithoutOffersShownOnLandingInput {
  createdAt: DateTime
  crowdFundingsShownOnLanding: CrowdFundingCreateNestedManyWithoutPlatformConfigShowedInput
  eventsShownOnLanding: EventCreateNestedManyWithoutPlatformConfigShowedInput
  newsShownOnLanding: PostCreateNestedManyWithoutPlatformConfigNewsShowedInput
  platformDescription: String!
  platformShortDescription: String!
  platformTagline: String!
  platformTitle: String!
  projectsShownOnLanding: ProjectCreateNestedManyWithoutPlatformConfigShowedInput
  totalBudgetInvestment: Int!
  totalCompanyCount: Int!
  totalExtraBudgetInvestment: Int!
  totalProjectCount: Int!
}

input PlatformConfigCreateWithoutProjectsShownOnLandingInput {
  createdAt: DateTime
  crowdFundingsShownOnLanding: CrowdFundingCreateNestedManyWithoutPlatformConfigShowedInput
  eventsShownOnLanding: EventCreateNestedManyWithoutPlatformConfigShowedInput
  newsShownOnLanding: PostCreateNestedManyWithoutPlatformConfigNewsShowedInput
  offersShownOnLanding: PostCreateNestedManyWithoutPlatformConfigOffersShowedInput
  platformDescription: String!
  platformShortDescription: String!
  platformTagline: String!
  platformTitle: String!
  totalBudgetInvestment: Int!
  totalCompanyCount: Int!
  totalExtraBudgetInvestment: Int!
  totalProjectCount: Int!
}

input PlatformConfigListRelationFilter {
  every: PlatformConfigWhereInput
  none: PlatformConfigWhereInput
  some: PlatformConfigWhereInput
}

input PlatformConfigOrderByRelationAggregateInput {
  _count: SortOrder
}

input PlatformConfigScalarWhereInput {
  AND: [PlatformConfigScalarWhereInput!]
  NOT: [PlatformConfigScalarWhereInput!]
  OR: [PlatformConfigScalarWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  platformDescription: StringFilter
  platformShortDescription: StringFilter
  platformTagline: StringFilter
  platformTitle: StringFilter
  totalBudgetInvestment: IntFilter
  totalCompanyCount: IntFilter
  totalExtraBudgetInvestment: IntFilter
  totalProjectCount: IntFilter
}

input PlatformConfigUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  platformDescription: StringFieldUpdateOperationsInput
  platformShortDescription: StringFieldUpdateOperationsInput
  platformTagline: StringFieldUpdateOperationsInput
  platformTitle: StringFieldUpdateOperationsInput
  totalBudgetInvestment: IntFieldUpdateOperationsInput
  totalCompanyCount: IntFieldUpdateOperationsInput
  totalExtraBudgetInvestment: IntFieldUpdateOperationsInput
  totalProjectCount: IntFieldUpdateOperationsInput
}

input PlatformConfigUpdateManyWithWhereWithoutCrowdFundingsShownOnLandingInput {
  data: PlatformConfigUpdateManyMutationInput!
  where: PlatformConfigScalarWhereInput!
}

input PlatformConfigUpdateManyWithWhereWithoutEventsShownOnLandingInput {
  data: PlatformConfigUpdateManyMutationInput!
  where: PlatformConfigScalarWhereInput!
}

input PlatformConfigUpdateManyWithWhereWithoutNewsShownOnLandingInput {
  data: PlatformConfigUpdateManyMutationInput!
  where: PlatformConfigScalarWhereInput!
}

input PlatformConfigUpdateManyWithWhereWithoutOffersShownOnLandingInput {
  data: PlatformConfigUpdateManyMutationInput!
  where: PlatformConfigScalarWhereInput!
}

input PlatformConfigUpdateManyWithWhereWithoutProjectsShownOnLandingInput {
  data: PlatformConfigUpdateManyMutationInput!
  where: PlatformConfigScalarWhereInput!
}

input PlatformConfigUpdateManyWithoutCrowdFundingsShownOnLandingInput {
  connect: [PlatformConfigWhereUniqueInput!]
  connectOrCreate: [PlatformConfigCreateOrConnectWithoutCrowdFundingsShownOnLandingInput!]
  create: [PlatformConfigCreateWithoutCrowdFundingsShownOnLandingInput!]
  delete: [PlatformConfigWhereUniqueInput!]
  deleteMany: [PlatformConfigScalarWhereInput!]
  disconnect: [PlatformConfigWhereUniqueInput!]
  set: [PlatformConfigWhereUniqueInput!]
  update: [PlatformConfigUpdateWithWhereUniqueWithoutCrowdFundingsShownOnLandingInput!]
  updateMany: [PlatformConfigUpdateManyWithWhereWithoutCrowdFundingsShownOnLandingInput!]
  upsert: [PlatformConfigUpsertWithWhereUniqueWithoutCrowdFundingsShownOnLandingInput!]
}

input PlatformConfigUpdateManyWithoutEventsShownOnLandingInput {
  connect: [PlatformConfigWhereUniqueInput!]
  connectOrCreate: [PlatformConfigCreateOrConnectWithoutEventsShownOnLandingInput!]
  create: [PlatformConfigCreateWithoutEventsShownOnLandingInput!]
  delete: [PlatformConfigWhereUniqueInput!]
  deleteMany: [PlatformConfigScalarWhereInput!]
  disconnect: [PlatformConfigWhereUniqueInput!]
  set: [PlatformConfigWhereUniqueInput!]
  update: [PlatformConfigUpdateWithWhereUniqueWithoutEventsShownOnLandingInput!]
  updateMany: [PlatformConfigUpdateManyWithWhereWithoutEventsShownOnLandingInput!]
  upsert: [PlatformConfigUpsertWithWhereUniqueWithoutEventsShownOnLandingInput!]
}

input PlatformConfigUpdateManyWithoutNewsShownOnLandingInput {
  connect: [PlatformConfigWhereUniqueInput!]
  connectOrCreate: [PlatformConfigCreateOrConnectWithoutNewsShownOnLandingInput!]
  create: [PlatformConfigCreateWithoutNewsShownOnLandingInput!]
  delete: [PlatformConfigWhereUniqueInput!]
  deleteMany: [PlatformConfigScalarWhereInput!]
  disconnect: [PlatformConfigWhereUniqueInput!]
  set: [PlatformConfigWhereUniqueInput!]
  update: [PlatformConfigUpdateWithWhereUniqueWithoutNewsShownOnLandingInput!]
  updateMany: [PlatformConfigUpdateManyWithWhereWithoutNewsShownOnLandingInput!]
  upsert: [PlatformConfigUpsertWithWhereUniqueWithoutNewsShownOnLandingInput!]
}

input PlatformConfigUpdateManyWithoutOffersShownOnLandingInput {
  connect: [PlatformConfigWhereUniqueInput!]
  connectOrCreate: [PlatformConfigCreateOrConnectWithoutOffersShownOnLandingInput!]
  create: [PlatformConfigCreateWithoutOffersShownOnLandingInput!]
  delete: [PlatformConfigWhereUniqueInput!]
  deleteMany: [PlatformConfigScalarWhereInput!]
  disconnect: [PlatformConfigWhereUniqueInput!]
  set: [PlatformConfigWhereUniqueInput!]
  update: [PlatformConfigUpdateWithWhereUniqueWithoutOffersShownOnLandingInput!]
  updateMany: [PlatformConfigUpdateManyWithWhereWithoutOffersShownOnLandingInput!]
  upsert: [PlatformConfigUpsertWithWhereUniqueWithoutOffersShownOnLandingInput!]
}

input PlatformConfigUpdateManyWithoutProjectsShownOnLandingInput {
  connect: [PlatformConfigWhereUniqueInput!]
  connectOrCreate: [PlatformConfigCreateOrConnectWithoutProjectsShownOnLandingInput!]
  create: [PlatformConfigCreateWithoutProjectsShownOnLandingInput!]
  delete: [PlatformConfigWhereUniqueInput!]
  deleteMany: [PlatformConfigScalarWhereInput!]
  disconnect: [PlatformConfigWhereUniqueInput!]
  set: [PlatformConfigWhereUniqueInput!]
  update: [PlatformConfigUpdateWithWhereUniqueWithoutProjectsShownOnLandingInput!]
  updateMany: [PlatformConfigUpdateManyWithWhereWithoutProjectsShownOnLandingInput!]
  upsert: [PlatformConfigUpsertWithWhereUniqueWithoutProjectsShownOnLandingInput!]
}

input PlatformConfigUpdateWithWhereUniqueWithoutCrowdFundingsShownOnLandingInput {
  data: PlatformConfigUpdateWithoutCrowdFundingsShownOnLandingInput!
  where: PlatformConfigWhereUniqueInput!
}

input PlatformConfigUpdateWithWhereUniqueWithoutEventsShownOnLandingInput {
  data: PlatformConfigUpdateWithoutEventsShownOnLandingInput!
  where: PlatformConfigWhereUniqueInput!
}

input PlatformConfigUpdateWithWhereUniqueWithoutNewsShownOnLandingInput {
  data: PlatformConfigUpdateWithoutNewsShownOnLandingInput!
  where: PlatformConfigWhereUniqueInput!
}

input PlatformConfigUpdateWithWhereUniqueWithoutOffersShownOnLandingInput {
  data: PlatformConfigUpdateWithoutOffersShownOnLandingInput!
  where: PlatformConfigWhereUniqueInput!
}

input PlatformConfigUpdateWithWhereUniqueWithoutProjectsShownOnLandingInput {
  data: PlatformConfigUpdateWithoutProjectsShownOnLandingInput!
  where: PlatformConfigWhereUniqueInput!
}

input PlatformConfigUpdateWithoutCrowdFundingsShownOnLandingInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  eventsShownOnLanding: EventUpdateManyWithoutPlatformConfigShowedInput
  newsShownOnLanding: PostUpdateManyWithoutPlatformConfigNewsShowedInput
  offersShownOnLanding: PostUpdateManyWithoutPlatformConfigOffersShowedInput
  platformDescription: StringFieldUpdateOperationsInput
  platformShortDescription: StringFieldUpdateOperationsInput
  platformTagline: StringFieldUpdateOperationsInput
  platformTitle: StringFieldUpdateOperationsInput
  projectsShownOnLanding: ProjectUpdateManyWithoutPlatformConfigShowedInput
  totalBudgetInvestment: IntFieldUpdateOperationsInput
  totalCompanyCount: IntFieldUpdateOperationsInput
  totalExtraBudgetInvestment: IntFieldUpdateOperationsInput
  totalProjectCount: IntFieldUpdateOperationsInput
}

input PlatformConfigUpdateWithoutEventsShownOnLandingInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  crowdFundingsShownOnLanding: CrowdFundingUpdateManyWithoutPlatformConfigShowedInput
  newsShownOnLanding: PostUpdateManyWithoutPlatformConfigNewsShowedInput
  offersShownOnLanding: PostUpdateManyWithoutPlatformConfigOffersShowedInput
  platformDescription: StringFieldUpdateOperationsInput
  platformShortDescription: StringFieldUpdateOperationsInput
  platformTagline: StringFieldUpdateOperationsInput
  platformTitle: StringFieldUpdateOperationsInput
  projectsShownOnLanding: ProjectUpdateManyWithoutPlatformConfigShowedInput
  totalBudgetInvestment: IntFieldUpdateOperationsInput
  totalCompanyCount: IntFieldUpdateOperationsInput
  totalExtraBudgetInvestment: IntFieldUpdateOperationsInput
  totalProjectCount: IntFieldUpdateOperationsInput
}

input PlatformConfigUpdateWithoutNewsShownOnLandingInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  crowdFundingsShownOnLanding: CrowdFundingUpdateManyWithoutPlatformConfigShowedInput
  eventsShownOnLanding: EventUpdateManyWithoutPlatformConfigShowedInput
  offersShownOnLanding: PostUpdateManyWithoutPlatformConfigOffersShowedInput
  platformDescription: StringFieldUpdateOperationsInput
  platformShortDescription: StringFieldUpdateOperationsInput
  platformTagline: StringFieldUpdateOperationsInput
  platformTitle: StringFieldUpdateOperationsInput
  projectsShownOnLanding: ProjectUpdateManyWithoutPlatformConfigShowedInput
  totalBudgetInvestment: IntFieldUpdateOperationsInput
  totalCompanyCount: IntFieldUpdateOperationsInput
  totalExtraBudgetInvestment: IntFieldUpdateOperationsInput
  totalProjectCount: IntFieldUpdateOperationsInput
}

input PlatformConfigUpdateWithoutOffersShownOnLandingInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  crowdFundingsShownOnLanding: CrowdFundingUpdateManyWithoutPlatformConfigShowedInput
  eventsShownOnLanding: EventUpdateManyWithoutPlatformConfigShowedInput
  newsShownOnLanding: PostUpdateManyWithoutPlatformConfigNewsShowedInput
  platformDescription: StringFieldUpdateOperationsInput
  platformShortDescription: StringFieldUpdateOperationsInput
  platformTagline: StringFieldUpdateOperationsInput
  platformTitle: StringFieldUpdateOperationsInput
  projectsShownOnLanding: ProjectUpdateManyWithoutPlatformConfigShowedInput
  totalBudgetInvestment: IntFieldUpdateOperationsInput
  totalCompanyCount: IntFieldUpdateOperationsInput
  totalExtraBudgetInvestment: IntFieldUpdateOperationsInput
  totalProjectCount: IntFieldUpdateOperationsInput
}

input PlatformConfigUpdateWithoutProjectsShownOnLandingInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  crowdFundingsShownOnLanding: CrowdFundingUpdateManyWithoutPlatformConfigShowedInput
  eventsShownOnLanding: EventUpdateManyWithoutPlatformConfigShowedInput
  newsShownOnLanding: PostUpdateManyWithoutPlatformConfigNewsShowedInput
  offersShownOnLanding: PostUpdateManyWithoutPlatformConfigOffersShowedInput
  platformDescription: StringFieldUpdateOperationsInput
  platformShortDescription: StringFieldUpdateOperationsInput
  platformTagline: StringFieldUpdateOperationsInput
  platformTitle: StringFieldUpdateOperationsInput
  totalBudgetInvestment: IntFieldUpdateOperationsInput
  totalCompanyCount: IntFieldUpdateOperationsInput
  totalExtraBudgetInvestment: IntFieldUpdateOperationsInput
  totalProjectCount: IntFieldUpdateOperationsInput
}

input PlatformConfigUpsertWithWhereUniqueWithoutCrowdFundingsShownOnLandingInput {
  create: PlatformConfigCreateWithoutCrowdFundingsShownOnLandingInput!
  update: PlatformConfigUpdateWithoutCrowdFundingsShownOnLandingInput!
  where: PlatformConfigWhereUniqueInput!
}

input PlatformConfigUpsertWithWhereUniqueWithoutEventsShownOnLandingInput {
  create: PlatformConfigCreateWithoutEventsShownOnLandingInput!
  update: PlatformConfigUpdateWithoutEventsShownOnLandingInput!
  where: PlatformConfigWhereUniqueInput!
}

input PlatformConfigUpsertWithWhereUniqueWithoutNewsShownOnLandingInput {
  create: PlatformConfigCreateWithoutNewsShownOnLandingInput!
  update: PlatformConfigUpdateWithoutNewsShownOnLandingInput!
  where: PlatformConfigWhereUniqueInput!
}

input PlatformConfigUpsertWithWhereUniqueWithoutOffersShownOnLandingInput {
  create: PlatformConfigCreateWithoutOffersShownOnLandingInput!
  update: PlatformConfigUpdateWithoutOffersShownOnLandingInput!
  where: PlatformConfigWhereUniqueInput!
}

input PlatformConfigUpsertWithWhereUniqueWithoutProjectsShownOnLandingInput {
  create: PlatformConfigCreateWithoutProjectsShownOnLandingInput!
  update: PlatformConfigUpdateWithoutProjectsShownOnLandingInput!
  where: PlatformConfigWhereUniqueInput!
}

input PlatformConfigWhereInput {
  AND: [PlatformConfigWhereInput!]
  NOT: [PlatformConfigWhereInput!]
  OR: [PlatformConfigWhereInput!]
  createdAt: DateTimeFilter
  crowdFundingsShownOnLanding: CrowdFundingListRelationFilter
  eventsShownOnLanding: EventListRelationFilter
  id: IntFilter
  newsShownOnLanding: PostListRelationFilter
  offersShownOnLanding: PostListRelationFilter
  platformDescription: StringFilter
  platformShortDescription: StringFilter
  platformTagline: StringFilter
  platformTitle: StringFilter
  projectsShownOnLanding: ProjectListRelationFilter
  totalBudgetInvestment: IntFilter
  totalCompanyCount: IntFilter
  totalExtraBudgetInvestment: IntFilter
  totalProjectCount: IntFilter
}

input PlatformConfigWhereUniqueInput {
  id: Int
}

type Post {
  article: Article
  articleBody: String
  author: Worker
  category: filteringCategories!
  createdAt: DateTime!
  description: String!
  id: Int!
  isApproved: Boolean
  isNews: Boolean!
  isOffer: Boolean!
  isResource: Boolean!
  moderate: Moderation
  moderationChecked: Boolean
  platformConfigNewsShowed(after: PlatformConfigWhereUniqueInput, before: PlatformConfigWhereUniqueInput, first: Int, last: Int): [PlatformConfig!]!
  platformConfigOffersShowed(after: PlatformConfigWhereUniqueInput, before: PlatformConfigWhereUniqueInput, first: Int, last: Int): [PlatformConfig!]!
  postMedia(after: MediaWhereUniqueInput, before: MediaWhereUniqueInput, first: Int, last: Int): [Media!]!
  poster: Media
  project: Project
  rejectMessage: String
  tags: [String!]!
  title: String!
}

input PostCreateInput {
  articleBody: String!
  category: filteringCategoies!
  description: String!
  isNews: Boolean!
  isOffer: Boolean!
  isResource: Boolean!
  projectId: Int!
  tags: [String]!
  title: String!
}

input PostCreateManyAuthorInput {
  articleBody: String
  auditedAt: DateTime
  category: filteringCategories!
  createdAt: DateTime
  description: String!
  id: Int
  isApproved: Boolean
  isNews: Boolean
  isOffer: Boolean
  isResource: Boolean
  moderateId: Int
  moderationChecked: Boolean
  posterId: Int
  projectID: Int
  rejectMessage: String
  tags: PostCreateManytagsInput
  title: String!
}

input PostCreateManyAuthorInputEnvelope {
  data: [PostCreateManyAuthorInput!]
  skipDuplicates: Boolean
}

input PostCreateManyPosterInput {
  articleBody: String
  auditedAt: DateTime
  authorID: Int
  category: filteringCategories!
  createdAt: DateTime
  description: String!
  id: Int
  isApproved: Boolean
  isNews: Boolean
  isOffer: Boolean
  isResource: Boolean
  moderateId: Int
  moderationChecked: Boolean
  projectID: Int
  rejectMessage: String
  tags: PostCreateManytagsInput
  title: String!
}

input PostCreateManyPosterInputEnvelope {
  data: [PostCreateManyPosterInput!]
  skipDuplicates: Boolean
}

input PostCreateManyProjectInput {
  articleBody: String
  auditedAt: DateTime
  authorID: Int
  category: filteringCategories!
  createdAt: DateTime
  description: String!
  id: Int
  isApproved: Boolean
  isNews: Boolean
  isOffer: Boolean
  isResource: Boolean
  moderateId: Int
  moderationChecked: Boolean
  posterId: Int
  rejectMessage: String
  tags: PostCreateManytagsInput
  title: String!
}

input PostCreateManyProjectInputEnvelope {
  data: [PostCreateManyProjectInput!]
  skipDuplicates: Boolean
}

input PostCreateManytagsInput {
  set: [String!]
}

input PostCreateNestedManyWithoutAuthorInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutAuthorInput!]
  create: [PostCreateWithoutAuthorInput!]
  createMany: PostCreateManyAuthorInputEnvelope
}

input PostCreateNestedManyWithoutPlatformConfigNewsShowedInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutPlatformConfigNewsShowedInput!]
  create: [PostCreateWithoutPlatformConfigNewsShowedInput!]
}

input PostCreateNestedManyWithoutPlatformConfigOffersShowedInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutPlatformConfigOffersShowedInput!]
  create: [PostCreateWithoutPlatformConfigOffersShowedInput!]
}

input PostCreateNestedManyWithoutPosterInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutPosterInput!]
  create: [PostCreateWithoutPosterInput!]
  createMany: PostCreateManyPosterInputEnvelope
}

input PostCreateNestedManyWithoutProjectInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutProjectInput!]
  create: [PostCreateWithoutProjectInput!]
  createMany: PostCreateManyProjectInputEnvelope
}

input PostCreateNestedOneWithoutArticleInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutArticleInput
  create: PostCreateWithoutArticleInput
}

input PostCreateNestedOneWithoutModerateInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutModerateInput
  create: PostCreateWithoutModerateInput
}

input PostCreateNestedOneWithoutPostMediaInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutPostMediaInput
  create: PostCreateWithoutPostMediaInput
}

input PostCreateOrConnectWithoutArticleInput {
  create: PostCreateWithoutArticleInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutAuthorInput {
  create: PostCreateWithoutAuthorInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutModerateInput {
  create: PostCreateWithoutModerateInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutPlatformConfigNewsShowedInput {
  create: PostCreateWithoutPlatformConfigNewsShowedInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutPlatformConfigOffersShowedInput {
  create: PostCreateWithoutPlatformConfigOffersShowedInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutPostMediaInput {
  create: PostCreateWithoutPostMediaInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutPosterInput {
  create: PostCreateWithoutPosterInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutProjectInput {
  create: PostCreateWithoutProjectInput!
  where: PostWhereUniqueInput!
}

input PostCreateWithoutArticleInput {
  articleBody: String
  auditedAt: DateTime
  author: WorkerCreateNestedOneWithoutPublishedPostsInput
  category: filteringCategories!
  createdAt: DateTime
  description: String!
  isApproved: Boolean
  isNews: Boolean
  isOffer: Boolean
  isResource: Boolean
  moderate: ModerationCreateNestedOneWithoutPostInput
  moderationChecked: Boolean
  platformConfigNewsShowed: PlatformConfigCreateNestedManyWithoutNewsShownOnLandingInput
  platformConfigOffersShowed: PlatformConfigCreateNestedManyWithoutOffersShownOnLandingInput
  postMedia: MediaCreateNestedManyWithoutPostMediaInput
  poster: MediaCreateNestedOneWithoutPostInput
  project: ProjectCreateNestedOneWithoutPublishedPostsInput
  rejectMessage: String
  tags: PostCreatetagsInput
  title: String!
}

input PostCreateWithoutAuthorInput {
  article: ArticleCreateNestedOneWithoutPostInput
  articleBody: String
  auditedAt: DateTime
  category: filteringCategories!
  createdAt: DateTime
  description: String!
  isApproved: Boolean
  isNews: Boolean
  isOffer: Boolean
  isResource: Boolean
  moderate: ModerationCreateNestedOneWithoutPostInput
  moderationChecked: Boolean
  platformConfigNewsShowed: PlatformConfigCreateNestedManyWithoutNewsShownOnLandingInput
  platformConfigOffersShowed: PlatformConfigCreateNestedManyWithoutOffersShownOnLandingInput
  postMedia: MediaCreateNestedManyWithoutPostMediaInput
  poster: MediaCreateNestedOneWithoutPostInput
  project: ProjectCreateNestedOneWithoutPublishedPostsInput
  rejectMessage: String
  tags: PostCreatetagsInput
  title: String!
}

input PostCreateWithoutModerateInput {
  article: ArticleCreateNestedOneWithoutPostInput
  articleBody: String
  auditedAt: DateTime
  author: WorkerCreateNestedOneWithoutPublishedPostsInput
  category: filteringCategories!
  createdAt: DateTime
  description: String!
  isApproved: Boolean
  isNews: Boolean
  isOffer: Boolean
  isResource: Boolean
  moderationChecked: Boolean
  platformConfigNewsShowed: PlatformConfigCreateNestedManyWithoutNewsShownOnLandingInput
  platformConfigOffersShowed: PlatformConfigCreateNestedManyWithoutOffersShownOnLandingInput
  postMedia: MediaCreateNestedManyWithoutPostMediaInput
  poster: MediaCreateNestedOneWithoutPostInput
  project: ProjectCreateNestedOneWithoutPublishedPostsInput
  rejectMessage: String
  tags: PostCreatetagsInput
  title: String!
}

input PostCreateWithoutPlatformConfigNewsShowedInput {
  article: ArticleCreateNestedOneWithoutPostInput
  articleBody: String
  auditedAt: DateTime
  author: WorkerCreateNestedOneWithoutPublishedPostsInput
  category: filteringCategories!
  createdAt: DateTime
  description: String!
  isApproved: Boolean
  isNews: Boolean
  isOffer: Boolean
  isResource: Boolean
  moderate: ModerationCreateNestedOneWithoutPostInput
  moderationChecked: Boolean
  platformConfigOffersShowed: PlatformConfigCreateNestedManyWithoutOffersShownOnLandingInput
  postMedia: MediaCreateNestedManyWithoutPostMediaInput
  poster: MediaCreateNestedOneWithoutPostInput
  project: ProjectCreateNestedOneWithoutPublishedPostsInput
  rejectMessage: String
  tags: PostCreatetagsInput
  title: String!
}

input PostCreateWithoutPlatformConfigOffersShowedInput {
  article: ArticleCreateNestedOneWithoutPostInput
  articleBody: String
  auditedAt: DateTime
  author: WorkerCreateNestedOneWithoutPublishedPostsInput
  category: filteringCategories!
  createdAt: DateTime
  description: String!
  isApproved: Boolean
  isNews: Boolean
  isOffer: Boolean
  isResource: Boolean
  moderate: ModerationCreateNestedOneWithoutPostInput
  moderationChecked: Boolean
  platformConfigNewsShowed: PlatformConfigCreateNestedManyWithoutNewsShownOnLandingInput
  postMedia: MediaCreateNestedManyWithoutPostMediaInput
  poster: MediaCreateNestedOneWithoutPostInput
  project: ProjectCreateNestedOneWithoutPublishedPostsInput
  rejectMessage: String
  tags: PostCreatetagsInput
  title: String!
}

input PostCreateWithoutPostMediaInput {
  article: ArticleCreateNestedOneWithoutPostInput
  articleBody: String
  auditedAt: DateTime
  author: WorkerCreateNestedOneWithoutPublishedPostsInput
  category: filteringCategories!
  createdAt: DateTime
  description: String!
  isApproved: Boolean
  isNews: Boolean
  isOffer: Boolean
  isResource: Boolean
  moderate: ModerationCreateNestedOneWithoutPostInput
  moderationChecked: Boolean
  platformConfigNewsShowed: PlatformConfigCreateNestedManyWithoutNewsShownOnLandingInput
  platformConfigOffersShowed: PlatformConfigCreateNestedManyWithoutOffersShownOnLandingInput
  poster: MediaCreateNestedOneWithoutPostInput
  project: ProjectCreateNestedOneWithoutPublishedPostsInput
  rejectMessage: String
  tags: PostCreatetagsInput
  title: String!
}

input PostCreateWithoutPosterInput {
  article: ArticleCreateNestedOneWithoutPostInput
  articleBody: String
  auditedAt: DateTime
  author: WorkerCreateNestedOneWithoutPublishedPostsInput
  category: filteringCategories!
  createdAt: DateTime
  description: String!
  isApproved: Boolean
  isNews: Boolean
  isOffer: Boolean
  isResource: Boolean
  moderate: ModerationCreateNestedOneWithoutPostInput
  moderationChecked: Boolean
  platformConfigNewsShowed: PlatformConfigCreateNestedManyWithoutNewsShownOnLandingInput
  platformConfigOffersShowed: PlatformConfigCreateNestedManyWithoutOffersShownOnLandingInput
  postMedia: MediaCreateNestedManyWithoutPostMediaInput
  project: ProjectCreateNestedOneWithoutPublishedPostsInput
  rejectMessage: String
  tags: PostCreatetagsInput
  title: String!
}

input PostCreateWithoutProjectInput {
  article: ArticleCreateNestedOneWithoutPostInput
  articleBody: String
  auditedAt: DateTime
  author: WorkerCreateNestedOneWithoutPublishedPostsInput
  category: filteringCategories!
  createdAt: DateTime
  description: String!
  isApproved: Boolean
  isNews: Boolean
  isOffer: Boolean
  isResource: Boolean
  moderate: ModerationCreateNestedOneWithoutPostInput
  moderationChecked: Boolean
  platformConfigNewsShowed: PlatformConfigCreateNestedManyWithoutNewsShownOnLandingInput
  platformConfigOffersShowed: PlatformConfigCreateNestedManyWithoutOffersShownOnLandingInput
  postMedia: MediaCreateNestedManyWithoutPostMediaInput
  poster: MediaCreateNestedOneWithoutPostInput
  rejectMessage: String
  tags: PostCreatetagsInput
  title: String!
}

input PostCreatetagsInput {
  set: [String!]
}

input PostListRelationFilter {
  every: PostWhereInput
  none: PostWhereInput
  some: PostWhereInput
}

input PostOrderByRelationAggregateInput {
  _count: SortOrder
}

input PostOrderByWithRelationInput {
  article: ArticleOrderByWithRelationInput
  articleBody: SortOrder
  auditedAt: SortOrder
  author: WorkerOrderByWithRelationInput
  authorID: SortOrder
  category: SortOrder
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  isApproved: SortOrder
  isNews: SortOrder
  isOffer: SortOrder
  isResource: SortOrder
  moderate: ModerationOrderByWithRelationInput
  moderateId: SortOrder
  moderationChecked: SortOrder
  platformConfigNewsShowed: PlatformConfigOrderByRelationAggregateInput
  platformConfigOffersShowed: PlatformConfigOrderByRelationAggregateInput
  postMedia: MediaOrderByRelationAggregateInput
  poster: MediaOrderByWithRelationInput
  posterId: SortOrder
  project: ProjectOrderByWithRelationInput
  projectID: SortOrder
  rejectMessage: SortOrder
  tags: SortOrder
  title: SortOrder
}

input PostScalarWhereInput {
  AND: [PostScalarWhereInput!]
  NOT: [PostScalarWhereInput!]
  OR: [PostScalarWhereInput!]
  articleBody: StringNullableFilter
  auditedAt: DateTimeNullableFilter
  authorID: IntNullableFilter
  category: EnumfilteringCategoriesFilter
  createdAt: DateTimeFilter
  description: StringFilter
  id: IntFilter
  isApproved: BoolNullableFilter
  isNews: BoolFilter
  isOffer: BoolFilter
  isResource: BoolFilter
  moderateId: IntNullableFilter
  moderationChecked: BoolNullableFilter
  posterId: IntNullableFilter
  projectID: IntNullableFilter
  rejectMessage: StringNullableFilter
  tags: StringNullableListFilter
  title: StringFilter
}

input PostUpdateManyMutationInput {
  articleBody: NullableStringFieldUpdateOperationsInput
  auditedAt: NullableDateTimeFieldUpdateOperationsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  isNews: BoolFieldUpdateOperationsInput
  isOffer: BoolFieldUpdateOperationsInput
  isResource: BoolFieldUpdateOperationsInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  rejectMessage: NullableStringFieldUpdateOperationsInput
  tags: PostUpdatetagsInput
  title: StringFieldUpdateOperationsInput
}

input PostUpdateManyWithWhereWithoutAuthorInput {
  data: PostUpdateManyMutationInput!
  where: PostScalarWhereInput!
}

input PostUpdateManyWithWhereWithoutPlatformConfigNewsShowedInput {
  data: PostUpdateManyMutationInput!
  where: PostScalarWhereInput!
}

input PostUpdateManyWithWhereWithoutPlatformConfigOffersShowedInput {
  data: PostUpdateManyMutationInput!
  where: PostScalarWhereInput!
}

input PostUpdateManyWithWhereWithoutPosterInput {
  data: PostUpdateManyMutationInput!
  where: PostScalarWhereInput!
}

input PostUpdateManyWithWhereWithoutProjectInput {
  data: PostUpdateManyMutationInput!
  where: PostScalarWhereInput!
}

input PostUpdateManyWithoutAuthorInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutAuthorInput!]
  create: [PostCreateWithoutAuthorInput!]
  createMany: PostCreateManyAuthorInputEnvelope
  delete: [PostWhereUniqueInput!]
  deleteMany: [PostScalarWhereInput!]
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [PostUpdateManyWithWhereWithoutAuthorInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]
}

input PostUpdateManyWithoutPlatformConfigNewsShowedInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutPlatformConfigNewsShowedInput!]
  create: [PostCreateWithoutPlatformConfigNewsShowedInput!]
  delete: [PostWhereUniqueInput!]
  deleteMany: [PostScalarWhereInput!]
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutPlatformConfigNewsShowedInput!]
  updateMany: [PostUpdateManyWithWhereWithoutPlatformConfigNewsShowedInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutPlatformConfigNewsShowedInput!]
}

input PostUpdateManyWithoutPlatformConfigOffersShowedInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutPlatformConfigOffersShowedInput!]
  create: [PostCreateWithoutPlatformConfigOffersShowedInput!]
  delete: [PostWhereUniqueInput!]
  deleteMany: [PostScalarWhereInput!]
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutPlatformConfigOffersShowedInput!]
  updateMany: [PostUpdateManyWithWhereWithoutPlatformConfigOffersShowedInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutPlatformConfigOffersShowedInput!]
}

input PostUpdateManyWithoutPosterInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutPosterInput!]
  create: [PostCreateWithoutPosterInput!]
  createMany: PostCreateManyPosterInputEnvelope
  delete: [PostWhereUniqueInput!]
  deleteMany: [PostScalarWhereInput!]
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutPosterInput!]
  updateMany: [PostUpdateManyWithWhereWithoutPosterInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutPosterInput!]
}

input PostUpdateManyWithoutProjectInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutProjectInput!]
  create: [PostCreateWithoutProjectInput!]
  createMany: PostCreateManyProjectInputEnvelope
  delete: [PostWhereUniqueInput!]
  deleteMany: [PostScalarWhereInput!]
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutProjectInput!]
  updateMany: [PostUpdateManyWithWhereWithoutProjectInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutProjectInput!]
}

input PostUpdateOneWithoutArticleInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutArticleInput
  create: PostCreateWithoutArticleInput
  delete: Boolean
  disconnect: Boolean
  update: PostUpdateWithoutArticleInput
  upsert: PostUpsertWithoutArticleInput
}

input PostUpdateOneWithoutModerateInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutModerateInput
  create: PostCreateWithoutModerateInput
  delete: Boolean
  disconnect: Boolean
  update: PostUpdateWithoutModerateInput
  upsert: PostUpsertWithoutModerateInput
}

input PostUpdateOneWithoutPostMediaInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutPostMediaInput
  create: PostCreateWithoutPostMediaInput
  delete: Boolean
  disconnect: Boolean
  update: PostUpdateWithoutPostMediaInput
  upsert: PostUpsertWithoutPostMediaInput
}

input PostUpdateWithWhereUniqueWithoutAuthorInput {
  data: PostUpdateWithoutAuthorInput!
  where: PostWhereUniqueInput!
}

input PostUpdateWithWhereUniqueWithoutPlatformConfigNewsShowedInput {
  data: PostUpdateWithoutPlatformConfigNewsShowedInput!
  where: PostWhereUniqueInput!
}

input PostUpdateWithWhereUniqueWithoutPlatformConfigOffersShowedInput {
  data: PostUpdateWithoutPlatformConfigOffersShowedInput!
  where: PostWhereUniqueInput!
}

input PostUpdateWithWhereUniqueWithoutPosterInput {
  data: PostUpdateWithoutPosterInput!
  where: PostWhereUniqueInput!
}

input PostUpdateWithWhereUniqueWithoutProjectInput {
  data: PostUpdateWithoutProjectInput!
  where: PostWhereUniqueInput!
}

input PostUpdateWithoutArticleInput {
  articleBody: NullableStringFieldUpdateOperationsInput
  auditedAt: NullableDateTimeFieldUpdateOperationsInput
  author: WorkerUpdateOneWithoutPublishedPostsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  isNews: BoolFieldUpdateOperationsInput
  isOffer: BoolFieldUpdateOperationsInput
  isResource: BoolFieldUpdateOperationsInput
  moderate: ModerationUpdateOneWithoutPostInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  platformConfigNewsShowed: PlatformConfigUpdateManyWithoutNewsShownOnLandingInput
  platformConfigOffersShowed: PlatformConfigUpdateManyWithoutOffersShownOnLandingInput
  postMedia: MediaUpdateManyWithoutPostMediaInput
  poster: MediaUpdateOneWithoutPostInput
  project: ProjectUpdateOneWithoutPublishedPostsInput
  rejectMessage: NullableStringFieldUpdateOperationsInput
  tags: PostUpdatetagsInput
  title: StringFieldUpdateOperationsInput
}

input PostUpdateWithoutAuthorInput {
  article: ArticleUpdateOneWithoutPostInput
  articleBody: NullableStringFieldUpdateOperationsInput
  auditedAt: NullableDateTimeFieldUpdateOperationsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  isNews: BoolFieldUpdateOperationsInput
  isOffer: BoolFieldUpdateOperationsInput
  isResource: BoolFieldUpdateOperationsInput
  moderate: ModerationUpdateOneWithoutPostInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  platformConfigNewsShowed: PlatformConfigUpdateManyWithoutNewsShownOnLandingInput
  platformConfigOffersShowed: PlatformConfigUpdateManyWithoutOffersShownOnLandingInput
  postMedia: MediaUpdateManyWithoutPostMediaInput
  poster: MediaUpdateOneWithoutPostInput
  project: ProjectUpdateOneWithoutPublishedPostsInput
  rejectMessage: NullableStringFieldUpdateOperationsInput
  tags: PostUpdatetagsInput
  title: StringFieldUpdateOperationsInput
}

input PostUpdateWithoutModerateInput {
  article: ArticleUpdateOneWithoutPostInput
  articleBody: NullableStringFieldUpdateOperationsInput
  auditedAt: NullableDateTimeFieldUpdateOperationsInput
  author: WorkerUpdateOneWithoutPublishedPostsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  isNews: BoolFieldUpdateOperationsInput
  isOffer: BoolFieldUpdateOperationsInput
  isResource: BoolFieldUpdateOperationsInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  platformConfigNewsShowed: PlatformConfigUpdateManyWithoutNewsShownOnLandingInput
  platformConfigOffersShowed: PlatformConfigUpdateManyWithoutOffersShownOnLandingInput
  postMedia: MediaUpdateManyWithoutPostMediaInput
  poster: MediaUpdateOneWithoutPostInput
  project: ProjectUpdateOneWithoutPublishedPostsInput
  rejectMessage: NullableStringFieldUpdateOperationsInput
  tags: PostUpdatetagsInput
  title: StringFieldUpdateOperationsInput
}

input PostUpdateWithoutPlatformConfigNewsShowedInput {
  article: ArticleUpdateOneWithoutPostInput
  articleBody: NullableStringFieldUpdateOperationsInput
  auditedAt: NullableDateTimeFieldUpdateOperationsInput
  author: WorkerUpdateOneWithoutPublishedPostsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  isNews: BoolFieldUpdateOperationsInput
  isOffer: BoolFieldUpdateOperationsInput
  isResource: BoolFieldUpdateOperationsInput
  moderate: ModerationUpdateOneWithoutPostInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  platformConfigOffersShowed: PlatformConfigUpdateManyWithoutOffersShownOnLandingInput
  postMedia: MediaUpdateManyWithoutPostMediaInput
  poster: MediaUpdateOneWithoutPostInput
  project: ProjectUpdateOneWithoutPublishedPostsInput
  rejectMessage: NullableStringFieldUpdateOperationsInput
  tags: PostUpdatetagsInput
  title: StringFieldUpdateOperationsInput
}

input PostUpdateWithoutPlatformConfigOffersShowedInput {
  article: ArticleUpdateOneWithoutPostInput
  articleBody: NullableStringFieldUpdateOperationsInput
  auditedAt: NullableDateTimeFieldUpdateOperationsInput
  author: WorkerUpdateOneWithoutPublishedPostsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  isNews: BoolFieldUpdateOperationsInput
  isOffer: BoolFieldUpdateOperationsInput
  isResource: BoolFieldUpdateOperationsInput
  moderate: ModerationUpdateOneWithoutPostInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  platformConfigNewsShowed: PlatformConfigUpdateManyWithoutNewsShownOnLandingInput
  postMedia: MediaUpdateManyWithoutPostMediaInput
  poster: MediaUpdateOneWithoutPostInput
  project: ProjectUpdateOneWithoutPublishedPostsInput
  rejectMessage: NullableStringFieldUpdateOperationsInput
  tags: PostUpdatetagsInput
  title: StringFieldUpdateOperationsInput
}

input PostUpdateWithoutPostMediaInput {
  article: ArticleUpdateOneWithoutPostInput
  articleBody: NullableStringFieldUpdateOperationsInput
  auditedAt: NullableDateTimeFieldUpdateOperationsInput
  author: WorkerUpdateOneWithoutPublishedPostsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  isNews: BoolFieldUpdateOperationsInput
  isOffer: BoolFieldUpdateOperationsInput
  isResource: BoolFieldUpdateOperationsInput
  moderate: ModerationUpdateOneWithoutPostInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  platformConfigNewsShowed: PlatformConfigUpdateManyWithoutNewsShownOnLandingInput
  platformConfigOffersShowed: PlatformConfigUpdateManyWithoutOffersShownOnLandingInput
  poster: MediaUpdateOneWithoutPostInput
  project: ProjectUpdateOneWithoutPublishedPostsInput
  rejectMessage: NullableStringFieldUpdateOperationsInput
  tags: PostUpdatetagsInput
  title: StringFieldUpdateOperationsInput
}

input PostUpdateWithoutPosterInput {
  article: ArticleUpdateOneWithoutPostInput
  articleBody: NullableStringFieldUpdateOperationsInput
  auditedAt: NullableDateTimeFieldUpdateOperationsInput
  author: WorkerUpdateOneWithoutPublishedPostsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  isNews: BoolFieldUpdateOperationsInput
  isOffer: BoolFieldUpdateOperationsInput
  isResource: BoolFieldUpdateOperationsInput
  moderate: ModerationUpdateOneWithoutPostInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  platformConfigNewsShowed: PlatformConfigUpdateManyWithoutNewsShownOnLandingInput
  platformConfigOffersShowed: PlatformConfigUpdateManyWithoutOffersShownOnLandingInput
  postMedia: MediaUpdateManyWithoutPostMediaInput
  project: ProjectUpdateOneWithoutPublishedPostsInput
  rejectMessage: NullableStringFieldUpdateOperationsInput
  tags: PostUpdatetagsInput
  title: StringFieldUpdateOperationsInput
}

input PostUpdateWithoutProjectInput {
  article: ArticleUpdateOneWithoutPostInput
  articleBody: NullableStringFieldUpdateOperationsInput
  auditedAt: NullableDateTimeFieldUpdateOperationsInput
  author: WorkerUpdateOneWithoutPublishedPostsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  isNews: BoolFieldUpdateOperationsInput
  isOffer: BoolFieldUpdateOperationsInput
  isResource: BoolFieldUpdateOperationsInput
  moderate: ModerationUpdateOneWithoutPostInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  platformConfigNewsShowed: PlatformConfigUpdateManyWithoutNewsShownOnLandingInput
  platformConfigOffersShowed: PlatformConfigUpdateManyWithoutOffersShownOnLandingInput
  postMedia: MediaUpdateManyWithoutPostMediaInput
  poster: MediaUpdateOneWithoutPostInput
  rejectMessage: NullableStringFieldUpdateOperationsInput
  tags: PostUpdatetagsInput
  title: StringFieldUpdateOperationsInput
}

input PostUpdatetagsInput {
  push: String
  set: [String!]
}

input PostUpsertWithWhereUniqueWithoutAuthorInput {
  create: PostCreateWithoutAuthorInput!
  update: PostUpdateWithoutAuthorInput!
  where: PostWhereUniqueInput!
}

input PostUpsertWithWhereUniqueWithoutPlatformConfigNewsShowedInput {
  create: PostCreateWithoutPlatformConfigNewsShowedInput!
  update: PostUpdateWithoutPlatformConfigNewsShowedInput!
  where: PostWhereUniqueInput!
}

input PostUpsertWithWhereUniqueWithoutPlatformConfigOffersShowedInput {
  create: PostCreateWithoutPlatformConfigOffersShowedInput!
  update: PostUpdateWithoutPlatformConfigOffersShowedInput!
  where: PostWhereUniqueInput!
}

input PostUpsertWithWhereUniqueWithoutPosterInput {
  create: PostCreateWithoutPosterInput!
  update: PostUpdateWithoutPosterInput!
  where: PostWhereUniqueInput!
}

input PostUpsertWithWhereUniqueWithoutProjectInput {
  create: PostCreateWithoutProjectInput!
  update: PostUpdateWithoutProjectInput!
  where: PostWhereUniqueInput!
}

input PostUpsertWithoutArticleInput {
  create: PostCreateWithoutArticleInput!
  update: PostUpdateWithoutArticleInput!
}

input PostUpsertWithoutModerateInput {
  create: PostCreateWithoutModerateInput!
  update: PostUpdateWithoutModerateInput!
}

input PostUpsertWithoutPostMediaInput {
  create: PostCreateWithoutPostMediaInput!
  update: PostUpdateWithoutPostMediaInput!
}

input PostWhereInput {
  AND: [PostWhereInput!]
  NOT: [PostWhereInput!]
  OR: [PostWhereInput!]
  article: ArticleWhereInput
  articleBody: StringNullableFilter
  auditedAt: DateTimeNullableFilter
  author: WorkerWhereInput
  authorID: IntNullableFilter
  category: EnumfilteringCategoriesFilter
  createdAt: DateTimeFilter
  description: StringFilter
  id: IntFilter
  isApproved: BoolNullableFilter
  isNews: BoolFilter
  isOffer: BoolFilter
  isResource: BoolFilter
  moderate: ModerationWhereInput
  moderateId: IntNullableFilter
  moderationChecked: BoolNullableFilter
  platformConfigNewsShowed: PlatformConfigListRelationFilter
  platformConfigOffersShowed: PlatformConfigListRelationFilter
  postMedia: MediaListRelationFilter
  poster: MediaWhereInput
  posterId: IntNullableFilter
  project: ProjectWhereInput
  projectID: IntNullableFilter
  rejectMessage: StringNullableFilter
  tags: StringNullableListFilter
  title: StringFilter
}

input PostWhereUniqueInput {
  id: Int
  moderateId: Int
}

type Project {
  businessModel: businessModelEnum
  category: filteringCategories!
  createdAt: DateTime!
  crowdFunding(after: CrowdFundingWhereUniqueInput, before: CrowdFundingWhereUniqueInput, first: Int, last: Int): [CrowdFunding!]!
  description: Article
  id: Int!
  investmentStage: investmentStageEnum
  isApproved: Boolean
  mainGoal: mainGoalEnum
  metrics: ProjectMetrics
  moderate: Moderation
  moderationChecked: Boolean
  name: String!
  ownerCompany: Company!
  poster: Media
  presentationMedia(after: MediaWhereUniqueInput, before: MediaWhereUniqueInput, first: Int, last: Int): [Media!]!
  projectMarket: projectMarketEnum
  projectMedia(after: MediaWhereUniqueInput, before: MediaWhereUniqueInput, first: Int, last: Int): [Media!]!
  projectSite: String
  projectStage: projectStageEnum
  projectType: projectTypeEnum
  publishedPosts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int, orderBy: [PostOrderByWithRelationInput!]): [Post!]!
  salesType: salesTypeEnum
  shortDescription: String!
  technologyType: technologyTypeEnum
  workers(after: WorkerWhereUniqueInput, before: WorkerWhereUniqueInput, first: Int, last: Int): [Worker!]!
}

input ProjectCreateManyOwnerCompanyInput {
  businessModel: businessModelEnum
  category: filteringCategories!
  createdAt: DateTime
  id: Int
  investmentStage: investmentStageEnum
  isApproved: Boolean
  mainGoal: mainGoalEnum
  moderateId: Int
  moderationChecked: Boolean
  name: String!
  posterId: Int
  projectMarket: projectMarketEnum
  projectSite: String
  projectStage: projectStageEnum
  projectType: projectTypeEnum
  salesType: salesTypeEnum
  shortDescription: String!
  technologyType: technologyTypeEnum
}

input ProjectCreateManyOwnerCompanyInputEnvelope {
  data: [ProjectCreateManyOwnerCompanyInput!]
  skipDuplicates: Boolean
}

input ProjectCreateManyPosterInput {
  businessModel: businessModelEnum
  category: filteringCategories!
  createdAt: DateTime
  id: Int
  investmentStage: investmentStageEnum
  isApproved: Boolean
  mainGoal: mainGoalEnum
  moderateId: Int
  moderationChecked: Boolean
  name: String!
  ownerCompanyID: Int!
  projectMarket: projectMarketEnum
  projectSite: String
  projectStage: projectStageEnum
  projectType: projectTypeEnum
  salesType: salesTypeEnum
  shortDescription: String!
  technologyType: technologyTypeEnum
}

input ProjectCreateManyPosterInputEnvelope {
  data: [ProjectCreateManyPosterInput!]
  skipDuplicates: Boolean
}

input ProjectCreateNestedManyWithoutOwnerCompanyInput {
  connect: [ProjectWhereUniqueInput!]
  connectOrCreate: [ProjectCreateOrConnectWithoutOwnerCompanyInput!]
  create: [ProjectCreateWithoutOwnerCompanyInput!]
  createMany: ProjectCreateManyOwnerCompanyInputEnvelope
}

input ProjectCreateNestedManyWithoutPlatformConfigShowedInput {
  connect: [ProjectWhereUniqueInput!]
  connectOrCreate: [ProjectCreateOrConnectWithoutPlatformConfigShowedInput!]
  create: [ProjectCreateWithoutPlatformConfigShowedInput!]
}

input ProjectCreateNestedManyWithoutPosterInput {
  connect: [ProjectWhereUniqueInput!]
  connectOrCreate: [ProjectCreateOrConnectWithoutPosterInput!]
  create: [ProjectCreateWithoutPosterInput!]
  createMany: ProjectCreateManyPosterInputEnvelope
}

input ProjectCreateNestedOneWithoutCrowdFundingInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutCrowdFundingInput
  create: ProjectCreateWithoutCrowdFundingInput
}

input ProjectCreateNestedOneWithoutDescriptionInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutDescriptionInput
  create: ProjectCreateWithoutDescriptionInput
}

input ProjectCreateNestedOneWithoutModerateInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutModerateInput
  create: ProjectCreateWithoutModerateInput
}

input ProjectCreateNestedOneWithoutPresentationMediaInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutPresentationMediaInput
  create: ProjectCreateWithoutPresentationMediaInput
}

input ProjectCreateNestedOneWithoutProjectMediaInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutProjectMediaInput
  create: ProjectCreateWithoutProjectMediaInput
}

input ProjectCreateNestedOneWithoutPublishedPostsInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutPublishedPostsInput
  create: ProjectCreateWithoutPublishedPostsInput
}

input ProjectCreateNestedOneWithoutWorkersInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutWorkersInput
  create: ProjectCreateWithoutWorkersInput
}

input ProjectCreateOrConnectWithoutCrowdFundingInput {
  create: ProjectCreateWithoutCrowdFundingInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateOrConnectWithoutDescriptionInput {
  create: ProjectCreateWithoutDescriptionInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateOrConnectWithoutModerateInput {
  create: ProjectCreateWithoutModerateInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateOrConnectWithoutOwnerCompanyInput {
  create: ProjectCreateWithoutOwnerCompanyInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateOrConnectWithoutPlatformConfigShowedInput {
  create: ProjectCreateWithoutPlatformConfigShowedInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateOrConnectWithoutPosterInput {
  create: ProjectCreateWithoutPosterInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateOrConnectWithoutPresentationMediaInput {
  create: ProjectCreateWithoutPresentationMediaInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateOrConnectWithoutProjectMediaInput {
  create: ProjectCreateWithoutProjectMediaInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateOrConnectWithoutPublishedPostsInput {
  create: ProjectCreateWithoutPublishedPostsInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateOrConnectWithoutWorkersInput {
  create: ProjectCreateWithoutWorkersInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateWithoutCrowdFundingInput {
  businessModel: businessModelEnum
  category: filteringCategories!
  createdAt: DateTime
  description: ArticleCreateNestedOneWithoutProjectInput
  investmentStage: investmentStageEnum
  isApproved: Boolean
  mainGoal: mainGoalEnum
  metrics: ProjectMetricsCreateNestedOneWithoutProjectInput
  moderate: ModerationCreateNestedOneWithoutProjectInput
  moderationChecked: Boolean
  name: String!
  ownerCompany: CompanyCreateNestedOneWithoutProjectsInput!
  platformConfigShowed: PlatformConfigCreateNestedManyWithoutProjectsShownOnLandingInput
  poster: MediaCreateNestedOneWithoutProjectPosterInput
  presentationMedia: MediaCreateNestedManyWithoutProjectMediaInput
  projectMarket: projectMarketEnum
  projectMedia: MediaCreateNestedManyWithoutProjectDescripitonInput
  projectSite: String
  projectStage: projectStageEnum
  projectType: projectTypeEnum
  publishedPosts: PostCreateNestedManyWithoutProjectInput
  salesType: salesTypeEnum
  shortDescription: String!
  technologyType: technologyTypeEnum
  workers: WorkerCreateNestedManyWithoutProjectInput
}

input ProjectCreateWithoutDescriptionInput {
  businessModel: businessModelEnum
  category: filteringCategories!
  createdAt: DateTime
  crowdFunding: CrowdFundingCreateNestedManyWithoutProjectInput
  investmentStage: investmentStageEnum
  isApproved: Boolean
  mainGoal: mainGoalEnum
  metrics: ProjectMetricsCreateNestedOneWithoutProjectInput
  moderate: ModerationCreateNestedOneWithoutProjectInput
  moderationChecked: Boolean
  name: String!
  ownerCompany: CompanyCreateNestedOneWithoutProjectsInput!
  platformConfigShowed: PlatformConfigCreateNestedManyWithoutProjectsShownOnLandingInput
  poster: MediaCreateNestedOneWithoutProjectPosterInput
  presentationMedia: MediaCreateNestedManyWithoutProjectMediaInput
  projectMarket: projectMarketEnum
  projectMedia: MediaCreateNestedManyWithoutProjectDescripitonInput
  projectSite: String
  projectStage: projectStageEnum
  projectType: projectTypeEnum
  publishedPosts: PostCreateNestedManyWithoutProjectInput
  salesType: salesTypeEnum
  shortDescription: String!
  technologyType: technologyTypeEnum
  workers: WorkerCreateNestedManyWithoutProjectInput
}

input ProjectCreateWithoutModerateInput {
  businessModel: businessModelEnum
  category: filteringCategories!
  createdAt: DateTime
  crowdFunding: CrowdFundingCreateNestedManyWithoutProjectInput
  description: ArticleCreateNestedOneWithoutProjectInput
  investmentStage: investmentStageEnum
  isApproved: Boolean
  mainGoal: mainGoalEnum
  metrics: ProjectMetricsCreateNestedOneWithoutProjectInput
  moderationChecked: Boolean
  name: String!
  ownerCompany: CompanyCreateNestedOneWithoutProjectsInput!
  platformConfigShowed: PlatformConfigCreateNestedManyWithoutProjectsShownOnLandingInput
  poster: MediaCreateNestedOneWithoutProjectPosterInput
  presentationMedia: MediaCreateNestedManyWithoutProjectMediaInput
  projectMarket: projectMarketEnum
  projectMedia: MediaCreateNestedManyWithoutProjectDescripitonInput
  projectSite: String
  projectStage: projectStageEnum
  projectType: projectTypeEnum
  publishedPosts: PostCreateNestedManyWithoutProjectInput
  salesType: salesTypeEnum
  shortDescription: String!
  technologyType: technologyTypeEnum
  workers: WorkerCreateNestedManyWithoutProjectInput
}

input ProjectCreateWithoutOwnerCompanyInput {
  businessModel: businessModelEnum
  category: filteringCategories!
  createdAt: DateTime
  crowdFunding: CrowdFundingCreateNestedManyWithoutProjectInput
  description: ArticleCreateNestedOneWithoutProjectInput
  investmentStage: investmentStageEnum
  isApproved: Boolean
  mainGoal: mainGoalEnum
  metrics: ProjectMetricsCreateNestedOneWithoutProjectInput
  moderate: ModerationCreateNestedOneWithoutProjectInput
  moderationChecked: Boolean
  name: String!
  platformConfigShowed: PlatformConfigCreateNestedManyWithoutProjectsShownOnLandingInput
  poster: MediaCreateNestedOneWithoutProjectPosterInput
  presentationMedia: MediaCreateNestedManyWithoutProjectMediaInput
  projectMarket: projectMarketEnum
  projectMedia: MediaCreateNestedManyWithoutProjectDescripitonInput
  projectSite: String
  projectStage: projectStageEnum
  projectType: projectTypeEnum
  publishedPosts: PostCreateNestedManyWithoutProjectInput
  salesType: salesTypeEnum
  shortDescription: String!
  technologyType: technologyTypeEnum
  workers: WorkerCreateNestedManyWithoutProjectInput
}

input ProjectCreateWithoutPlatformConfigShowedInput {
  businessModel: businessModelEnum
  category: filteringCategories!
  createdAt: DateTime
  crowdFunding: CrowdFundingCreateNestedManyWithoutProjectInput
  description: ArticleCreateNestedOneWithoutProjectInput
  investmentStage: investmentStageEnum
  isApproved: Boolean
  mainGoal: mainGoalEnum
  metrics: ProjectMetricsCreateNestedOneWithoutProjectInput
  moderate: ModerationCreateNestedOneWithoutProjectInput
  moderationChecked: Boolean
  name: String!
  ownerCompany: CompanyCreateNestedOneWithoutProjectsInput!
  poster: MediaCreateNestedOneWithoutProjectPosterInput
  presentationMedia: MediaCreateNestedManyWithoutProjectMediaInput
  projectMarket: projectMarketEnum
  projectMedia: MediaCreateNestedManyWithoutProjectDescripitonInput
  projectSite: String
  projectStage: projectStageEnum
  projectType: projectTypeEnum
  publishedPosts: PostCreateNestedManyWithoutProjectInput
  salesType: salesTypeEnum
  shortDescription: String!
  technologyType: technologyTypeEnum
  workers: WorkerCreateNestedManyWithoutProjectInput
}

input ProjectCreateWithoutPosterInput {
  businessModel: businessModelEnum
  category: filteringCategories!
  createdAt: DateTime
  crowdFunding: CrowdFundingCreateNestedManyWithoutProjectInput
  description: ArticleCreateNestedOneWithoutProjectInput
  investmentStage: investmentStageEnum
  isApproved: Boolean
  mainGoal: mainGoalEnum
  metrics: ProjectMetricsCreateNestedOneWithoutProjectInput
  moderate: ModerationCreateNestedOneWithoutProjectInput
  moderationChecked: Boolean
  name: String!
  ownerCompany: CompanyCreateNestedOneWithoutProjectsInput!
  platformConfigShowed: PlatformConfigCreateNestedManyWithoutProjectsShownOnLandingInput
  presentationMedia: MediaCreateNestedManyWithoutProjectMediaInput
  projectMarket: projectMarketEnum
  projectMedia: MediaCreateNestedManyWithoutProjectDescripitonInput
  projectSite: String
  projectStage: projectStageEnum
  projectType: projectTypeEnum
  publishedPosts: PostCreateNestedManyWithoutProjectInput
  salesType: salesTypeEnum
  shortDescription: String!
  technologyType: technologyTypeEnum
  workers: WorkerCreateNestedManyWithoutProjectInput
}

input ProjectCreateWithoutPresentationMediaInput {
  businessModel: businessModelEnum
  category: filteringCategories!
  createdAt: DateTime
  crowdFunding: CrowdFundingCreateNestedManyWithoutProjectInput
  description: ArticleCreateNestedOneWithoutProjectInput
  investmentStage: investmentStageEnum
  isApproved: Boolean
  mainGoal: mainGoalEnum
  metrics: ProjectMetricsCreateNestedOneWithoutProjectInput
  moderate: ModerationCreateNestedOneWithoutProjectInput
  moderationChecked: Boolean
  name: String!
  ownerCompany: CompanyCreateNestedOneWithoutProjectsInput!
  platformConfigShowed: PlatformConfigCreateNestedManyWithoutProjectsShownOnLandingInput
  poster: MediaCreateNestedOneWithoutProjectPosterInput
  projectMarket: projectMarketEnum
  projectMedia: MediaCreateNestedManyWithoutProjectDescripitonInput
  projectSite: String
  projectStage: projectStageEnum
  projectType: projectTypeEnum
  publishedPosts: PostCreateNestedManyWithoutProjectInput
  salesType: salesTypeEnum
  shortDescription: String!
  technologyType: technologyTypeEnum
  workers: WorkerCreateNestedManyWithoutProjectInput
}

input ProjectCreateWithoutProjectMediaInput {
  businessModel: businessModelEnum
  category: filteringCategories!
  createdAt: DateTime
  crowdFunding: CrowdFundingCreateNestedManyWithoutProjectInput
  description: ArticleCreateNestedOneWithoutProjectInput
  investmentStage: investmentStageEnum
  isApproved: Boolean
  mainGoal: mainGoalEnum
  metrics: ProjectMetricsCreateNestedOneWithoutProjectInput
  moderate: ModerationCreateNestedOneWithoutProjectInput
  moderationChecked: Boolean
  name: String!
  ownerCompany: CompanyCreateNestedOneWithoutProjectsInput!
  platformConfigShowed: PlatformConfigCreateNestedManyWithoutProjectsShownOnLandingInput
  poster: MediaCreateNestedOneWithoutProjectPosterInput
  presentationMedia: MediaCreateNestedManyWithoutProjectMediaInput
  projectMarket: projectMarketEnum
  projectSite: String
  projectStage: projectStageEnum
  projectType: projectTypeEnum
  publishedPosts: PostCreateNestedManyWithoutProjectInput
  salesType: salesTypeEnum
  shortDescription: String!
  technologyType: technologyTypeEnum
  workers: WorkerCreateNestedManyWithoutProjectInput
}

input ProjectCreateWithoutPublishedPostsInput {
  businessModel: businessModelEnum
  category: filteringCategories!
  createdAt: DateTime
  crowdFunding: CrowdFundingCreateNestedManyWithoutProjectInput
  description: ArticleCreateNestedOneWithoutProjectInput
  investmentStage: investmentStageEnum
  isApproved: Boolean
  mainGoal: mainGoalEnum
  metrics: ProjectMetricsCreateNestedOneWithoutProjectInput
  moderate: ModerationCreateNestedOneWithoutProjectInput
  moderationChecked: Boolean
  name: String!
  ownerCompany: CompanyCreateNestedOneWithoutProjectsInput!
  platformConfigShowed: PlatformConfigCreateNestedManyWithoutProjectsShownOnLandingInput
  poster: MediaCreateNestedOneWithoutProjectPosterInput
  presentationMedia: MediaCreateNestedManyWithoutProjectMediaInput
  projectMarket: projectMarketEnum
  projectMedia: MediaCreateNestedManyWithoutProjectDescripitonInput
  projectSite: String
  projectStage: projectStageEnum
  projectType: projectTypeEnum
  salesType: salesTypeEnum
  shortDescription: String!
  technologyType: technologyTypeEnum
  workers: WorkerCreateNestedManyWithoutProjectInput
}

input ProjectCreateWithoutWorkersInput {
  businessModel: businessModelEnum
  category: filteringCategories!
  createdAt: DateTime
  crowdFunding: CrowdFundingCreateNestedManyWithoutProjectInput
  description: ArticleCreateNestedOneWithoutProjectInput
  investmentStage: investmentStageEnum
  isApproved: Boolean
  mainGoal: mainGoalEnum
  metrics: ProjectMetricsCreateNestedOneWithoutProjectInput
  moderate: ModerationCreateNestedOneWithoutProjectInput
  moderationChecked: Boolean
  name: String!
  ownerCompany: CompanyCreateNestedOneWithoutProjectsInput!
  platformConfigShowed: PlatformConfigCreateNestedManyWithoutProjectsShownOnLandingInput
  poster: MediaCreateNestedOneWithoutProjectPosterInput
  presentationMedia: MediaCreateNestedManyWithoutProjectMediaInput
  projectMarket: projectMarketEnum
  projectMedia: MediaCreateNestedManyWithoutProjectDescripitonInput
  projectSite: String
  projectStage: projectStageEnum
  projectType: projectTypeEnum
  publishedPosts: PostCreateNestedManyWithoutProjectInput
  salesType: salesTypeEnum
  shortDescription: String!
  technologyType: technologyTypeEnum
}

input ProjectListRelationFilter {
  every: ProjectWhereInput
  none: ProjectWhereInput
  some: ProjectWhereInput
}

type ProjectMetrics {
  earned: Float!
  id: Int!
  investmentsGot: Float!
  project: Project!
  workersCount: Int!
}

input ProjectMetricsCreateNestedOneWithoutProjectInput {
  connect: ProjectMetricsWhereUniqueInput
  connectOrCreate: ProjectMetricsCreateOrConnectWithoutProjectInput
  create: ProjectMetricsCreateWithoutProjectInput
}

input ProjectMetricsCreateOrConnectWithoutProjectInput {
  create: ProjectMetricsCreateWithoutProjectInput!
  where: ProjectMetricsWhereUniqueInput!
}

input ProjectMetricsCreateWithoutProjectInput {
  earned: Float!
  investmentsGot: Float!
  workersCount: Int!
}

input ProjectMetricsOrderByWithRelationInput {
  earned: SortOrder
  id: SortOrder
  investmentsGot: SortOrder
  project: ProjectOrderByWithRelationInput
  projectID: SortOrder
  workersCount: SortOrder
}

input ProjectMetricsUpdateOneWithoutProjectInput {
  connect: ProjectMetricsWhereUniqueInput
  connectOrCreate: ProjectMetricsCreateOrConnectWithoutProjectInput
  create: ProjectMetricsCreateWithoutProjectInput
  delete: Boolean
  disconnect: Boolean
  update: ProjectMetricsUpdateWithoutProjectInput
  upsert: ProjectMetricsUpsertWithoutProjectInput
}

input ProjectMetricsUpdateWithoutProjectInput {
  earned: FloatFieldUpdateOperationsInput
  investmentsGot: FloatFieldUpdateOperationsInput
  workersCount: IntFieldUpdateOperationsInput
}

input ProjectMetricsUpsertWithoutProjectInput {
  create: ProjectMetricsCreateWithoutProjectInput!
  update: ProjectMetricsUpdateWithoutProjectInput!
}

input ProjectMetricsWhereInput {
  AND: [ProjectMetricsWhereInput!]
  NOT: [ProjectMetricsWhereInput!]
  OR: [ProjectMetricsWhereInput!]
  earned: FloatFilter
  id: IntFilter
  investmentsGot: FloatFilter
  project: ProjectWhereInput
  projectID: IntFilter
  workersCount: IntFilter
}

input ProjectMetricsWhereUniqueInput {
  id: Int
  projectID: Int
}

input ProjectOrderByRelationAggregateInput {
  _count: SortOrder
}

input ProjectOrderByWithRelationInput {
  businessModel: SortOrder
  category: SortOrder
  createdAt: SortOrder
  crowdFunding: CrowdFundingOrderByRelationAggregateInput
  description: ArticleOrderByWithRelationInput
  id: SortOrder
  investmentStage: SortOrder
  isApproved: SortOrder
  mainGoal: SortOrder
  metrics: ProjectMetricsOrderByWithRelationInput
  moderate: ModerationOrderByWithRelationInput
  moderateId: SortOrder
  moderationChecked: SortOrder
  name: SortOrder
  ownerCompany: CompanyOrderByWithRelationInput
  ownerCompanyID: SortOrder
  platformConfigShowed: PlatformConfigOrderByRelationAggregateInput
  poster: MediaOrderByWithRelationInput
  posterId: SortOrder
  presentationMedia: MediaOrderByRelationAggregateInput
  projectMarket: SortOrder
  projectMedia: MediaOrderByRelationAggregateInput
  projectSite: SortOrder
  projectStage: SortOrder
  projectType: SortOrder
  publishedPosts: PostOrderByRelationAggregateInput
  salesType: SortOrder
  shortDescription: SortOrder
  technologyType: SortOrder
  workers: WorkerOrderByRelationAggregateInput
}

input ProjectScalarWhereInput {
  AND: [ProjectScalarWhereInput!]
  NOT: [ProjectScalarWhereInput!]
  OR: [ProjectScalarWhereInput!]
  businessModel: EnumbusinessModelEnumNullableFilter
  category: EnumfilteringCategoriesFilter
  createdAt: DateTimeFilter
  id: IntFilter
  investmentStage: EnuminvestmentStageEnumNullableFilter
  isApproved: BoolNullableFilter
  mainGoal: EnummainGoalEnumNullableFilter
  moderateId: IntNullableFilter
  moderationChecked: BoolNullableFilter
  name: StringFilter
  ownerCompanyID: IntFilter
  posterId: IntNullableFilter
  projectMarket: EnumprojectMarketEnumNullableFilter
  projectSite: StringNullableFilter
  projectStage: EnumprojectStageEnumNullableFilter
  projectType: EnumprojectTypeEnumNullableFilter
  salesType: EnumsalesTypeEnumNullableFilter
  shortDescription: StringFilter
  technologyType: EnumtechnologyTypeEnumNullableFilter
}

input ProjectUpdateManyMutationInput {
  businessModel: NullableEnumbusinessModelEnumFieldUpdateOperationsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  investmentStage: NullableEnuminvestmentStageEnumFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  mainGoal: NullableEnummainGoalEnumFieldUpdateOperationsInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  projectMarket: NullableEnumprojectMarketEnumFieldUpdateOperationsInput
  projectSite: NullableStringFieldUpdateOperationsInput
  projectStage: NullableEnumprojectStageEnumFieldUpdateOperationsInput
  projectType: NullableEnumprojectTypeEnumFieldUpdateOperationsInput
  salesType: NullableEnumsalesTypeEnumFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  technologyType: NullableEnumtechnologyTypeEnumFieldUpdateOperationsInput
}

input ProjectUpdateManyWithWhereWithoutOwnerCompanyInput {
  data: ProjectUpdateManyMutationInput!
  where: ProjectScalarWhereInput!
}

input ProjectUpdateManyWithWhereWithoutPlatformConfigShowedInput {
  data: ProjectUpdateManyMutationInput!
  where: ProjectScalarWhereInput!
}

input ProjectUpdateManyWithWhereWithoutPosterInput {
  data: ProjectUpdateManyMutationInput!
  where: ProjectScalarWhereInput!
}

input ProjectUpdateManyWithoutOwnerCompanyInput {
  connect: [ProjectWhereUniqueInput!]
  connectOrCreate: [ProjectCreateOrConnectWithoutOwnerCompanyInput!]
  create: [ProjectCreateWithoutOwnerCompanyInput!]
  createMany: ProjectCreateManyOwnerCompanyInputEnvelope
  delete: [ProjectWhereUniqueInput!]
  deleteMany: [ProjectScalarWhereInput!]
  disconnect: [ProjectWhereUniqueInput!]
  set: [ProjectWhereUniqueInput!]
  update: [ProjectUpdateWithWhereUniqueWithoutOwnerCompanyInput!]
  updateMany: [ProjectUpdateManyWithWhereWithoutOwnerCompanyInput!]
  upsert: [ProjectUpsertWithWhereUniqueWithoutOwnerCompanyInput!]
}

input ProjectUpdateManyWithoutPlatformConfigShowedInput {
  connect: [ProjectWhereUniqueInput!]
  connectOrCreate: [ProjectCreateOrConnectWithoutPlatformConfigShowedInput!]
  create: [ProjectCreateWithoutPlatformConfigShowedInput!]
  delete: [ProjectWhereUniqueInput!]
  deleteMany: [ProjectScalarWhereInput!]
  disconnect: [ProjectWhereUniqueInput!]
  set: [ProjectWhereUniqueInput!]
  update: [ProjectUpdateWithWhereUniqueWithoutPlatformConfigShowedInput!]
  updateMany: [ProjectUpdateManyWithWhereWithoutPlatformConfigShowedInput!]
  upsert: [ProjectUpsertWithWhereUniqueWithoutPlatformConfigShowedInput!]
}

input ProjectUpdateManyWithoutPosterInput {
  connect: [ProjectWhereUniqueInput!]
  connectOrCreate: [ProjectCreateOrConnectWithoutPosterInput!]
  create: [ProjectCreateWithoutPosterInput!]
  createMany: ProjectCreateManyPosterInputEnvelope
  delete: [ProjectWhereUniqueInput!]
  deleteMany: [ProjectScalarWhereInput!]
  disconnect: [ProjectWhereUniqueInput!]
  set: [ProjectWhereUniqueInput!]
  update: [ProjectUpdateWithWhereUniqueWithoutPosterInput!]
  updateMany: [ProjectUpdateManyWithWhereWithoutPosterInput!]
  upsert: [ProjectUpsertWithWhereUniqueWithoutPosterInput!]
}

input ProjectUpdateOneRequiredWithoutCrowdFundingInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutCrowdFundingInput
  create: ProjectCreateWithoutCrowdFundingInput
  update: ProjectUpdateWithoutCrowdFundingInput
  upsert: ProjectUpsertWithoutCrowdFundingInput
}

input ProjectUpdateOneRequiredWithoutWorkersInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutWorkersInput
  create: ProjectCreateWithoutWorkersInput
  update: ProjectUpdateWithoutWorkersInput
  upsert: ProjectUpsertWithoutWorkersInput
}

input ProjectUpdateOneWithoutDescriptionInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutDescriptionInput
  create: ProjectCreateWithoutDescriptionInput
  delete: Boolean
  disconnect: Boolean
  update: ProjectUpdateWithoutDescriptionInput
  upsert: ProjectUpsertWithoutDescriptionInput
}

input ProjectUpdateOneWithoutModerateInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutModerateInput
  create: ProjectCreateWithoutModerateInput
  delete: Boolean
  disconnect: Boolean
  update: ProjectUpdateWithoutModerateInput
  upsert: ProjectUpsertWithoutModerateInput
}

input ProjectUpdateOneWithoutPresentationMediaInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutPresentationMediaInput
  create: ProjectCreateWithoutPresentationMediaInput
  delete: Boolean
  disconnect: Boolean
  update: ProjectUpdateWithoutPresentationMediaInput
  upsert: ProjectUpsertWithoutPresentationMediaInput
}

input ProjectUpdateOneWithoutProjectMediaInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutProjectMediaInput
  create: ProjectCreateWithoutProjectMediaInput
  delete: Boolean
  disconnect: Boolean
  update: ProjectUpdateWithoutProjectMediaInput
  upsert: ProjectUpsertWithoutProjectMediaInput
}

input ProjectUpdateOneWithoutPublishedPostsInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutPublishedPostsInput
  create: ProjectCreateWithoutPublishedPostsInput
  delete: Boolean
  disconnect: Boolean
  update: ProjectUpdateWithoutPublishedPostsInput
  upsert: ProjectUpsertWithoutPublishedPostsInput
}

input ProjectUpdateWithWhereUniqueWithoutOwnerCompanyInput {
  data: ProjectUpdateWithoutOwnerCompanyInput!
  where: ProjectWhereUniqueInput!
}

input ProjectUpdateWithWhereUniqueWithoutPlatformConfigShowedInput {
  data: ProjectUpdateWithoutPlatformConfigShowedInput!
  where: ProjectWhereUniqueInput!
}

input ProjectUpdateWithWhereUniqueWithoutPosterInput {
  data: ProjectUpdateWithoutPosterInput!
  where: ProjectWhereUniqueInput!
}

input ProjectUpdateWithoutCrowdFundingInput {
  businessModel: NullableEnumbusinessModelEnumFieldUpdateOperationsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: ArticleUpdateOneWithoutProjectInput
  investmentStage: NullableEnuminvestmentStageEnumFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  mainGoal: NullableEnummainGoalEnumFieldUpdateOperationsInput
  metrics: ProjectMetricsUpdateOneWithoutProjectInput
  moderate: ModerationUpdateOneWithoutProjectInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  ownerCompany: CompanyUpdateOneRequiredWithoutProjectsInput
  platformConfigShowed: PlatformConfigUpdateManyWithoutProjectsShownOnLandingInput
  poster: MediaUpdateOneWithoutProjectPosterInput
  presentationMedia: MediaUpdateManyWithoutProjectMediaInput
  projectMarket: NullableEnumprojectMarketEnumFieldUpdateOperationsInput
  projectMedia: MediaUpdateManyWithoutProjectDescripitonInput
  projectSite: NullableStringFieldUpdateOperationsInput
  projectStage: NullableEnumprojectStageEnumFieldUpdateOperationsInput
  projectType: NullableEnumprojectTypeEnumFieldUpdateOperationsInput
  publishedPosts: PostUpdateManyWithoutProjectInput
  salesType: NullableEnumsalesTypeEnumFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  technologyType: NullableEnumtechnologyTypeEnumFieldUpdateOperationsInput
  workers: WorkerUpdateManyWithoutProjectInput
}

input ProjectUpdateWithoutDescriptionInput {
  businessModel: NullableEnumbusinessModelEnumFieldUpdateOperationsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  crowdFunding: CrowdFundingUpdateManyWithoutProjectInput
  investmentStage: NullableEnuminvestmentStageEnumFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  mainGoal: NullableEnummainGoalEnumFieldUpdateOperationsInput
  metrics: ProjectMetricsUpdateOneWithoutProjectInput
  moderate: ModerationUpdateOneWithoutProjectInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  ownerCompany: CompanyUpdateOneRequiredWithoutProjectsInput
  platformConfigShowed: PlatformConfigUpdateManyWithoutProjectsShownOnLandingInput
  poster: MediaUpdateOneWithoutProjectPosterInput
  presentationMedia: MediaUpdateManyWithoutProjectMediaInput
  projectMarket: NullableEnumprojectMarketEnumFieldUpdateOperationsInput
  projectMedia: MediaUpdateManyWithoutProjectDescripitonInput
  projectSite: NullableStringFieldUpdateOperationsInput
  projectStage: NullableEnumprojectStageEnumFieldUpdateOperationsInput
  projectType: NullableEnumprojectTypeEnumFieldUpdateOperationsInput
  publishedPosts: PostUpdateManyWithoutProjectInput
  salesType: NullableEnumsalesTypeEnumFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  technologyType: NullableEnumtechnologyTypeEnumFieldUpdateOperationsInput
  workers: WorkerUpdateManyWithoutProjectInput
}

input ProjectUpdateWithoutModerateInput {
  businessModel: NullableEnumbusinessModelEnumFieldUpdateOperationsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  crowdFunding: CrowdFundingUpdateManyWithoutProjectInput
  description: ArticleUpdateOneWithoutProjectInput
  investmentStage: NullableEnuminvestmentStageEnumFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  mainGoal: NullableEnummainGoalEnumFieldUpdateOperationsInput
  metrics: ProjectMetricsUpdateOneWithoutProjectInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  ownerCompany: CompanyUpdateOneRequiredWithoutProjectsInput
  platformConfigShowed: PlatformConfigUpdateManyWithoutProjectsShownOnLandingInput
  poster: MediaUpdateOneWithoutProjectPosterInput
  presentationMedia: MediaUpdateManyWithoutProjectMediaInput
  projectMarket: NullableEnumprojectMarketEnumFieldUpdateOperationsInput
  projectMedia: MediaUpdateManyWithoutProjectDescripitonInput
  projectSite: NullableStringFieldUpdateOperationsInput
  projectStage: NullableEnumprojectStageEnumFieldUpdateOperationsInput
  projectType: NullableEnumprojectTypeEnumFieldUpdateOperationsInput
  publishedPosts: PostUpdateManyWithoutProjectInput
  salesType: NullableEnumsalesTypeEnumFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  technologyType: NullableEnumtechnologyTypeEnumFieldUpdateOperationsInput
  workers: WorkerUpdateManyWithoutProjectInput
}

input ProjectUpdateWithoutOwnerCompanyInput {
  businessModel: NullableEnumbusinessModelEnumFieldUpdateOperationsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  crowdFunding: CrowdFundingUpdateManyWithoutProjectInput
  description: ArticleUpdateOneWithoutProjectInput
  investmentStage: NullableEnuminvestmentStageEnumFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  mainGoal: NullableEnummainGoalEnumFieldUpdateOperationsInput
  metrics: ProjectMetricsUpdateOneWithoutProjectInput
  moderate: ModerationUpdateOneWithoutProjectInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  platformConfigShowed: PlatformConfigUpdateManyWithoutProjectsShownOnLandingInput
  poster: MediaUpdateOneWithoutProjectPosterInput
  presentationMedia: MediaUpdateManyWithoutProjectMediaInput
  projectMarket: NullableEnumprojectMarketEnumFieldUpdateOperationsInput
  projectMedia: MediaUpdateManyWithoutProjectDescripitonInput
  projectSite: NullableStringFieldUpdateOperationsInput
  projectStage: NullableEnumprojectStageEnumFieldUpdateOperationsInput
  projectType: NullableEnumprojectTypeEnumFieldUpdateOperationsInput
  publishedPosts: PostUpdateManyWithoutProjectInput
  salesType: NullableEnumsalesTypeEnumFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  technologyType: NullableEnumtechnologyTypeEnumFieldUpdateOperationsInput
  workers: WorkerUpdateManyWithoutProjectInput
}

input ProjectUpdateWithoutPlatformConfigShowedInput {
  businessModel: NullableEnumbusinessModelEnumFieldUpdateOperationsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  crowdFunding: CrowdFundingUpdateManyWithoutProjectInput
  description: ArticleUpdateOneWithoutProjectInput
  investmentStage: NullableEnuminvestmentStageEnumFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  mainGoal: NullableEnummainGoalEnumFieldUpdateOperationsInput
  metrics: ProjectMetricsUpdateOneWithoutProjectInput
  moderate: ModerationUpdateOneWithoutProjectInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  ownerCompany: CompanyUpdateOneRequiredWithoutProjectsInput
  poster: MediaUpdateOneWithoutProjectPosterInput
  presentationMedia: MediaUpdateManyWithoutProjectMediaInput
  projectMarket: NullableEnumprojectMarketEnumFieldUpdateOperationsInput
  projectMedia: MediaUpdateManyWithoutProjectDescripitonInput
  projectSite: NullableStringFieldUpdateOperationsInput
  projectStage: NullableEnumprojectStageEnumFieldUpdateOperationsInput
  projectType: NullableEnumprojectTypeEnumFieldUpdateOperationsInput
  publishedPosts: PostUpdateManyWithoutProjectInput
  salesType: NullableEnumsalesTypeEnumFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  technologyType: NullableEnumtechnologyTypeEnumFieldUpdateOperationsInput
  workers: WorkerUpdateManyWithoutProjectInput
}

input ProjectUpdateWithoutPosterInput {
  businessModel: NullableEnumbusinessModelEnumFieldUpdateOperationsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  crowdFunding: CrowdFundingUpdateManyWithoutProjectInput
  description: ArticleUpdateOneWithoutProjectInput
  investmentStage: NullableEnuminvestmentStageEnumFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  mainGoal: NullableEnummainGoalEnumFieldUpdateOperationsInput
  metrics: ProjectMetricsUpdateOneWithoutProjectInput
  moderate: ModerationUpdateOneWithoutProjectInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  ownerCompany: CompanyUpdateOneRequiredWithoutProjectsInput
  platformConfigShowed: PlatformConfigUpdateManyWithoutProjectsShownOnLandingInput
  presentationMedia: MediaUpdateManyWithoutProjectMediaInput
  projectMarket: NullableEnumprojectMarketEnumFieldUpdateOperationsInput
  projectMedia: MediaUpdateManyWithoutProjectDescripitonInput
  projectSite: NullableStringFieldUpdateOperationsInput
  projectStage: NullableEnumprojectStageEnumFieldUpdateOperationsInput
  projectType: NullableEnumprojectTypeEnumFieldUpdateOperationsInput
  publishedPosts: PostUpdateManyWithoutProjectInput
  salesType: NullableEnumsalesTypeEnumFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  technologyType: NullableEnumtechnologyTypeEnumFieldUpdateOperationsInput
  workers: WorkerUpdateManyWithoutProjectInput
}

input ProjectUpdateWithoutPresentationMediaInput {
  businessModel: NullableEnumbusinessModelEnumFieldUpdateOperationsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  crowdFunding: CrowdFundingUpdateManyWithoutProjectInput
  description: ArticleUpdateOneWithoutProjectInput
  investmentStage: NullableEnuminvestmentStageEnumFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  mainGoal: NullableEnummainGoalEnumFieldUpdateOperationsInput
  metrics: ProjectMetricsUpdateOneWithoutProjectInput
  moderate: ModerationUpdateOneWithoutProjectInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  ownerCompany: CompanyUpdateOneRequiredWithoutProjectsInput
  platformConfigShowed: PlatformConfigUpdateManyWithoutProjectsShownOnLandingInput
  poster: MediaUpdateOneWithoutProjectPosterInput
  projectMarket: NullableEnumprojectMarketEnumFieldUpdateOperationsInput
  projectMedia: MediaUpdateManyWithoutProjectDescripitonInput
  projectSite: NullableStringFieldUpdateOperationsInput
  projectStage: NullableEnumprojectStageEnumFieldUpdateOperationsInput
  projectType: NullableEnumprojectTypeEnumFieldUpdateOperationsInput
  publishedPosts: PostUpdateManyWithoutProjectInput
  salesType: NullableEnumsalesTypeEnumFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  technologyType: NullableEnumtechnologyTypeEnumFieldUpdateOperationsInput
  workers: WorkerUpdateManyWithoutProjectInput
}

input ProjectUpdateWithoutProjectMediaInput {
  businessModel: NullableEnumbusinessModelEnumFieldUpdateOperationsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  crowdFunding: CrowdFundingUpdateManyWithoutProjectInput
  description: ArticleUpdateOneWithoutProjectInput
  investmentStage: NullableEnuminvestmentStageEnumFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  mainGoal: NullableEnummainGoalEnumFieldUpdateOperationsInput
  metrics: ProjectMetricsUpdateOneWithoutProjectInput
  moderate: ModerationUpdateOneWithoutProjectInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  ownerCompany: CompanyUpdateOneRequiredWithoutProjectsInput
  platformConfigShowed: PlatformConfigUpdateManyWithoutProjectsShownOnLandingInput
  poster: MediaUpdateOneWithoutProjectPosterInput
  presentationMedia: MediaUpdateManyWithoutProjectMediaInput
  projectMarket: NullableEnumprojectMarketEnumFieldUpdateOperationsInput
  projectSite: NullableStringFieldUpdateOperationsInput
  projectStage: NullableEnumprojectStageEnumFieldUpdateOperationsInput
  projectType: NullableEnumprojectTypeEnumFieldUpdateOperationsInput
  publishedPosts: PostUpdateManyWithoutProjectInput
  salesType: NullableEnumsalesTypeEnumFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  technologyType: NullableEnumtechnologyTypeEnumFieldUpdateOperationsInput
  workers: WorkerUpdateManyWithoutProjectInput
}

input ProjectUpdateWithoutPublishedPostsInput {
  businessModel: NullableEnumbusinessModelEnumFieldUpdateOperationsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  crowdFunding: CrowdFundingUpdateManyWithoutProjectInput
  description: ArticleUpdateOneWithoutProjectInput
  investmentStage: NullableEnuminvestmentStageEnumFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  mainGoal: NullableEnummainGoalEnumFieldUpdateOperationsInput
  metrics: ProjectMetricsUpdateOneWithoutProjectInput
  moderate: ModerationUpdateOneWithoutProjectInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  ownerCompany: CompanyUpdateOneRequiredWithoutProjectsInput
  platformConfigShowed: PlatformConfigUpdateManyWithoutProjectsShownOnLandingInput
  poster: MediaUpdateOneWithoutProjectPosterInput
  presentationMedia: MediaUpdateManyWithoutProjectMediaInput
  projectMarket: NullableEnumprojectMarketEnumFieldUpdateOperationsInput
  projectMedia: MediaUpdateManyWithoutProjectDescripitonInput
  projectSite: NullableStringFieldUpdateOperationsInput
  projectStage: NullableEnumprojectStageEnumFieldUpdateOperationsInput
  projectType: NullableEnumprojectTypeEnumFieldUpdateOperationsInput
  salesType: NullableEnumsalesTypeEnumFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  technologyType: NullableEnumtechnologyTypeEnumFieldUpdateOperationsInput
  workers: WorkerUpdateManyWithoutProjectInput
}

input ProjectUpdateWithoutWorkersInput {
  businessModel: NullableEnumbusinessModelEnumFieldUpdateOperationsInput
  category: EnumfilteringCategoriesFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  crowdFunding: CrowdFundingUpdateManyWithoutProjectInput
  description: ArticleUpdateOneWithoutProjectInput
  investmentStage: NullableEnuminvestmentStageEnumFieldUpdateOperationsInput
  isApproved: NullableBoolFieldUpdateOperationsInput
  mainGoal: NullableEnummainGoalEnumFieldUpdateOperationsInput
  metrics: ProjectMetricsUpdateOneWithoutProjectInput
  moderate: ModerationUpdateOneWithoutProjectInput
  moderationChecked: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  ownerCompany: CompanyUpdateOneRequiredWithoutProjectsInput
  platformConfigShowed: PlatformConfigUpdateManyWithoutProjectsShownOnLandingInput
  poster: MediaUpdateOneWithoutProjectPosterInput
  presentationMedia: MediaUpdateManyWithoutProjectMediaInput
  projectMarket: NullableEnumprojectMarketEnumFieldUpdateOperationsInput
  projectMedia: MediaUpdateManyWithoutProjectDescripitonInput
  projectSite: NullableStringFieldUpdateOperationsInput
  projectStage: NullableEnumprojectStageEnumFieldUpdateOperationsInput
  projectType: NullableEnumprojectTypeEnumFieldUpdateOperationsInput
  publishedPosts: PostUpdateManyWithoutProjectInput
  salesType: NullableEnumsalesTypeEnumFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  technologyType: NullableEnumtechnologyTypeEnumFieldUpdateOperationsInput
}

input ProjectUpsertWithWhereUniqueWithoutOwnerCompanyInput {
  create: ProjectCreateWithoutOwnerCompanyInput!
  update: ProjectUpdateWithoutOwnerCompanyInput!
  where: ProjectWhereUniqueInput!
}

input ProjectUpsertWithWhereUniqueWithoutPlatformConfigShowedInput {
  create: ProjectCreateWithoutPlatformConfigShowedInput!
  update: ProjectUpdateWithoutPlatformConfigShowedInput!
  where: ProjectWhereUniqueInput!
}

input ProjectUpsertWithWhereUniqueWithoutPosterInput {
  create: ProjectCreateWithoutPosterInput!
  update: ProjectUpdateWithoutPosterInput!
  where: ProjectWhereUniqueInput!
}

input ProjectUpsertWithoutCrowdFundingInput {
  create: ProjectCreateWithoutCrowdFundingInput!
  update: ProjectUpdateWithoutCrowdFundingInput!
}

input ProjectUpsertWithoutDescriptionInput {
  create: ProjectCreateWithoutDescriptionInput!
  update: ProjectUpdateWithoutDescriptionInput!
}

input ProjectUpsertWithoutModerateInput {
  create: ProjectCreateWithoutModerateInput!
  update: ProjectUpdateWithoutModerateInput!
}

input ProjectUpsertWithoutPresentationMediaInput {
  create: ProjectCreateWithoutPresentationMediaInput!
  update: ProjectUpdateWithoutPresentationMediaInput!
}

input ProjectUpsertWithoutProjectMediaInput {
  create: ProjectCreateWithoutProjectMediaInput!
  update: ProjectUpdateWithoutProjectMediaInput!
}

input ProjectUpsertWithoutPublishedPostsInput {
  create: ProjectCreateWithoutPublishedPostsInput!
  update: ProjectUpdateWithoutPublishedPostsInput!
}

input ProjectUpsertWithoutWorkersInput {
  create: ProjectCreateWithoutWorkersInput!
  update: ProjectUpdateWithoutWorkersInput!
}

input ProjectWhereInput {
  AND: [ProjectWhereInput!]
  NOT: [ProjectWhereInput!]
  OR: [ProjectWhereInput!]
  businessModel: EnumbusinessModelEnumNullableFilter
  category: EnumfilteringCategoriesFilter
  createdAt: DateTimeFilter
  crowdFunding: CrowdFundingListRelationFilter
  description: ArticleWhereInput
  id: IntFilter
  investmentStage: EnuminvestmentStageEnumNullableFilter
  isApproved: BoolNullableFilter
  mainGoal: EnummainGoalEnumNullableFilter
  metrics: ProjectMetricsWhereInput
  moderate: ModerationWhereInput
  moderateId: IntNullableFilter
  moderationChecked: BoolNullableFilter
  name: StringFilter
  ownerCompany: CompanyWhereInput
  ownerCompanyID: IntFilter
  platformConfigShowed: PlatformConfigListRelationFilter
  poster: MediaWhereInput
  posterId: IntNullableFilter
  presentationMedia: MediaListRelationFilter
  projectMarket: EnumprojectMarketEnumNullableFilter
  projectMedia: MediaListRelationFilter
  projectSite: StringNullableFilter
  projectStage: EnumprojectStageEnumNullableFilter
  projectType: EnumprojectTypeEnumNullableFilter
  publishedPosts: PostListRelationFilter
  salesType: EnumsalesTypeEnumNullableFilter
  shortDescription: StringFilter
  technologyType: EnumtechnologyTypeEnumNullableFilter
  workers: WorkerListRelationFilter
}

input ProjectWhereUniqueInput {
  id: Int
  moderateId: Int
}

type Query {
  companies(after: CompanyWhereUniqueInput, before: CompanyWhereUniqueInput, first: Int, last: Int, orderBy: [CompanyOrderByWithRelationInput!], where: CompanyWhereInput): [Company!]!
  company(where: CompanyWhereUniqueInput!): Company
  contact(where: ContactWhereUniqueInput!): Contact
  contacts(after: ContactWhereUniqueInput, before: ContactWhereUniqueInput, first: Int, last: Int, orderBy: [ContactOrderByWithRelationInput!], where: ContactWhereInput): [Contact!]!
  crowdFunding(where: CrowdFundingWhereUniqueInput!): CrowdFunding
  crowdFundingQuery(data: crowdFundingQueryInput!): CrowdFunding
  crowdFundings(after: CrowdFundingWhereUniqueInput, before: CrowdFundingWhereUniqueInput, first: Int, last: Int, orderBy: [CrowdFundingOrderByWithRelationInput!], where: CrowdFundingWhereInput): [CrowdFunding!]!
  email(where: EmailWhereUniqueInput!): Email
  emails(after: EmailWhereUniqueInput, before: EmailWhereUniqueInput, first: Int, last: Int, where: EmailWhereInput): [Email!]!
  event(where: EventWhereUniqueInput!): Event
  events(after: EventWhereUniqueInput, before: EventWhereUniqueInput, first: Int, last: Int, orderBy: [EventOrderByWithRelationInput!], where: EventWhereInput): [Event!]!
  getAllNonVerificatedCompanies: [Company]
  getAllNonVerificatedContacts: [Contact]
  getAllNonVerificatedCrowdFunding: [CrowdFunding]
  getAllNonVerificatedEvents: [Event]
  getAllNonVerificatedPosts: [Post]
  getAllNonVerificatedProjects: [Project]
  getMessageInGroup(data: getMessageInGroupInput!): MessagerGroup
  getMessageInStream(data: getMessageInStreamInput!): [StreamMessage]
  getMyGroups: [MessagerGroup]
  getPlatformConfig: PlatformConfig
  getUsersInGroup(data: getUsersInGroupInput!): [User]
  getUsersWhichCanAddToGroup(data: getUsersWhichCantAddToGroupInput!): [User]
  me: User
  media(after: MediaWhereUniqueInput, before: MediaWhereUniqueInput, first: Int, last: Int, where: MediaWhereInput): [Media!]!
  myNotification: [Notification]
  post(where: PostWhereUniqueInput!): Post
  postQuery(data: postQueryInput!): Post
  posts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int, orderBy: [PostOrderByWithRelationInput!], where: PostWhereInput): [Post!]!
  project(where: ProjectWhereUniqueInput!): Project
  projectMetrics(after: ProjectMetricsWhereUniqueInput, before: ProjectMetricsWhereUniqueInput, first: Int, last: Int, orderBy: [ProjectMetricsOrderByWithRelationInput!], where: ProjectMetricsWhereInput): [ProjectMetrics!]!
  projects(after: ProjectWhereUniqueInput, before: ProjectWhereUniqueInput, first: Int, last: Int, orderBy: [ProjectOrderByWithRelationInput!], where: ProjectWhereInput): [Project!]!
  registeredForEvents(after: RegisteredForEventWhereUniqueInput, before: RegisteredForEventWhereUniqueInput, first: Int, last: Int): [RegisteredForEvent!]!
  stream(where: StreamWhereUniqueInput!): Stream
  streams(after: StreamWhereUniqueInput, before: StreamWhereUniqueInput, first: Int, last: Int): [Stream!]!
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int, orderBy: [UserOrderByWithRelationInput!], where: UserWhereInput): [User!]!
  worker(where: WorkerWhereUniqueInput!): Worker
  workers(after: WorkerWhereUniqueInput, before: WorkerWhereUniqueInput, first: Int, last: Int, orderBy: [WorkerOrderByWithRelationInput!], where: WorkerWhereInput): [Worker!]!
}

enum QueryMode {
  default
  insensitive
}

input RegisterForEventInput {
  email: String!
  eventId: Int!
  name: String!
  surname: String!
  verdict: registeredVerdict
}

type RegisteredForEvent {
  email: String!
  event: Event!
  id: Int!
  name: String!
  surname: String!
  verdict: eventRegisteredVerdict!
}

input RegisteredForEventCreateManyEventInput {
  email: String!
  id: Int
  name: String!
  surname: String!
  verdict: eventRegisteredVerdict!
}

input RegisteredForEventCreateManyEventInputEnvelope {
  data: [RegisteredForEventCreateManyEventInput!]
  skipDuplicates: Boolean
}

input RegisteredForEventCreateNestedManyWithoutEventInput {
  connect: [RegisteredForEventWhereUniqueInput!]
  connectOrCreate: [RegisteredForEventCreateOrConnectWithoutEventInput!]
  create: [RegisteredForEventCreateWithoutEventInput!]
  createMany: RegisteredForEventCreateManyEventInputEnvelope
}

input RegisteredForEventCreateOrConnectWithoutEventInput {
  create: RegisteredForEventCreateWithoutEventInput!
  where: RegisteredForEventWhereUniqueInput!
}

input RegisteredForEventCreateWithoutEventInput {
  email: String!
  name: String!
  surname: String!
  verdict: eventRegisteredVerdict!
}

input RegisteredForEventListRelationFilter {
  every: RegisteredForEventWhereInput
  none: RegisteredForEventWhereInput
  some: RegisteredForEventWhereInput
}

input RegisteredForEventOrderByRelationAggregateInput {
  _count: SortOrder
}

input RegisteredForEventScalarWhereInput {
  AND: [RegisteredForEventScalarWhereInput!]
  NOT: [RegisteredForEventScalarWhereInput!]
  OR: [RegisteredForEventScalarWhereInput!]
  email: StringFilter
  eventId: IntFilter
  id: IntFilter
  name: StringFilter
  surname: StringFilter
  verdict: EnumeventRegisteredVerdictFilter
}

input RegisteredForEventUpdateManyMutationInput {
  email: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  surname: StringFieldUpdateOperationsInput
  verdict: EnumeventRegisteredVerdictFieldUpdateOperationsInput
}

input RegisteredForEventUpdateManyWithWhereWithoutEventInput {
  data: RegisteredForEventUpdateManyMutationInput!
  where: RegisteredForEventScalarWhereInput!
}

input RegisteredForEventUpdateManyWithoutEventInput {
  connect: [RegisteredForEventWhereUniqueInput!]
  connectOrCreate: [RegisteredForEventCreateOrConnectWithoutEventInput!]
  create: [RegisteredForEventCreateWithoutEventInput!]
  createMany: RegisteredForEventCreateManyEventInputEnvelope
  delete: [RegisteredForEventWhereUniqueInput!]
  deleteMany: [RegisteredForEventScalarWhereInput!]
  disconnect: [RegisteredForEventWhereUniqueInput!]
  set: [RegisteredForEventWhereUniqueInput!]
  update: [RegisteredForEventUpdateWithWhereUniqueWithoutEventInput!]
  updateMany: [RegisteredForEventUpdateManyWithWhereWithoutEventInput!]
  upsert: [RegisteredForEventUpsertWithWhereUniqueWithoutEventInput!]
}

input RegisteredForEventUpdateWithWhereUniqueWithoutEventInput {
  data: RegisteredForEventUpdateWithoutEventInput!
  where: RegisteredForEventWhereUniqueInput!
}

input RegisteredForEventUpdateWithoutEventInput {
  email: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  surname: StringFieldUpdateOperationsInput
  verdict: EnumeventRegisteredVerdictFieldUpdateOperationsInput
}

input RegisteredForEventUpsertWithWhereUniqueWithoutEventInput {
  create: RegisteredForEventCreateWithoutEventInput!
  update: RegisteredForEventUpdateWithoutEventInput!
  where: RegisteredForEventWhereUniqueInput!
}

input RegisteredForEventWhereInput {
  AND: [RegisteredForEventWhereInput!]
  NOT: [RegisteredForEventWhereInput!]
  OR: [RegisteredForEventWhereInput!]
  email: StringFilter
  event: EventWhereInput
  eventId: IntFilter
  id: IntFilter
  name: StringFilter
  surname: StringFilter
  verdict: EnumeventRegisteredVerdictFilter
}

input RegisteredForEventWhereUniqueInput {
  id: Int
}

type RejectMessage {
  entityId: Int
  entityType: String
  rejectMessage: String
  verdict: Boolean
}

type RejectModerationMessage {
  entityId: Int
  rejectMessage: String
  verdict: Boolean
}

enum Role {
  administrator
  moderator
  resident
}

type Section {
  article: Article!
  id: Int!
  media: Media
  number: Int!
  text: String
  type: sectionTypes!
}

input SectionCreateManyArticleInput {
  id: Int
  mediaID: Int
  number: Int!
  text: String
  type: sectionTypes!
}

input SectionCreateManyArticleInputEnvelope {
  data: [SectionCreateManyArticleInput!]
  skipDuplicates: Boolean
}

input SectionCreateManyMediaInput {
  articleID: Int!
  id: Int
  number: Int!
  text: String
  type: sectionTypes!
}

input SectionCreateManyMediaInputEnvelope {
  data: [SectionCreateManyMediaInput!]
  skipDuplicates: Boolean
}

input SectionCreateNestedManyWithoutArticleInput {
  connect: [SectionWhereUniqueInput!]
  connectOrCreate: [SectionCreateOrConnectWithoutArticleInput!]
  create: [SectionCreateWithoutArticleInput!]
  createMany: SectionCreateManyArticleInputEnvelope
}

input SectionCreateNestedManyWithoutMediaInput {
  connect: [SectionWhereUniqueInput!]
  connectOrCreate: [SectionCreateOrConnectWithoutMediaInput!]
  create: [SectionCreateWithoutMediaInput!]
  createMany: SectionCreateManyMediaInputEnvelope
}

input SectionCreateOrConnectWithoutArticleInput {
  create: SectionCreateWithoutArticleInput!
  where: SectionWhereUniqueInput!
}

input SectionCreateOrConnectWithoutMediaInput {
  create: SectionCreateWithoutMediaInput!
  where: SectionWhereUniqueInput!
}

input SectionCreateWithoutArticleInput {
  media: MediaCreateNestedOneWithoutSectionInput
  number: Int!
  text: String
  type: sectionTypes!
}

input SectionCreateWithoutMediaInput {
  article: ArticleCreateNestedOneWithoutSectionsInput!
  number: Int!
  text: String
  type: sectionTypes!
}

input SectionListRelationFilter {
  every: SectionWhereInput
  none: SectionWhereInput
  some: SectionWhereInput
}

input SectionOrderByRelationAggregateInput {
  _count: SortOrder
}

input SectionScalarWhereInput {
  AND: [SectionScalarWhereInput!]
  NOT: [SectionScalarWhereInput!]
  OR: [SectionScalarWhereInput!]
  articleID: IntFilter
  id: IntFilter
  mediaID: IntNullableFilter
  number: IntFilter
  text: StringNullableFilter
  type: EnumsectionTypesFilter
}

input SectionUpdateManyMutationInput {
  number: IntFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  type: EnumsectionTypesFieldUpdateOperationsInput
}

input SectionUpdateManyWithWhereWithoutArticleInput {
  data: SectionUpdateManyMutationInput!
  where: SectionScalarWhereInput!
}

input SectionUpdateManyWithWhereWithoutMediaInput {
  data: SectionUpdateManyMutationInput!
  where: SectionScalarWhereInput!
}

input SectionUpdateManyWithoutArticleInput {
  connect: [SectionWhereUniqueInput!]
  connectOrCreate: [SectionCreateOrConnectWithoutArticleInput!]
  create: [SectionCreateWithoutArticleInput!]
  createMany: SectionCreateManyArticleInputEnvelope
  delete: [SectionWhereUniqueInput!]
  deleteMany: [SectionScalarWhereInput!]
  disconnect: [SectionWhereUniqueInput!]
  set: [SectionWhereUniqueInput!]
  update: [SectionUpdateWithWhereUniqueWithoutArticleInput!]
  updateMany: [SectionUpdateManyWithWhereWithoutArticleInput!]
  upsert: [SectionUpsertWithWhereUniqueWithoutArticleInput!]
}

input SectionUpdateManyWithoutMediaInput {
  connect: [SectionWhereUniqueInput!]
  connectOrCreate: [SectionCreateOrConnectWithoutMediaInput!]
  create: [SectionCreateWithoutMediaInput!]
  createMany: SectionCreateManyMediaInputEnvelope
  delete: [SectionWhereUniqueInput!]
  deleteMany: [SectionScalarWhereInput!]
  disconnect: [SectionWhereUniqueInput!]
  set: [SectionWhereUniqueInput!]
  update: [SectionUpdateWithWhereUniqueWithoutMediaInput!]
  updateMany: [SectionUpdateManyWithWhereWithoutMediaInput!]
  upsert: [SectionUpsertWithWhereUniqueWithoutMediaInput!]
}

input SectionUpdateWithWhereUniqueWithoutArticleInput {
  data: SectionUpdateWithoutArticleInput!
  where: SectionWhereUniqueInput!
}

input SectionUpdateWithWhereUniqueWithoutMediaInput {
  data: SectionUpdateWithoutMediaInput!
  where: SectionWhereUniqueInput!
}

input SectionUpdateWithoutArticleInput {
  media: MediaUpdateOneWithoutSectionInput
  number: IntFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  type: EnumsectionTypesFieldUpdateOperationsInput
}

input SectionUpdateWithoutMediaInput {
  article: ArticleUpdateOneRequiredWithoutSectionsInput
  number: IntFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  type: EnumsectionTypesFieldUpdateOperationsInput
}

input SectionUpsertWithWhereUniqueWithoutArticleInput {
  create: SectionCreateWithoutArticleInput!
  update: SectionUpdateWithoutArticleInput!
  where: SectionWhereUniqueInput!
}

input SectionUpsertWithWhereUniqueWithoutMediaInput {
  create: SectionCreateWithoutMediaInput!
  update: SectionUpdateWithoutMediaInput!
  where: SectionWhereUniqueInput!
}

input SectionWhereInput {
  AND: [SectionWhereInput!]
  NOT: [SectionWhereInput!]
  OR: [SectionWhereInput!]
  article: ArticleWhereInput
  articleID: IntFilter
  id: IntFilter
  media: MediaWhereInput
  mediaID: IntNullableFilter
  number: IntFilter
  text: StringNullableFilter
  type: EnumsectionTypesFilter
}

input SectionWhereUniqueInput {
  id: Int
}

input SignInInput {
  login: String!
  password: String!
}

type SignUrlCompanyAvatar {
  fileName: String
  signedURL: String
}

type SignUrlEventPoster {
  fileName: String
  signedURL: String
}

type SignUrlPostPoster {
  fileName: String
  signedURL: String
}

type SignUrlProjectPoster {
  fileName: String
  signedURL: String
}

type SignUrlProjectPresentationMedia {
  fileName: String
  signedURL: String
}

type SignUrlResponse {
  fileName: String
  mediaId: Int
  mediaURL: String
  signedURL: String
}

type SignUrlUserAvatar {
  fileName: String
  signedURL: String
}

enum SortOrder {
  asc
  desc
}

type Stream {
  active: Boolean!
  event: Event
  id: Int!
  streamKey: String!
}

input StreamCreateNestedOneWithoutEventInput {
  connect: StreamWhereUniqueInput
  connectOrCreate: StreamCreateOrConnectWithoutEventInput
  create: StreamCreateWithoutEventInput
}

input StreamCreateNestedOneWithoutStreamMessageInput {
  connect: StreamWhereUniqueInput
  connectOrCreate: StreamCreateOrConnectWithoutStreamMessageInput
  create: StreamCreateWithoutStreamMessageInput
}

input StreamCreateOrConnectWithoutEventInput {
  create: StreamCreateWithoutEventInput!
  where: StreamWhereUniqueInput!
}

input StreamCreateOrConnectWithoutStreamMessageInput {
  create: StreamCreateWithoutStreamMessageInput!
  where: StreamWhereUniqueInput!
}

input StreamCreateWithoutEventInput {
  active: Boolean
  streamKey: String
  streamMessage: StreamMessageCreateNestedManyWithoutStreamInput
}

input StreamCreateWithoutStreamMessageInput {
  active: Boolean
  event: EventCreateNestedOneWithoutStreamInput
  streamKey: String
}

type StreamMessage {
  createdAt: DateTime!
  id: Int!
  sender: User!
  text: String!
}

input StreamMessageCreateManySenderInput {
  createdAt: DateTime
  id: Int
  streamId: Int!
  text: String!
}

input StreamMessageCreateManySenderInputEnvelope {
  data: [StreamMessageCreateManySenderInput!]
  skipDuplicates: Boolean
}

input StreamMessageCreateManyStreamInput {
  createdAt: DateTime
  id: Int
  senderId: Int!
  text: String!
}

input StreamMessageCreateManyStreamInputEnvelope {
  data: [StreamMessageCreateManyStreamInput!]
  skipDuplicates: Boolean
}

input StreamMessageCreateNestedManyWithoutSenderInput {
  connect: [StreamMessageWhereUniqueInput!]
  connectOrCreate: [StreamMessageCreateOrConnectWithoutSenderInput!]
  create: [StreamMessageCreateWithoutSenderInput!]
  createMany: StreamMessageCreateManySenderInputEnvelope
}

input StreamMessageCreateNestedManyWithoutStreamInput {
  connect: [StreamMessageWhereUniqueInput!]
  connectOrCreate: [StreamMessageCreateOrConnectWithoutStreamInput!]
  create: [StreamMessageCreateWithoutStreamInput!]
  createMany: StreamMessageCreateManyStreamInputEnvelope
}

input StreamMessageCreateOrConnectWithoutSenderInput {
  create: StreamMessageCreateWithoutSenderInput!
  where: StreamMessageWhereUniqueInput!
}

input StreamMessageCreateOrConnectWithoutStreamInput {
  create: StreamMessageCreateWithoutStreamInput!
  where: StreamMessageWhereUniqueInput!
}

input StreamMessageCreateWithoutSenderInput {
  createdAt: DateTime
  stream: StreamCreateNestedOneWithoutStreamMessageInput!
  text: String!
}

input StreamMessageCreateWithoutStreamInput {
  createdAt: DateTime
  sender: UserCreateNestedOneWithoutStreamMessageInput!
  text: String!
}

input StreamMessageListRelationFilter {
  every: StreamMessageWhereInput
  none: StreamMessageWhereInput
  some: StreamMessageWhereInput
}

input StreamMessageOrderByRelationAggregateInput {
  _count: SortOrder
}

input StreamMessageScalarWhereInput {
  AND: [StreamMessageScalarWhereInput!]
  NOT: [StreamMessageScalarWhereInput!]
  OR: [StreamMessageScalarWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  senderId: IntFilter
  streamId: IntFilter
  text: StringFilter
}

input StreamMessageUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
}

input StreamMessageUpdateManyWithWhereWithoutSenderInput {
  data: StreamMessageUpdateManyMutationInput!
  where: StreamMessageScalarWhereInput!
}

input StreamMessageUpdateManyWithWhereWithoutStreamInput {
  data: StreamMessageUpdateManyMutationInput!
  where: StreamMessageScalarWhereInput!
}

input StreamMessageUpdateManyWithoutSenderInput {
  connect: [StreamMessageWhereUniqueInput!]
  connectOrCreate: [StreamMessageCreateOrConnectWithoutSenderInput!]
  create: [StreamMessageCreateWithoutSenderInput!]
  createMany: StreamMessageCreateManySenderInputEnvelope
  delete: [StreamMessageWhereUniqueInput!]
  deleteMany: [StreamMessageScalarWhereInput!]
  disconnect: [StreamMessageWhereUniqueInput!]
  set: [StreamMessageWhereUniqueInput!]
  update: [StreamMessageUpdateWithWhereUniqueWithoutSenderInput!]
  updateMany: [StreamMessageUpdateManyWithWhereWithoutSenderInput!]
  upsert: [StreamMessageUpsertWithWhereUniqueWithoutSenderInput!]
}

input StreamMessageUpdateManyWithoutStreamInput {
  connect: [StreamMessageWhereUniqueInput!]
  connectOrCreate: [StreamMessageCreateOrConnectWithoutStreamInput!]
  create: [StreamMessageCreateWithoutStreamInput!]
  createMany: StreamMessageCreateManyStreamInputEnvelope
  delete: [StreamMessageWhereUniqueInput!]
  deleteMany: [StreamMessageScalarWhereInput!]
  disconnect: [StreamMessageWhereUniqueInput!]
  set: [StreamMessageWhereUniqueInput!]
  update: [StreamMessageUpdateWithWhereUniqueWithoutStreamInput!]
  updateMany: [StreamMessageUpdateManyWithWhereWithoutStreamInput!]
  upsert: [StreamMessageUpsertWithWhereUniqueWithoutStreamInput!]
}

input StreamMessageUpdateWithWhereUniqueWithoutSenderInput {
  data: StreamMessageUpdateWithoutSenderInput!
  where: StreamMessageWhereUniqueInput!
}

input StreamMessageUpdateWithWhereUniqueWithoutStreamInput {
  data: StreamMessageUpdateWithoutStreamInput!
  where: StreamMessageWhereUniqueInput!
}

input StreamMessageUpdateWithoutSenderInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  stream: StreamUpdateOneRequiredWithoutStreamMessageInput
  text: StringFieldUpdateOperationsInput
}

input StreamMessageUpdateWithoutStreamInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  sender: UserUpdateOneRequiredWithoutStreamMessageInput
  text: StringFieldUpdateOperationsInput
}

input StreamMessageUpsertWithWhereUniqueWithoutSenderInput {
  create: StreamMessageCreateWithoutSenderInput!
  update: StreamMessageUpdateWithoutSenderInput!
  where: StreamMessageWhereUniqueInput!
}

input StreamMessageUpsertWithWhereUniqueWithoutStreamInput {
  create: StreamMessageCreateWithoutStreamInput!
  update: StreamMessageUpdateWithoutStreamInput!
  where: StreamMessageWhereUniqueInput!
}

input StreamMessageWhereInput {
  AND: [StreamMessageWhereInput!]
  NOT: [StreamMessageWhereInput!]
  OR: [StreamMessageWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  sender: UserWhereInput
  senderId: IntFilter
  stream: StreamWhereInput
  streamId: IntFilter
  text: StringFilter
}

input StreamMessageWhereUniqueInput {
  id: Int
}

input StreamOrderByWithRelationInput {
  active: SortOrder
  event: EventOrderByWithRelationInput
  eventId: SortOrder
  id: SortOrder
  streamKey: SortOrder
  streamMessage: StreamMessageOrderByRelationAggregateInput
}

input StreamUpdateOneRequiredWithoutStreamMessageInput {
  connect: StreamWhereUniqueInput
  connectOrCreate: StreamCreateOrConnectWithoutStreamMessageInput
  create: StreamCreateWithoutStreamMessageInput
  update: StreamUpdateWithoutStreamMessageInput
  upsert: StreamUpsertWithoutStreamMessageInput
}

input StreamUpdateOneWithoutEventInput {
  connect: StreamWhereUniqueInput
  connectOrCreate: StreamCreateOrConnectWithoutEventInput
  create: StreamCreateWithoutEventInput
  delete: Boolean
  disconnect: Boolean
  update: StreamUpdateWithoutEventInput
  upsert: StreamUpsertWithoutEventInput
}

input StreamUpdateWithoutEventInput {
  active: BoolFieldUpdateOperationsInput
  streamKey: StringFieldUpdateOperationsInput
  streamMessage: StreamMessageUpdateManyWithoutStreamInput
}

input StreamUpdateWithoutStreamMessageInput {
  active: BoolFieldUpdateOperationsInput
  event: EventUpdateOneWithoutStreamInput
  streamKey: StringFieldUpdateOperationsInput
}

input StreamUpsertWithoutEventInput {
  create: StreamCreateWithoutEventInput!
  update: StreamUpdateWithoutEventInput!
}

input StreamUpsertWithoutStreamMessageInput {
  create: StreamCreateWithoutStreamMessageInput!
  update: StreamUpdateWithoutStreamMessageInput!
}

input StreamWhereInput {
  AND: [StreamWhereInput!]
  NOT: [StreamWhereInput!]
  OR: [StreamWhereInput!]
  active: BoolFilter
  event: EventWhereInput
  eventId: IntNullableFilter
  id: IntFilter
  streamKey: StringFilter
  streamMessage: StreamMessageListRelationFilter
}

input StreamWhereUniqueInput {
  eventId: Int
  id: Int
  streamKey: String
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableListFilter {
  equals: [String!]
  has: String
  hasEvery: [String!]
  hasSome: [String!]
  isEmpty: Boolean
}

type Subscription {
  newMessage(data: subscriptionMessageInGroup!): Message
  streamChat(data: subscriptionMessageInStream!): StreamMessage
}

input UpdateArticleInput {
  articleId: Int!
  sections: [CreateSectionInput]
}

input UpdateDescriptionInput {
  descriptionId: Int!
  sections: [CreateDescriptionSectionInput]
}

input UpdatePostInput {
  category: filteringCategoies
  description: String
  postId: Int!
  tags: [String]
  title: String
}

input UpdateStoryInput {
  sections: [CreateStorySectionInput]
  storyId: Int!
}

input UpdateTariffInput {
  description: String
  price: Float
  tariffId: Int!
  title: String
}

type User {
  avatar: Media
  bio: String
  city: String
  createdAt: DateTime!
  email: String!
  firstname: String!
  groups(after: MessagerGroupWhereUniqueInput, before: MessagerGroupWhereUniqueInput, first: Int, last: Int, orderBy: [MessagerGroupOrderByWithRelationInput!]): [MessagerGroup!]!
  id: Int!
  inWorks(after: WorkerWhereUniqueInput, before: WorkerWhereUniqueInput, first: Int, last: Int, orderBy: [WorkerOrderByWithRelationInput!]): [Worker!]!
  lastname: String!
  login: String!
  messages(after: MessageWhereUniqueInput, before: MessageWhereUniqueInput, first: Int, last: Int): [Message!]!
  moderatedEntity(after: ModerationWhereUniqueInput, before: ModerationWhereUniqueInput, first: Int, last: Int): [Moderation!]!
  notifications(after: NotificationWhereUniqueInput, before: NotificationWhereUniqueInput, first: Int, last: Int, orderBy: [NotificationOrderByWithRelationInput!]): [Notification!]!
  ownerCompanies(after: CompanyWhereUniqueInput, before: CompanyWhereUniqueInput, first: Int, last: Int): [Company!]!
  password: String!
  publishedEvent(after: EventWhereUniqueInput, before: EventWhereUniqueInput, first: Int, last: Int, orderBy: [EventOrderByWithRelationInput!]): [Event!]!
  role: Role
  shortDescription: String
  tokenVersion: Int
}

input UserCreateManyAvatarInput {
  bio: String
  city: String
  createdAt: DateTime
  email: String!
  firstname: String!
  id: Int
  lastname: String!
  login: String!
  password: String!
  role: Role
  shortDescription: String
  tokenVersion: Int
}

input UserCreateManyAvatarInputEnvelope {
  data: [UserCreateManyAvatarInput!]
  skipDuplicates: Boolean
}

input UserCreateNestedManyWithoutAvatarInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutAvatarInput!]
  create: [UserCreateWithoutAvatarInput!]
  createMany: UserCreateManyAvatarInputEnvelope
}

input UserCreateNestedManyWithoutGroupAdminsInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutGroupAdminsInput!]
  create: [UserCreateWithoutGroupAdminsInput!]
}

input UserCreateNestedManyWithoutGroupsInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutGroupsInput!]
  create: [UserCreateWithoutGroupsInput!]
}

input UserCreateNestedOneWithoutInWorksInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutInWorksInput
  create: UserCreateWithoutInWorksInput
}

input UserCreateNestedOneWithoutMessagesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutMessagesInput
  create: UserCreateWithoutMessagesInput
}

input UserCreateNestedOneWithoutModeratedEntityInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutModeratedEntityInput
  create: UserCreateWithoutModeratedEntityInput
}

input UserCreateNestedOneWithoutOwnerCompaniesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutOwnerCompaniesInput
  create: UserCreateWithoutOwnerCompaniesInput
}

input UserCreateNestedOneWithoutPublishedEventInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutPublishedEventInput
  create: UserCreateWithoutPublishedEventInput
}

input UserCreateNestedOneWithoutStreamMessageInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutStreamMessageInput
  create: UserCreateWithoutStreamMessageInput
}

input UserCreateOrConnectWithoutAvatarInput {
  create: UserCreateWithoutAvatarInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutGroupAdminsInput {
  create: UserCreateWithoutGroupAdminsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutGroupsInput {
  create: UserCreateWithoutGroupsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutInWorksInput {
  create: UserCreateWithoutInWorksInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutMessagesInput {
  create: UserCreateWithoutMessagesInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutModeratedEntityInput {
  create: UserCreateWithoutModeratedEntityInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutOwnerCompaniesInput {
  create: UserCreateWithoutOwnerCompaniesInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutPublishedEventInput {
  create: UserCreateWithoutPublishedEventInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutStreamMessageInput {
  create: UserCreateWithoutStreamMessageInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutAvatarInput {
  StreamMessage: StreamMessageCreateNestedManyWithoutSenderInput
  bio: String
  city: String
  createdAt: DateTime
  email: String!
  firstname: String!
  groupAdmins: MessagerGroupCreateNestedManyWithoutAdminsInput
  groups: MessagerGroupCreateNestedManyWithoutMembersInput
  inWorks: WorkerCreateNestedManyWithoutWorkerInput
  lastname: String!
  login: String!
  messages: MessageCreateNestedManyWithoutSenderInput
  moderatedEntity: ModerationCreateNestedManyWithoutAuditorInput
  notifications: NotificationCreateNestedManyWithoutToWhomInput
  ownerCompanies: CompanyCreateNestedManyWithoutOwnerInput
  password: String!
  publishedEvent: EventCreateNestedManyWithoutUserInput
  role: Role
  shortDescription: String
  tokenVersion: Int
}

input UserCreateWithoutGroupAdminsInput {
  StreamMessage: StreamMessageCreateNestedManyWithoutSenderInput
  avatar: MediaCreateNestedOneWithoutUserInput
  bio: String
  city: String
  createdAt: DateTime
  email: String!
  firstname: String!
  groups: MessagerGroupCreateNestedManyWithoutMembersInput
  inWorks: WorkerCreateNestedManyWithoutWorkerInput
  lastname: String!
  login: String!
  messages: MessageCreateNestedManyWithoutSenderInput
  moderatedEntity: ModerationCreateNestedManyWithoutAuditorInput
  notifications: NotificationCreateNestedManyWithoutToWhomInput
  ownerCompanies: CompanyCreateNestedManyWithoutOwnerInput
  password: String!
  publishedEvent: EventCreateNestedManyWithoutUserInput
  role: Role
  shortDescription: String
  tokenVersion: Int
}

input UserCreateWithoutGroupsInput {
  StreamMessage: StreamMessageCreateNestedManyWithoutSenderInput
  avatar: MediaCreateNestedOneWithoutUserInput
  bio: String
  city: String
  createdAt: DateTime
  email: String!
  firstname: String!
  groupAdmins: MessagerGroupCreateNestedManyWithoutAdminsInput
  inWorks: WorkerCreateNestedManyWithoutWorkerInput
  lastname: String!
  login: String!
  messages: MessageCreateNestedManyWithoutSenderInput
  moderatedEntity: ModerationCreateNestedManyWithoutAuditorInput
  notifications: NotificationCreateNestedManyWithoutToWhomInput
  ownerCompanies: CompanyCreateNestedManyWithoutOwnerInput
  password: String!
  publishedEvent: EventCreateNestedManyWithoutUserInput
  role: Role
  shortDescription: String
  tokenVersion: Int
}

input UserCreateWithoutInWorksInput {
  StreamMessage: StreamMessageCreateNestedManyWithoutSenderInput
  avatar: MediaCreateNestedOneWithoutUserInput
  bio: String
  city: String
  createdAt: DateTime
  email: String!
  firstname: String!
  groupAdmins: MessagerGroupCreateNestedManyWithoutAdminsInput
  groups: MessagerGroupCreateNestedManyWithoutMembersInput
  lastname: String!
  login: String!
  messages: MessageCreateNestedManyWithoutSenderInput
  moderatedEntity: ModerationCreateNestedManyWithoutAuditorInput
  notifications: NotificationCreateNestedManyWithoutToWhomInput
  ownerCompanies: CompanyCreateNestedManyWithoutOwnerInput
  password: String!
  publishedEvent: EventCreateNestedManyWithoutUserInput
  role: Role
  shortDescription: String
  tokenVersion: Int
}

input UserCreateWithoutMessagesInput {
  StreamMessage: StreamMessageCreateNestedManyWithoutSenderInput
  avatar: MediaCreateNestedOneWithoutUserInput
  bio: String
  city: String
  createdAt: DateTime
  email: String!
  firstname: String!
  groupAdmins: MessagerGroupCreateNestedManyWithoutAdminsInput
  groups: MessagerGroupCreateNestedManyWithoutMembersInput
  inWorks: WorkerCreateNestedManyWithoutWorkerInput
  lastname: String!
  login: String!
  moderatedEntity: ModerationCreateNestedManyWithoutAuditorInput
  notifications: NotificationCreateNestedManyWithoutToWhomInput
  ownerCompanies: CompanyCreateNestedManyWithoutOwnerInput
  password: String!
  publishedEvent: EventCreateNestedManyWithoutUserInput
  role: Role
  shortDescription: String
  tokenVersion: Int
}

input UserCreateWithoutModeratedEntityInput {
  StreamMessage: StreamMessageCreateNestedManyWithoutSenderInput
  avatar: MediaCreateNestedOneWithoutUserInput
  bio: String
  city: String
  createdAt: DateTime
  email: String!
  firstname: String!
  groupAdmins: MessagerGroupCreateNestedManyWithoutAdminsInput
  groups: MessagerGroupCreateNestedManyWithoutMembersInput
  inWorks: WorkerCreateNestedManyWithoutWorkerInput
  lastname: String!
  login: String!
  messages: MessageCreateNestedManyWithoutSenderInput
  notifications: NotificationCreateNestedManyWithoutToWhomInput
  ownerCompanies: CompanyCreateNestedManyWithoutOwnerInput
  password: String!
  publishedEvent: EventCreateNestedManyWithoutUserInput
  role: Role
  shortDescription: String
  tokenVersion: Int
}

input UserCreateWithoutOwnerCompaniesInput {
  StreamMessage: StreamMessageCreateNestedManyWithoutSenderInput
  avatar: MediaCreateNestedOneWithoutUserInput
  bio: String
  city: String
  createdAt: DateTime
  email: String!
  firstname: String!
  groupAdmins: MessagerGroupCreateNestedManyWithoutAdminsInput
  groups: MessagerGroupCreateNestedManyWithoutMembersInput
  inWorks: WorkerCreateNestedManyWithoutWorkerInput
  lastname: String!
  login: String!
  messages: MessageCreateNestedManyWithoutSenderInput
  moderatedEntity: ModerationCreateNestedManyWithoutAuditorInput
  notifications: NotificationCreateNestedManyWithoutToWhomInput
  password: String!
  publishedEvent: EventCreateNestedManyWithoutUserInput
  role: Role
  shortDescription: String
  tokenVersion: Int
}

input UserCreateWithoutPublishedEventInput {
  StreamMessage: StreamMessageCreateNestedManyWithoutSenderInput
  avatar: MediaCreateNestedOneWithoutUserInput
  bio: String
  city: String
  createdAt: DateTime
  email: String!
  firstname: String!
  groupAdmins: MessagerGroupCreateNestedManyWithoutAdminsInput
  groups: MessagerGroupCreateNestedManyWithoutMembersInput
  inWorks: WorkerCreateNestedManyWithoutWorkerInput
  lastname: String!
  login: String!
  messages: MessageCreateNestedManyWithoutSenderInput
  moderatedEntity: ModerationCreateNestedManyWithoutAuditorInput
  notifications: NotificationCreateNestedManyWithoutToWhomInput
  ownerCompanies: CompanyCreateNestedManyWithoutOwnerInput
  password: String!
  role: Role
  shortDescription: String
  tokenVersion: Int
}

input UserCreateWithoutStreamMessageInput {
  avatar: MediaCreateNestedOneWithoutUserInput
  bio: String
  city: String
  createdAt: DateTime
  email: String!
  firstname: String!
  groupAdmins: MessagerGroupCreateNestedManyWithoutAdminsInput
  groups: MessagerGroupCreateNestedManyWithoutMembersInput
  inWorks: WorkerCreateNestedManyWithoutWorkerInput
  lastname: String!
  login: String!
  messages: MessageCreateNestedManyWithoutSenderInput
  moderatedEntity: ModerationCreateNestedManyWithoutAuditorInput
  notifications: NotificationCreateNestedManyWithoutToWhomInput
  ownerCompanies: CompanyCreateNestedManyWithoutOwnerInput
  password: String!
  publishedEvent: EventCreateNestedManyWithoutUserInput
  role: Role
  shortDescription: String
  tokenVersion: Int
}

input UserListRelationFilter {
  every: UserWhereInput
  none: UserWhereInput
  some: UserWhereInput
}

input UserOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserOrderByWithRelationInput {
  StreamMessage: StreamMessageOrderByRelationAggregateInput
  avatar: MediaOrderByWithRelationInput
  avatarId: SortOrder
  bio: SortOrder
  city: SortOrder
  createdAt: SortOrder
  email: SortOrder
  firstname: SortOrder
  groupAdmins: MessagerGroupOrderByRelationAggregateInput
  groups: MessagerGroupOrderByRelationAggregateInput
  id: SortOrder
  inWorks: WorkerOrderByRelationAggregateInput
  lastname: SortOrder
  login: SortOrder
  messages: MessageOrderByRelationAggregateInput
  moderatedEntity: ModerationOrderByRelationAggregateInput
  notifications: NotificationOrderByRelationAggregateInput
  ownerCompanies: CompanyOrderByRelationAggregateInput
  password: SortOrder
  publishedEvent: EventOrderByRelationAggregateInput
  role: SortOrder
  shortDescription: SortOrder
  tokenVersion: SortOrder
}

input UserScalarWhereInput {
  AND: [UserScalarWhereInput!]
  NOT: [UserScalarWhereInput!]
  OR: [UserScalarWhereInput!]
  avatarId: IntNullableFilter
  bio: StringNullableFilter
  city: StringNullableFilter
  createdAt: DateTimeFilter
  email: StringFilter
  firstname: StringFilter
  id: IntFilter
  lastname: StringFilter
  login: StringFilter
  password: StringFilter
  role: EnumRoleNullableFilter
  shortDescription: StringNullableFilter
  tokenVersion: IntNullableFilter
}

input UserUpdateManyMutationInput {
  bio: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstname: StringFieldUpdateOperationsInput
  lastname: StringFieldUpdateOperationsInput
  login: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  role: NullableEnumRoleFieldUpdateOperationsInput
  shortDescription: NullableStringFieldUpdateOperationsInput
  tokenVersion: NullableIntFieldUpdateOperationsInput
}

input UserUpdateManyWithWhereWithoutAvatarInput {
  data: UserUpdateManyMutationInput!
  where: UserScalarWhereInput!
}

input UserUpdateManyWithWhereWithoutGroupAdminsInput {
  data: UserUpdateManyMutationInput!
  where: UserScalarWhereInput!
}

input UserUpdateManyWithWhereWithoutGroupsInput {
  data: UserUpdateManyMutationInput!
  where: UserScalarWhereInput!
}

input UserUpdateManyWithoutAvatarInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutAvatarInput!]
  create: [UserCreateWithoutAvatarInput!]
  createMany: UserCreateManyAvatarInputEnvelope
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutAvatarInput!]
  updateMany: [UserUpdateManyWithWhereWithoutAvatarInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutAvatarInput!]
}

input UserUpdateManyWithoutGroupAdminsInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutGroupAdminsInput!]
  create: [UserCreateWithoutGroupAdminsInput!]
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutGroupAdminsInput!]
  updateMany: [UserUpdateManyWithWhereWithoutGroupAdminsInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutGroupAdminsInput!]
}

input UserUpdateManyWithoutGroupsInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutGroupsInput!]
  create: [UserCreateWithoutGroupsInput!]
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutGroupsInput!]
  updateMany: [UserUpdateManyWithWhereWithoutGroupsInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutGroupsInput!]
}

input UserUpdateOneRequiredWithoutInWorksInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutInWorksInput
  create: UserCreateWithoutInWorksInput
  update: UserUpdateWithoutInWorksInput
  upsert: UserUpsertWithoutInWorksInput
}

input UserUpdateOneRequiredWithoutMessagesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutMessagesInput
  create: UserCreateWithoutMessagesInput
  update: UserUpdateWithoutMessagesInput
  upsert: UserUpsertWithoutMessagesInput
}

input UserUpdateOneRequiredWithoutOwnerCompaniesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutOwnerCompaniesInput
  create: UserCreateWithoutOwnerCompaniesInput
  update: UserUpdateWithoutOwnerCompaniesInput
  upsert: UserUpsertWithoutOwnerCompaniesInput
}

input UserUpdateOneRequiredWithoutStreamMessageInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutStreamMessageInput
  create: UserCreateWithoutStreamMessageInput
  update: UserUpdateWithoutStreamMessageInput
  upsert: UserUpsertWithoutStreamMessageInput
}

input UserUpdateOneWithoutModeratedEntityInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutModeratedEntityInput
  create: UserCreateWithoutModeratedEntityInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutModeratedEntityInput
  upsert: UserUpsertWithoutModeratedEntityInput
}

input UserUpdateOneWithoutPublishedEventInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutPublishedEventInput
  create: UserCreateWithoutPublishedEventInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutPublishedEventInput
  upsert: UserUpsertWithoutPublishedEventInput
}

input UserUpdateWithWhereUniqueWithoutAvatarInput {
  data: UserUpdateWithoutAvatarInput!
  where: UserWhereUniqueInput!
}

input UserUpdateWithWhereUniqueWithoutGroupAdminsInput {
  data: UserUpdateWithoutGroupAdminsInput!
  where: UserWhereUniqueInput!
}

input UserUpdateWithWhereUniqueWithoutGroupsInput {
  data: UserUpdateWithoutGroupsInput!
  where: UserWhereUniqueInput!
}

input UserUpdateWithoutAvatarInput {
  StreamMessage: StreamMessageUpdateManyWithoutSenderInput
  bio: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstname: StringFieldUpdateOperationsInput
  groupAdmins: MessagerGroupUpdateManyWithoutAdminsInput
  groups: MessagerGroupUpdateManyWithoutMembersInput
  inWorks: WorkerUpdateManyWithoutWorkerInput
  lastname: StringFieldUpdateOperationsInput
  login: StringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutSenderInput
  moderatedEntity: ModerationUpdateManyWithoutAuditorInput
  notifications: NotificationUpdateManyWithoutToWhomInput
  ownerCompanies: CompanyUpdateManyWithoutOwnerInput
  password: StringFieldUpdateOperationsInput
  publishedEvent: EventUpdateManyWithoutUserInput
  role: NullableEnumRoleFieldUpdateOperationsInput
  shortDescription: NullableStringFieldUpdateOperationsInput
  tokenVersion: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutGroupAdminsInput {
  StreamMessage: StreamMessageUpdateManyWithoutSenderInput
  avatar: MediaUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstname: StringFieldUpdateOperationsInput
  groups: MessagerGroupUpdateManyWithoutMembersInput
  inWorks: WorkerUpdateManyWithoutWorkerInput
  lastname: StringFieldUpdateOperationsInput
  login: StringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutSenderInput
  moderatedEntity: ModerationUpdateManyWithoutAuditorInput
  notifications: NotificationUpdateManyWithoutToWhomInput
  ownerCompanies: CompanyUpdateManyWithoutOwnerInput
  password: StringFieldUpdateOperationsInput
  publishedEvent: EventUpdateManyWithoutUserInput
  role: NullableEnumRoleFieldUpdateOperationsInput
  shortDescription: NullableStringFieldUpdateOperationsInput
  tokenVersion: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutGroupsInput {
  StreamMessage: StreamMessageUpdateManyWithoutSenderInput
  avatar: MediaUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstname: StringFieldUpdateOperationsInput
  groupAdmins: MessagerGroupUpdateManyWithoutAdminsInput
  inWorks: WorkerUpdateManyWithoutWorkerInput
  lastname: StringFieldUpdateOperationsInput
  login: StringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutSenderInput
  moderatedEntity: ModerationUpdateManyWithoutAuditorInput
  notifications: NotificationUpdateManyWithoutToWhomInput
  ownerCompanies: CompanyUpdateManyWithoutOwnerInput
  password: StringFieldUpdateOperationsInput
  publishedEvent: EventUpdateManyWithoutUserInput
  role: NullableEnumRoleFieldUpdateOperationsInput
  shortDescription: NullableStringFieldUpdateOperationsInput
  tokenVersion: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutInWorksInput {
  StreamMessage: StreamMessageUpdateManyWithoutSenderInput
  avatar: MediaUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstname: StringFieldUpdateOperationsInput
  groupAdmins: MessagerGroupUpdateManyWithoutAdminsInput
  groups: MessagerGroupUpdateManyWithoutMembersInput
  lastname: StringFieldUpdateOperationsInput
  login: StringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutSenderInput
  moderatedEntity: ModerationUpdateManyWithoutAuditorInput
  notifications: NotificationUpdateManyWithoutToWhomInput
  ownerCompanies: CompanyUpdateManyWithoutOwnerInput
  password: StringFieldUpdateOperationsInput
  publishedEvent: EventUpdateManyWithoutUserInput
  role: NullableEnumRoleFieldUpdateOperationsInput
  shortDescription: NullableStringFieldUpdateOperationsInput
  tokenVersion: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutMessagesInput {
  StreamMessage: StreamMessageUpdateManyWithoutSenderInput
  avatar: MediaUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstname: StringFieldUpdateOperationsInput
  groupAdmins: MessagerGroupUpdateManyWithoutAdminsInput
  groups: MessagerGroupUpdateManyWithoutMembersInput
  inWorks: WorkerUpdateManyWithoutWorkerInput
  lastname: StringFieldUpdateOperationsInput
  login: StringFieldUpdateOperationsInput
  moderatedEntity: ModerationUpdateManyWithoutAuditorInput
  notifications: NotificationUpdateManyWithoutToWhomInput
  ownerCompanies: CompanyUpdateManyWithoutOwnerInput
  password: StringFieldUpdateOperationsInput
  publishedEvent: EventUpdateManyWithoutUserInput
  role: NullableEnumRoleFieldUpdateOperationsInput
  shortDescription: NullableStringFieldUpdateOperationsInput
  tokenVersion: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutModeratedEntityInput {
  StreamMessage: StreamMessageUpdateManyWithoutSenderInput
  avatar: MediaUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstname: StringFieldUpdateOperationsInput
  groupAdmins: MessagerGroupUpdateManyWithoutAdminsInput
  groups: MessagerGroupUpdateManyWithoutMembersInput
  inWorks: WorkerUpdateManyWithoutWorkerInput
  lastname: StringFieldUpdateOperationsInput
  login: StringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutSenderInput
  notifications: NotificationUpdateManyWithoutToWhomInput
  ownerCompanies: CompanyUpdateManyWithoutOwnerInput
  password: StringFieldUpdateOperationsInput
  publishedEvent: EventUpdateManyWithoutUserInput
  role: NullableEnumRoleFieldUpdateOperationsInput
  shortDescription: NullableStringFieldUpdateOperationsInput
  tokenVersion: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutOwnerCompaniesInput {
  StreamMessage: StreamMessageUpdateManyWithoutSenderInput
  avatar: MediaUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstname: StringFieldUpdateOperationsInput
  groupAdmins: MessagerGroupUpdateManyWithoutAdminsInput
  groups: MessagerGroupUpdateManyWithoutMembersInput
  inWorks: WorkerUpdateManyWithoutWorkerInput
  lastname: StringFieldUpdateOperationsInput
  login: StringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutSenderInput
  moderatedEntity: ModerationUpdateManyWithoutAuditorInput
  notifications: NotificationUpdateManyWithoutToWhomInput
  password: StringFieldUpdateOperationsInput
  publishedEvent: EventUpdateManyWithoutUserInput
  role: NullableEnumRoleFieldUpdateOperationsInput
  shortDescription: NullableStringFieldUpdateOperationsInput
  tokenVersion: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutPublishedEventInput {
  StreamMessage: StreamMessageUpdateManyWithoutSenderInput
  avatar: MediaUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstname: StringFieldUpdateOperationsInput
  groupAdmins: MessagerGroupUpdateManyWithoutAdminsInput
  groups: MessagerGroupUpdateManyWithoutMembersInput
  inWorks: WorkerUpdateManyWithoutWorkerInput
  lastname: StringFieldUpdateOperationsInput
  login: StringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutSenderInput
  moderatedEntity: ModerationUpdateManyWithoutAuditorInput
  notifications: NotificationUpdateManyWithoutToWhomInput
  ownerCompanies: CompanyUpdateManyWithoutOwnerInput
  password: StringFieldUpdateOperationsInput
  role: NullableEnumRoleFieldUpdateOperationsInput
  shortDescription: NullableStringFieldUpdateOperationsInput
  tokenVersion: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutStreamMessageInput {
  avatar: MediaUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstname: StringFieldUpdateOperationsInput
  groupAdmins: MessagerGroupUpdateManyWithoutAdminsInput
  groups: MessagerGroupUpdateManyWithoutMembersInput
  inWorks: WorkerUpdateManyWithoutWorkerInput
  lastname: StringFieldUpdateOperationsInput
  login: StringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutSenderInput
  moderatedEntity: ModerationUpdateManyWithoutAuditorInput
  notifications: NotificationUpdateManyWithoutToWhomInput
  ownerCompanies: CompanyUpdateManyWithoutOwnerInput
  password: StringFieldUpdateOperationsInput
  publishedEvent: EventUpdateManyWithoutUserInput
  role: NullableEnumRoleFieldUpdateOperationsInput
  shortDescription: NullableStringFieldUpdateOperationsInput
  tokenVersion: NullableIntFieldUpdateOperationsInput
}

input UserUpsertWithWhereUniqueWithoutAvatarInput {
  create: UserCreateWithoutAvatarInput!
  update: UserUpdateWithoutAvatarInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithWhereUniqueWithoutGroupAdminsInput {
  create: UserCreateWithoutGroupAdminsInput!
  update: UserUpdateWithoutGroupAdminsInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithWhereUniqueWithoutGroupsInput {
  create: UserCreateWithoutGroupsInput!
  update: UserUpdateWithoutGroupsInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithoutInWorksInput {
  create: UserCreateWithoutInWorksInput!
  update: UserUpdateWithoutInWorksInput!
}

input UserUpsertWithoutMessagesInput {
  create: UserCreateWithoutMessagesInput!
  update: UserUpdateWithoutMessagesInput!
}

input UserUpsertWithoutModeratedEntityInput {
  create: UserCreateWithoutModeratedEntityInput!
  update: UserUpdateWithoutModeratedEntityInput!
}

input UserUpsertWithoutOwnerCompaniesInput {
  create: UserCreateWithoutOwnerCompaniesInput!
  update: UserUpdateWithoutOwnerCompaniesInput!
}

input UserUpsertWithoutPublishedEventInput {
  create: UserCreateWithoutPublishedEventInput!
  update: UserUpdateWithoutPublishedEventInput!
}

input UserUpsertWithoutStreamMessageInput {
  create: UserCreateWithoutStreamMessageInput!
  update: UserUpdateWithoutStreamMessageInput!
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  StreamMessage: StreamMessageListRelationFilter
  avatar: MediaWhereInput
  avatarId: IntNullableFilter
  bio: StringNullableFilter
  city: StringNullableFilter
  createdAt: DateTimeFilter
  email: StringFilter
  firstname: StringFilter
  groupAdmins: MessagerGroupListRelationFilter
  groups: MessagerGroupListRelationFilter
  id: IntFilter
  inWorks: WorkerListRelationFilter
  lastname: StringFilter
  login: StringFilter
  messages: MessageListRelationFilter
  moderatedEntity: ModerationListRelationFilter
  notifications: NotificationListRelationFilter
  ownerCompanies: CompanyListRelationFilter
  password: StringFilter
  publishedEvent: EventListRelationFilter
  role: EnumRoleNullableFilter
  shortDescription: StringNullableFilter
  tokenVersion: IntNullableFilter
}

input UserWhereUniqueInput {
  email: String
  id: Int
  login: String
}

input VerificateEntityInput {
  entityId: Int!
  rejectMessage: String!
  verdict: Boolean!
}

input VerificateMutationInput {
  entityId: Int!
  entityType: moderateEntityTypes!
  rejectMessage: String
  verdict: Boolean!
}

type Worker {
  createdAt: DateTime!
  id: Int!
  position: String!
  project: Project!
  publishedPosts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int, orderBy: [PostOrderByWithRelationInput!]): [Post!]!
  worker: User!
}

input WorkerCreateInput {
  createdAt: DateTime
  position: String!
  project: ProjectCreateNestedOneWithoutWorkersInput!
  publishedPosts: PostCreateNestedManyWithoutAuthorInput
  worker: UserCreateNestedOneWithoutInWorksInput!
}

input WorkerCreateManyProjectInput {
  createdAt: DateTime
  id: Int
  position: String!
  workerID: Int!
}

input WorkerCreateManyProjectInputEnvelope {
  data: [WorkerCreateManyProjectInput!]
  skipDuplicates: Boolean
}

input WorkerCreateManyWorkerInput {
  createdAt: DateTime
  id: Int
  position: String!
  projectID: Int!
}

input WorkerCreateManyWorkerInputEnvelope {
  data: [WorkerCreateManyWorkerInput!]
  skipDuplicates: Boolean
}

input WorkerCreateNestedManyWithoutProjectInput {
  connect: [WorkerWhereUniqueInput!]
  connectOrCreate: [WorkerCreateOrConnectWithoutProjectInput!]
  create: [WorkerCreateWithoutProjectInput!]
  createMany: WorkerCreateManyProjectInputEnvelope
}

input WorkerCreateNestedManyWithoutWorkerInput {
  connect: [WorkerWhereUniqueInput!]
  connectOrCreate: [WorkerCreateOrConnectWithoutWorkerInput!]
  create: [WorkerCreateWithoutWorkerInput!]
  createMany: WorkerCreateManyWorkerInputEnvelope
}

input WorkerCreateNestedOneWithoutPublishedPostsInput {
  connect: WorkerWhereUniqueInput
  connectOrCreate: WorkerCreateOrConnectWithoutPublishedPostsInput
  create: WorkerCreateWithoutPublishedPostsInput
}

input WorkerCreateOrConnectWithoutProjectInput {
  create: WorkerCreateWithoutProjectInput!
  where: WorkerWhereUniqueInput!
}

input WorkerCreateOrConnectWithoutPublishedPostsInput {
  create: WorkerCreateWithoutPublishedPostsInput!
  where: WorkerWhereUniqueInput!
}

input WorkerCreateOrConnectWithoutWorkerInput {
  create: WorkerCreateWithoutWorkerInput!
  where: WorkerWhereUniqueInput!
}

input WorkerCreateWithoutProjectInput {
  createdAt: DateTime
  position: String!
  publishedPosts: PostCreateNestedManyWithoutAuthorInput
  worker: UserCreateNestedOneWithoutInWorksInput!
}

input WorkerCreateWithoutPublishedPostsInput {
  createdAt: DateTime
  position: String!
  project: ProjectCreateNestedOneWithoutWorkersInput!
  worker: UserCreateNestedOneWithoutInWorksInput!
}

input WorkerCreateWithoutWorkerInput {
  createdAt: DateTime
  position: String!
  project: ProjectCreateNestedOneWithoutWorkersInput!
  publishedPosts: PostCreateNestedManyWithoutAuthorInput
}

input WorkerListRelationFilter {
  every: WorkerWhereInput
  none: WorkerWhereInput
  some: WorkerWhereInput
}

input WorkerOrderByRelationAggregateInput {
  _count: SortOrder
}

input WorkerOrderByWithRelationInput {
  createdAt: SortOrder
  id: SortOrder
  position: SortOrder
  project: ProjectOrderByWithRelationInput
  projectID: SortOrder
  publishedPosts: PostOrderByRelationAggregateInput
  worker: UserOrderByWithRelationInput
  workerID: SortOrder
}

input WorkerScalarWhereInput {
  AND: [WorkerScalarWhereInput!]
  NOT: [WorkerScalarWhereInput!]
  OR: [WorkerScalarWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  position: StringFilter
  projectID: IntFilter
  workerID: IntFilter
}

input WorkerUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  position: StringFieldUpdateOperationsInput
  project: ProjectUpdateOneRequiredWithoutWorkersInput
  publishedPosts: PostUpdateManyWithoutAuthorInput
  worker: UserUpdateOneRequiredWithoutInWorksInput
}

input WorkerUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  position: StringFieldUpdateOperationsInput
}

input WorkerUpdateManyWithWhereWithoutProjectInput {
  data: WorkerUpdateManyMutationInput!
  where: WorkerScalarWhereInput!
}

input WorkerUpdateManyWithWhereWithoutWorkerInput {
  data: WorkerUpdateManyMutationInput!
  where: WorkerScalarWhereInput!
}

input WorkerUpdateManyWithoutProjectInput {
  connect: [WorkerWhereUniqueInput!]
  connectOrCreate: [WorkerCreateOrConnectWithoutProjectInput!]
  create: [WorkerCreateWithoutProjectInput!]
  createMany: WorkerCreateManyProjectInputEnvelope
  delete: [WorkerWhereUniqueInput!]
  deleteMany: [WorkerScalarWhereInput!]
  disconnect: [WorkerWhereUniqueInput!]
  set: [WorkerWhereUniqueInput!]
  update: [WorkerUpdateWithWhereUniqueWithoutProjectInput!]
  updateMany: [WorkerUpdateManyWithWhereWithoutProjectInput!]
  upsert: [WorkerUpsertWithWhereUniqueWithoutProjectInput!]
}

input WorkerUpdateManyWithoutWorkerInput {
  connect: [WorkerWhereUniqueInput!]
  connectOrCreate: [WorkerCreateOrConnectWithoutWorkerInput!]
  create: [WorkerCreateWithoutWorkerInput!]
  createMany: WorkerCreateManyWorkerInputEnvelope
  delete: [WorkerWhereUniqueInput!]
  deleteMany: [WorkerScalarWhereInput!]
  disconnect: [WorkerWhereUniqueInput!]
  set: [WorkerWhereUniqueInput!]
  update: [WorkerUpdateWithWhereUniqueWithoutWorkerInput!]
  updateMany: [WorkerUpdateManyWithWhereWithoutWorkerInput!]
  upsert: [WorkerUpsertWithWhereUniqueWithoutWorkerInput!]
}

input WorkerUpdateOneWithoutPublishedPostsInput {
  connect: WorkerWhereUniqueInput
  connectOrCreate: WorkerCreateOrConnectWithoutPublishedPostsInput
  create: WorkerCreateWithoutPublishedPostsInput
  delete: Boolean
  disconnect: Boolean
  update: WorkerUpdateWithoutPublishedPostsInput
  upsert: WorkerUpsertWithoutPublishedPostsInput
}

input WorkerUpdateWithWhereUniqueWithoutProjectInput {
  data: WorkerUpdateWithoutProjectInput!
  where: WorkerWhereUniqueInput!
}

input WorkerUpdateWithWhereUniqueWithoutWorkerInput {
  data: WorkerUpdateWithoutWorkerInput!
  where: WorkerWhereUniqueInput!
}

input WorkerUpdateWithoutProjectInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  position: StringFieldUpdateOperationsInput
  publishedPosts: PostUpdateManyWithoutAuthorInput
  worker: UserUpdateOneRequiredWithoutInWorksInput
}

input WorkerUpdateWithoutPublishedPostsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  position: StringFieldUpdateOperationsInput
  project: ProjectUpdateOneRequiredWithoutWorkersInput
  worker: UserUpdateOneRequiredWithoutInWorksInput
}

input WorkerUpdateWithoutWorkerInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  position: StringFieldUpdateOperationsInput
  project: ProjectUpdateOneRequiredWithoutWorkersInput
  publishedPosts: PostUpdateManyWithoutAuthorInput
}

input WorkerUpsertWithWhereUniqueWithoutProjectInput {
  create: WorkerCreateWithoutProjectInput!
  update: WorkerUpdateWithoutProjectInput!
  where: WorkerWhereUniqueInput!
}

input WorkerUpsertWithWhereUniqueWithoutWorkerInput {
  create: WorkerCreateWithoutWorkerInput!
  update: WorkerUpdateWithoutWorkerInput!
  where: WorkerWhereUniqueInput!
}

input WorkerUpsertWithoutPublishedPostsInput {
  create: WorkerCreateWithoutPublishedPostsInput!
  update: WorkerUpdateWithoutPublishedPostsInput!
}

input WorkerWhereInput {
  AND: [WorkerWhereInput!]
  NOT: [WorkerWhereInput!]
  OR: [WorkerWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  position: StringFilter
  project: ProjectWhereInput
  projectID: IntFilter
  publishedPosts: PostListRelationFilter
  worker: UserWhereInput
  workerID: IntFilter
}

input WorkerWhereUniqueInput {
  id: Int
}

input addEmail {
  email: String!
}

input addMembersToGroupInput {
  groupId: Int!
  membersIds: [Int]
}

enum businessModel {
  B2B
  B2B2C
  B2C
  B2G
  C2C
  G2B
  G2C
}

enum businessModelEnum {
  B2B
  B2B2C
  B2C
  B2G
  C2C
  G2B
  G2C
}

input checkNotificationInput {
  notificationId: Int!
}

input connectMediaInput {
  entityId: Int!
  entityType: entityTypes!
  mediaURL: String!
}

input createCompanyInput {
  activityKind: filteringCategoies!
  description: String!
  inn: String
  mainContact: String
  mainRegion: String
  name: String!
  shortDescription: String!
}

input createGroupInput {
  membersIds: [Int]
  title: String!
}

input createInviteInput {
  groupId: Int!
}

input createMediaInput {
  entityId: Int
  entityType: entityTypes
  fileType: String!
}

input createProjectInput {
  businessModel: businessModel
  category: filteringCategoies!
  investmentStage: investmentStage
  mainGoal: mainGoal
  name: String!
  ownerCompany: Int!
  projectMarket: projectMarket
  projectSite: String
  projectStage: projectStage
  projectType: projectType
  salesType: salesType
  shortDescription: String!
  technologyType: technologyType
}

input createStreamArgs {
  eventId: Int
}

input crowdFundingCreateInput {
  end: DateTime!
  goalSum: Float!
  projectId: Int!
  shortDescription: String!
  start: DateTime!
  title: String!
}

input crowdFundingDeleteInput {
  crowdFundingId: Int!
}

input crowdFundingQueryInput {
  crowdFundingId: Int
}

input crowdFundingUpdateInput {
  crowdFundingId: Int!
  end: DateTime
  goalSum: Float
  shortDescription: String
  start: DateTime
  title: String
}

input deleteGroupInput {
  groupId: Int!
}

input deleteMediaElementInput {
  mediaURL: String!
}

input deletePostMedia {
  mediaUrl: String!
}

input deleteProjectPresentationMedia {
  mediaUrl: String!
}

input deleteUserInput {
  userId: Int!
}

enum entityTypes {
  companyAvatar
  crowdFundingPoster
  crowdfundingStory
  eventPoster
  groupAvatar
  postMedia
  postPoster
  projectDescription
  projectMedia
  projectPoster
  userAvatar
}

enum enumPostCategory {
  news
  offer
  resource
}

enum enumSectionType {
  image
  text
  video
}

enum eventRegisteredVerdict {
  maybe
  yes
}

enum filteringCategoies {
  IT
  agriculturalIndustry
  analytic
  business
  catering
  chemicalIndustry
  connection
  constructionAndInfrastructure
  content
  creativeTechnologiesAndTheEntertainmentIndustry
  cultureAndArt
  design
  development
  education
  energy
  finance
  forestry
  geologyGeodesyAndMeteorology
  healthcareMedicinePharmaceuticals
  healthyLifestyleAndSports
  management
  mediaAndSocialNetworks
  metallurgyAndMiningIndustry
  oilAndGasIndustry
  other
  productionOfProducts
  publicUtilities
  realty
  securityAndDefenseIndustry
  stateAdministration
  theScience
  tourismAndHotelBusiness
  tradeAndRetail
  transport
}

enum filteringCategories {
  IT
  agriculturalIndustry
  analytic
  business
  catering
  chemicalIndustry
  connection
  constructionAndInfrastructure
  content
  creativeTechnologiesAndTheEntertainmentIndustry
  cultureAndArt
  design
  development
  education
  energy
  finance
  forestry
  geologyGeodesyAndMeteorology
  healthcareMedicinePharmaceuticals
  healthyLifestyleAndSports
  management
  mediaAndSocialNetworks
  metallurgyAndMiningIndustry
  oilAndGasIndustry
  other
  productionOfProducts
  publicUtilities
  realty
  securityAndDefenseIndustry
  stateAdministration
  theScience
  tourismAndHotelBusiness
  tradeAndRetail
  transport
}

input getMediaDataInput {
  entityId: Int
  fileName: String
  fileType: String
}

input getMessageInGroupInput {
  groupId: Int!
}

input getMessageInStreamInput {
  streamId: Int!
}

input getUsersInGroupInput {
  groupId: Int!
}

input getUsersWhichCantAddToGroupInput {
  groupId: Int!
}

enum investmentStage {
  angels
  ownInvestments
  preSeed
  seed
  stageA
  stageB
  stageC
}

enum investmentStageEnum {
  angels
  ownInvestments
  preSeed
  seed
  stageA
  stageB
  stageC
}

input leaveFromGroupInput {
  groupId: Int!
}

enum mainGoal {
  biometricsTasks
  computerVisionTasks
  dataMiningTasks
  humanSpeechProcessingTasks
  naturalLanguageProcessingTasks
  tasksOfRecommendationSystems
}

enum mainGoalEnum {
  biometricsTasks
  computerVisionTasks
  dataMiningTasks
  humanSpeechProcessingTasks
  naturalLanguageProcessingTasks
  tasksOfRecommendationSystems
}

enum mediaType {
  image
  video
}

enum moderateEntityTypes {
  company
  contact
  crowdFunding
  event
  post
  project
}

type payedTariffs {
  address: String!
  createdAt: DateTime!
  crowdfunding: CrowdFunding!
  email: String!
  fatherName: String!
  firstName: String!
  id: Int!
  lastName: String!
  summ: Float!
}

input payedTariffsCreateManyCrowdfundingInput {
  address: String!
  createdAt: DateTime
  email: String!
  fatherName: String!
  firstName: String!
  id: Int
  lastName: String!
  summ: Float!
}

input payedTariffsCreateManyCrowdfundingInputEnvelope {
  data: [payedTariffsCreateManyCrowdfundingInput!]
  skipDuplicates: Boolean
}

input payedTariffsCreateNestedManyWithoutCrowdfundingInput {
  connect: [payedTariffsWhereUniqueInput!]
  connectOrCreate: [payedTariffsCreateOrConnectWithoutCrowdfundingInput!]
  create: [payedTariffsCreateWithoutCrowdfundingInput!]
  createMany: payedTariffsCreateManyCrowdfundingInputEnvelope
}

input payedTariffsCreateOrConnectWithoutCrowdfundingInput {
  create: payedTariffsCreateWithoutCrowdfundingInput!
  where: payedTariffsWhereUniqueInput!
}

input payedTariffsCreateWithoutCrowdfundingInput {
  address: String!
  createdAt: DateTime
  email: String!
  fatherName: String!
  firstName: String!
  lastName: String!
  summ: Float!
}

input payedTariffsOrderByRelationAggregateInput {
  _count: SortOrder
}

input payedTariffsScalarWhereInput {
  AND: [payedTariffsScalarWhereInput!]
  NOT: [payedTariffsScalarWhereInput!]
  OR: [payedTariffsScalarWhereInput!]
  address: StringFilter
  cfId: IntFilter
  createdAt: DateTimeFilter
  email: StringFilter
  fatherName: StringFilter
  firstName: StringFilter
  id: IntFilter
  lastName: StringFilter
  summ: FloatFilter
}

input payedTariffsUpdateManyMutationInput {
  address: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  fatherName: StringFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  summ: FloatFieldUpdateOperationsInput
}

input payedTariffsUpdateManyWithWhereWithoutCrowdfundingInput {
  data: payedTariffsUpdateManyMutationInput!
  where: payedTariffsScalarWhereInput!
}

input payedTariffsUpdateManyWithoutCrowdfundingInput {
  connect: [payedTariffsWhereUniqueInput!]
  connectOrCreate: [payedTariffsCreateOrConnectWithoutCrowdfundingInput!]
  create: [payedTariffsCreateWithoutCrowdfundingInput!]
  createMany: payedTariffsCreateManyCrowdfundingInputEnvelope
  delete: [payedTariffsWhereUniqueInput!]
  deleteMany: [payedTariffsScalarWhereInput!]
  disconnect: [payedTariffsWhereUniqueInput!]
  set: [payedTariffsWhereUniqueInput!]
  update: [payedTariffsUpdateWithWhereUniqueWithoutCrowdfundingInput!]
  updateMany: [payedTariffsUpdateManyWithWhereWithoutCrowdfundingInput!]
  upsert: [payedTariffsUpsertWithWhereUniqueWithoutCrowdfundingInput!]
}

input payedTariffsUpdateWithWhereUniqueWithoutCrowdfundingInput {
  data: payedTariffsUpdateWithoutCrowdfundingInput!
  where: payedTariffsWhereUniqueInput!
}

input payedTariffsUpdateWithoutCrowdfundingInput {
  address: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  fatherName: StringFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  summ: FloatFieldUpdateOperationsInput
}

input payedTariffsUpsertWithWhereUniqueWithoutCrowdfundingInput {
  create: payedTariffsCreateWithoutCrowdfundingInput!
  update: payedTariffsUpdateWithoutCrowdfundingInput!
  where: payedTariffsWhereUniqueInput!
}

input payedTariffsWhereInput {
  AND: [payedTariffsWhereInput!]
  NOT: [payedTariffsWhereInput!]
  OR: [payedTariffsWhereInput!]
  address: StringFilter
  cfId: IntFilter
  createdAt: DateTimeFilter
  crowdfunding: CrowdFundingWhereInput
  email: StringFilter
  fatherName: StringFilter
  firstName: StringFilter
  id: IntFilter
  lastName: StringFilter
  summ: FloatFilter
}

input payedTariffsWhereUniqueInput {
  id: Int
}

input postQueryInput {
  postId: Int
}

enum projectMarket {
  AeroNet
  AeroNext
  AutoNet
  EcoNet
  EduNet
  EnergyNet
  FoodNet
  GameNet
  HealthNet
  HomeNet
  Marinet
  NeuroNet
  SafeNet
  SpaceNet
  SportNet
  TechNet
  WearNet
}

enum projectMarketEnum {
  AeroNet
  AeroNext
  AutoNet
  EcoNet
  EduNet
  EnergyNet
  FoodNet
  GameNet
  HealthNet
  HomeNet
  Marinet
  NeuroNet
  SafeNet
  SpaceNet
  SportNet
  TechNet
  WearNet
}

enum projectStage {
  ideaOrConcept
  prototypeOrMVP
  scaling
  workingProduct
}

enum projectStageEnum {
  ideaOrConcept
  prototypeOrMVP
  scaling
  workingProduct
}

enum projectType {
  hardwareAndSoftwareComplex
  hardwareSolution
  initiativeOfTheRegion
  notDefined
  service
  softwareSolution
  technology
}

enum projectTypeEnum {
  hardwareAndSoftwareComplex
  hardwareSolution
  initiativeOfTheRegion
  notDefined
  service
  softwareSolution
  technology
}

enum registeredVerdict {
  maybe
  yes
}

input removeGroupAdminInput {
  groupId: Int!
  membersIds: [Int!]
}

input removeMemberFromGroupInput {
  groupId: Int!
  memberId: Int!
}

input removeMembersFromGroupInput {
  groupId: Int!
  membersIds: [Int]
}

enum salesType {
  firstSales
  noSales
  systemSales
}

enum salesTypeEnum {
  firstSales
  noSales
  systemSales
}

enum sectionTypes {
  image
  text
  video
}

input sendMessageInput {
  groupId: Int!
  senderId: Int!
  text: String!
}

input sendStreamMessageInput {
  senderId: Int!
  streamId: Int!
  text: String!
}

input setGroupAdminInput {
  groupId: Int!
  membersIds: [Int!]
}

input setWorkerInput {
  position: String!
  projectId: Int!
  workerId: Int!
}

input subscriptionMessageInGroup {
  groupId: Int!
}

input subscriptionMessageInStream {
  streamId: Int!
}

input switchToMessagerInput {
  recipientId: Int!
  senderId: Int!
}

enum technologyType {
  Prototyping3D
  additiveTechnologies
  artificialIntelligence
  bigDataStorageAndAnalysisTechnologies
  bionics
  carbonFootprintManagement
  collaborativeTechnologies
  distributedRegistryTechnologies
  genobionics
  geoinformationSystems
  greenEnergy
  hydrogenTechnologies
  informationSecurityTechnologies
  machineLearningAndCognitiveTechnologies
  molecularEngineering
  neurotechnologiesVirtualTechnologies
  newProductionTechnologies
  personalizedMedicine
  photonics
  powerPlants
  quantumCommunicationTechnologies
  quantumTechnologies
  renewableMaterialsAndWasteRecycling
  sensorTechnology
  syntheticBiology
  technologiesForControllingBiologicalObjects
  technologiesForCreatingNewAndPortableEnergySources
  technologiesOfElectricPowerTransportation
  technologiesOfModeling
  technologiesOfRoboticsAndMechatronics
  wirelessCommunicationTechnologies
}

enum technologyTypeEnum {
  Prototyping3D
  additiveTechnologies
  artificialIntelligence
  bigDataStorageAndAnalysisTechnologies
  bionics
  carbonFootprintManagement
  collaborativeTechnologies
  distributedRegistryTechnologies
  genobionics
  geoinformationSystems
  greenEnergy
  hydrogenTechnologies
  informationSecurityTechnologies
  machineLearningAndCognitiveTechnologies
  molecularEngineering
  neurotechnologiesVirtualTechnologies
  newProductionTechnologies
  personalizedMedicine
  photonics
  powerPlants
  quantumCommunicationTechnologies
  quantumTechnologies
  renewableMaterialsAndWasteRecycling
  sensorTechnology
  syntheticBiology
  technologiesForControllingBiologicalObjects
  technologiesForCreatingNewAndPortableEnergySources
  technologiesOfElectricPowerTransportation
  technologiesOfModeling
  technologiesOfRoboticsAndMechatronics
  wirelessCommunicationTechnologies
}

input updateCompanyInput {
  activityKind: filteringCategoies
  companyId: Int!
  description: String
  inn: String
  mainContact: String
  mainRegion: String
  name: String
  shortDescription: String
}

input updateContactInput {
  adresses: [String]
  contactId: Int!
  emails: [String]
  phones: [String]
}

input updateGroupInput {
  groupId: Int!
  title: String
}

input updatePostInput {
  articleBody: String
  category: filteringCategoies
  description: String
  postId: Int!
  tags: [String]
  title: String
}

input updateProjectInput {
  businessModel: businessModel
  category: filteringCategoies
  investmentStage: investmentStage
  mainGoal: mainGoal
  name: String
  projectId: Int!
  projectMarket: projectMarket
  projectSite: String
  projectStage: projectStage
  projectType: projectType
  salesType: salesType
  shortDescription: String
  technologyType: technologyType
}

input updateStreamActivityArgs {
  streamId: Int
}

input updateUserInput {
  bio: String
  city: String
  email: String
  firstname: String
  lastname: String
  login: String
  shortDescription: String
  userId: Int
}
